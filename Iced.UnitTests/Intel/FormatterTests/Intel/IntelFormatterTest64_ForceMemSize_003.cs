/*
    Copyright (C) 2018 de4dot@gmail.com

    This file is part of Iced.

    Iced is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Iced is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Iced.  If not, see <https://www.gnu.org/licenses/>.
*/

#if !NO_INTEL_FORMATTER && !NO_FORMATTER
using System.Collections.Generic;
using Xunit;

namespace Iced.UnitTests.Intel.FormatterTests.Intel {
	public sealed class IntelFormatterTest64_ForceMemSize_003 : FormatterTest {
		[Theory]
		[MemberData(nameof(Format_Data))]
		void Format(int index, InstructionInfo info, string formattedString) => FormatBase(index, info, formattedString, IntelFormatterFactory.Create_ForceMemSize());
		public static IEnumerable<object[]> Format_Data => GetFormatData(infos, formattedStrings);

		static readonly InstructionInfo[] infos = InstructionInfos64_003.AllInfos;
		static readonly string[] formattedStrings = new string[InstructionInfos64_003.AllInfos_Length] {
			"vmovdqa64 zmm3, zmm2",
			"vmovdqa64 zmmword ptr [rax+0x40], zmm2",
			"movdqu xmm5, xmm1",
			"movdqu xmmword ptr [rax], xmm1",
			"vmovdqu xmm5, xmm1",
			"vmovdqu xmmword ptr [rax], xmm2",
			"vmovdqu ymm5, ymm1",
			"vmovdqu ymmword ptr [rax], ymm2",
			"vmovdqu32 xmm3, xmm2",
			"vmovdqu32 xmmword ptr [rax+0x10], xmm2",
			"vmovdqu32 ymm3, ymm2",
			"vmovdqu32 ymmword ptr [rax+0x20], ymm2",
			"vmovdqu32 zmm3, zmm2",
			"vmovdqu32 zmmword ptr [rax+0x40], zmm2",
			"vmovdqu64 xmm3, xmm2",
			"vmovdqu64 xmmword ptr [rax+0x10], xmm2",
			"vmovdqu64 ymm3, ymm2",
			"vmovdqu64 ymmword ptr [rax+0x20], ymm2",
			"vmovdqu64 zmm3, zmm2",
			"vmovdqu64 zmmword ptr [rax+0x40], zmm2",
			"vmovdqu8 xmm3, xmm2",
			"vmovdqu8 xmmword ptr [rax+0x10], xmm2",
			"vmovdqu8 ymm3, ymm2",
			"vmovdqu8 ymmword ptr [rax+0x20], ymm2",
			"vmovdqu8 zmm3, zmm2",
			"vmovdqu8 zmmword ptr [rax+0x40], zmm2",
			"vmovdqu16 xmm3, xmm2",
			"vmovdqu16 xmmword ptr [rax+0x10], xmm2",
			"vmovdqu16 ymm3, ymm2",
			"vmovdqu16 ymmword ptr [rax+0x20], ymm2",
			"vmovdqu16 zmm3, zmm2",
			"vmovdqu16 zmmword ptr [rax+0x40], zmm2",
			"jo 0x800000003412a550",
			"jno 0x800000003412a550",
			"jb 0x800000003412a550",
			"jae 0x800000003412a550",
			"je 0x800000003412a550",
			"jne 0x800000003412a550",
			"jbe 0x800000003412a550",
			"ja 0x800000003412a550",
			"js 0x800000003412a550",
			"jns 0x800000003412a550",
			"jp 0x800000003412a550",
			"jnp 0x800000003412a550",
			"jl 0x800000003412a550",
			"jge 0x800000003412a550",
			"jle 0x800000003412a550",
			"jg 0x800000003412a550",
			"seto al",
			"setno al",
			"setb al",
			"setae al",
			"sete al",
			"setne al",
			"setbe al",
			"seta al",
			"sets al",
			"setns al",
			"setp al",
			"setnp al",
			"setl al",
			"setge al",
			"setle al",
			"setg al",
			"kmovw k2, k3",
			"kmovw k1, word ptr [rax]",
			"kmovq k2, k3",
			"kmovq k1, qword ptr [rax]",
			"kmovb k2, k3",
			"kmovb k1, byte ptr [rax]",
			"kmovd k2, k3",
			"kmovd k1, dword ptr [rax]",
			"kmovw word ptr [rax], k1",
			"kmovq qword ptr [rax], k1",
			"kmovb byte ptr [rax], k1",
			"kmovd dword ptr [rax], k1",
			"kmovw k2, ebx",
			"kmovb k2, ebx",
			"kmovq k2, rbx",
			"kmovd k2, ebx",
			"kmovw edx, k3",
			"kmovb edx, k3",
			"kmovq rdx, k3",
			"kmovd edx, k3",
			"kortestw k2, k3",
			"kortestq k2, k3",
			"kortestb k2, k3",
			"kortestd k2, k3",
			"ktestw k2, k3",
			"ktestq k2, k3",
			"ktestb k2, k3",
			"ktestd k2, k3",
			"data16 push fs",
			"push fs",
			"data16 pop fs",
			"pop fs",
			"cpuid",
			"bt si, cx",
			"bt word ptr [rax], bx",
			"bt esi, ecx",
			"bt dword ptr [rax], ebx",
			"bt rsi, rcx",
			"bt qword ptr [rax], rbx",
			"shld si, cx, 0x5a",
			"shld word ptr [rax], bx, 0x5a",
			"shld esi, ecx, 0x5a",
			"shld dword ptr [rax], ebx, 0x5a",
			"shld rsi, rcx, 0x5a",
			"shld qword ptr [rax], rbx, 0x5a",
			"shld si, cx, cl",
			"shld word ptr [rax], bx, cl",
			"shld esi, ecx, cl",
			"shld dword ptr [rax], ebx, cl",
			"shld rsi, rcx, cl",
			"shld qword ptr [rax], rbx, cl",
			"data16 push gs",
			"push gs",
			"data16 pop gs",
			"pop gs",
			"rsm",
			"bts si, cx",
			"bts word ptr [rax], bx",
			"bts esi, ecx",
			"bts dword ptr [rax], ebx",
			"bts rsi, rcx",
			"bts qword ptr [rax], rbx",
			"shrd si, cx, 0x5a",
			"shrd word ptr [rax], bx, 0x5a",
			"shrd esi, ecx, 0x5a",
			"shrd dword ptr [rax], ebx, 0x5a",
			"shrd rsi, rcx, 0x5a",
			"shrd qword ptr [rax], rbx, 0x5a",
			"shrd si, cx, cl",
			"shrd word ptr [rax], bx, cl",
			"shrd esi, ecx, cl",
			"shrd dword ptr [rax], ebx, cl",
			"shrd rsi, rcx, cl",
			"shrd qword ptr [rax], rbx, cl",
			"fxsave [rax]",
			"fxsave64 [rax]",
			"rdfsbase ebp",
			"rdfsbase rbp",
			"fxrstor [rax]",
			"fxrstor64 [rax]",
			"rdgsbase ebp",
			"rdgsbase rbp",
			"ldmxcsr dword ptr [rax]",
			"wrfsbase ebp",
			"wrfsbase rbp",
			"vldmxcsr dword ptr [rax]",
			"stmxcsr dword ptr [rax]",
			"wrgsbase ebp",
			"wrgsbase rbp",
			"vstmxcsr dword ptr [rax]",
			"xsave [rax]",
			"xsave64 [rax]",
			"ptwrite ebp",
			"ptwrite dword ptr [rax]",
			"ptwrite rbp",
			"ptwrite qword ptr [rax]",
			"xrstor [rax]",
			"xrstor64 [rax]",
			"xsaveopt [rax]",
			"xsaveopt64 [rax]",
			"clwb byte ptr [rax]",
			"clflush byte ptr [rax]",
			"clflushopt byte ptr [rax]",
			"lfence",
			"mfence",
			"sfence",
			"imul cx, si",
			"imul bx, word ptr [rax]",
			"imul ecx, esi",
			"imul ebx, dword ptr [rax]",
			"imul rcx, rsi",
			"imul rbx, qword ptr [rax]",
			"cmpxchg dh, cl",
			"cmpxchg byte ptr [rax], bh",
			"cmpxchg si, cx",
			"cmpxchg word ptr [rax], bx",
			"cmpxchg esi, ecx",
			"cmpxchg dword ptr [rax], ebx",
			"cmpxchg rsi, rcx",
			"cmpxchg qword ptr [rax], rbx",
			"lss bx, dword ptr [rax]",
			"lss ebx, fword ptr [rax]",
			"lss rbx, tbyte ptr [rax]",
			"btr si, cx",
			"btr word ptr [rax], bx",
			"btr esi, ecx",
			"btr dword ptr [rax], ebx",
			"btr rsi, rcx",
			"btr qword ptr [rax], rbx",
			"lfs bx, dword ptr [rax]",
			"lfs ebx, fword ptr [rax]",
			"lfs rbx, tbyte ptr [rax]",
			"lgs bx, dword ptr [rax]",
			"lgs ebx, fword ptr [rax]",
			"lgs rbx, tbyte ptr [rax]",
			"movzx cx, dh",
			"movzx bx, byte ptr [rax]",
			"movzx ecx, dh",
			"movzx ebx, byte ptr [rax]",
			"movzx rcx, sil",
			"movzx rbx, byte ptr [rax]",
			"movzx cx, si",
			"movzx bx, word ptr [rax]",
			"movzx ecx, si",
			"movzx ebx, word ptr [rax]",
			"movzx rcx, si",
			"movzx rbx, word ptr [rax]",
			"popcnt cx, si",
			"popcnt bx, word ptr [rax]",
			"popcnt ecx, esi",
			"popcnt ebx, dword ptr [rax]",
			"popcnt rcx, rsi",
			"popcnt rbx, qword ptr [rax]",
			"ud1 cx, si",
			"ud1 bx, word ptr [rax]",
			"ud1 ecx, esi",
			"ud1 ebx, dword ptr [rax]",
			"ud1 rcx, rsi",
			"ud1 rbx, qword ptr [rax]",
			"bt bp, 0x5a",
			"bt word ptr [rax], 0x5a",
			"bt ebp, 0x5a",
			"bt dword ptr [rax], 0x5a",
			"bt rbp, 0x5a",
			"bt qword ptr [rax], 0x5a",
			"bts si, -0x5b",
			"bts word ptr [rax], -0x5b",
			"bts esi, -0x5b",
			"bts dword ptr [rax], -0x5b",
			"bts rsi, -0x5b",
			"bts qword ptr [rax], -0x5b",
			"btr di, 0x5a",
			"btr word ptr [rax], 0x5a",
			"btr edi, 0x5a",
			"btr dword ptr [rax], 0x5a",
			"btr rdi, 0x5a",
			"btr qword ptr [rax], 0x5a",
			"btc ax, -0x5b",
			"btc word ptr [rax], -0x5b",
			"btc eax, -0x5b",
			"btc dword ptr [rax], -0x5b",
			"btc r8, -0x5b",
			"btc qword ptr [rax], -0x5b",
			"btc si, cx",
			"btc word ptr [rax], bx",
			"btc esi, ecx",
			"btc dword ptr [rax], ebx",
			"btc rsi, rcx",
			"btc qword ptr [rax], rbx",
			"bsf cx, si",
			"bsf bx, word ptr [rax]",
			"bsf ecx, esi",
			"bsf ebx, dword ptr [rax]",
			"bsf rcx, rsi",
			"bsf rbx, qword ptr [rax]",
			"bsr cx, si",
			"bsr bx, word ptr [rax]",
			"bsr ecx, esi",
			"bsr ebx, dword ptr [rax]",
			"bsr rcx, rsi",
			"bsr rbx, qword ptr [rax]",
			"movsx cx, dh",
			"movsx bx, byte ptr [rax]",
			"movsx ecx, dh",
			"movsx ebx, byte ptr [rax]",
			"movsx rcx, sil",
			"movsx rbx, byte ptr [rax]",
			"movsx cx, si",
			"movsx bx, word ptr [rax]",
			"movsx ecx, si",
			"movsx ebx, word ptr [rax]",
			"movsx rcx, si",
			"movsx rbx, word ptr [rax]",
			"tzcnt cx, si",
			"tzcnt bx, word ptr [rax]",
			"tzcnt ecx, esi",
			"tzcnt ebx, dword ptr [rax]",
			"tzcnt rcx, rsi",
			"tzcnt rbx, qword ptr [rax]",
			"lzcnt cx, si",
			"lzcnt bx, word ptr [rax]",
			"lzcnt ecx, esi",
			"lzcnt ebx, dword ptr [rax]",
			"lzcnt rcx, rsi",
			"lzcnt rbx, qword ptr [rax]",
			"xadd dh, cl",
			"xadd byte ptr [rax], bh",
			"xadd si, cx",
			"xadd word ptr [rax], bx",
			"xadd esi, ecx",
			"xadd dword ptr [rax], ebx",
			"xadd rsi, rcx",
			"xadd qword ptr [rax], rbx",
			"cmpps xmm1, xmm5, -0x5b",
			"cmpps xmm1, xmmword ptr [rax], -0x5b",
			"vcmpps xmm2, xmm6, xmm3, -0x5b",
			"vcmpps xmm2, xmm6, xmmword ptr [rax], -0x5b",
			"vcmpps ymm2, ymm6, ymm3, -0x5b",
			"vcmpps ymm2, ymm6, ymmword ptr [rax], -0x5b",
			"vcmpps k2{k3}, xmm6, xmm3, -0x5b",
			"vcmpps k2{k3}, xmm6, xmmword ptr [rax+0x10], -0x5b",
			"vcmpps k2{k5}, xmm6, dword ptr [rax+4]{1to4}, -0x5b",
			"vcmpps k2{k3}, ymm6, ymm3, -0x5b",
			"vcmpps k2{k3}, ymm6, ymmword ptr [rax+0x20], -0x5b",
			"vcmpps k2{k5}, ymm6, dword ptr [rax+4]{1to8}, -0x5b",
			"vcmpps k2{k3}{sae}, zmm6, zmm3, -0x5b",
			"vcmpps k2{k3}, zmm6, zmmword ptr [rax+0x40], -0x5b",
			"vcmpps k2{k5}, zmm6, dword ptr [rax+4]{1to16}, -0x5b",
			"cmppd xmm1, xmm5, -0x5b",
			"cmppd xmm1, xmmword ptr [rax], -0x5b",
			"vcmppd xmm2, xmm6, xmm3, -0x5b",
			"vcmppd xmm2, xmm6, xmmword ptr [rax], -0x5b",
			"vcmppd ymm2, ymm6, ymm3, -0x5b",
			"vcmppd ymm2, ymm6, ymmword ptr [rax], -0x5b",
			"vcmppd k2{k3}, xmm6, xmm3, -0x5b",
			"vcmppd k2{k3}, xmm6, xmmword ptr [rax+0x10], -0x5b",
			"vcmppd k2{k5}, xmm6, qword ptr [rax+8]{1to2}, -0x5b",
			"vcmppd k2{k3}, ymm6, ymm3, -0x5b",
			"vcmppd k2{k3}, ymm6, ymmword ptr [rax+0x20], -0x5b",
			"vcmppd k2{k5}, ymm6, qword ptr [rax+8]{1to4}, -0x5b",
			"vcmppd k2{k3}{sae}, zmm6, zmm3, -0x5b",
			"vcmppd k2{k3}, zmm6, zmmword ptr [rax+0x40], -0x5b",
			"vcmppd k2{k5}, zmm6, qword ptr [rax+8]{1to8}, -0x5b",
			"cmpss xmm1, xmm5, -0x5b",
			"cmpss xmm1, dword ptr [rax], -0x5b",
			"vcmpss xmm2, xmm6, xmm3, -0x5b",
			"vcmpss xmm2, xmm6, dword ptr [rax], -0x5b",
			"vcmpss k2{k3}, xmm6, xmm3, -0x5b",
			"vcmpss k2{k3}, xmm6, dword ptr [rax+4], -0x5b",
			"cmpsd xmm1, xmm5, -0x5b",
			"cmpsd xmm1, qword ptr [rax], -0x5b",
			"vcmpsd xmm2, xmm6, xmm3, -0x5b",
			"vcmpsd xmm2, xmm6, qword ptr [rax], -0x5b",
			"vcmpsd k2{k3}, xmm6, xmm3, -0x5b",
			"vcmpsd k2{k3}, xmm6, qword ptr [rax+8], -0x5b",
			"movnti dword ptr [rax], ebx",
			"movnti qword ptr [rax], rbx",
			"pinsrw mmx1, ebp, -0x5b",
			"pinsrw mmx1, word ptr [rax], -0x5b",
			"pinsrw mmx1, rbp, -0x5b",
			"pinsrw mmx1, word ptr [rax], -0x5b",
			"pinsrw xmm1, ebp, -0x5b",
			"pinsrw xmm1, word ptr [rax], -0x5b",
			"pinsrw xmm1, rbp, -0x5b",
			"pinsrw xmm1, word ptr [rax], -0x5b",
			"vpinsrw xmm2, xmm6, ebx, -0x5b",
			"vpinsrw xmm2, xmm6, word ptr [rax], -0x5b",
			"vpinsrw xmm2, xmm6, rbx, -0x5b",
			"vpinsrw xmm2, xmm6, word ptr [rax], -0x5b",
			"vpinsrw xmm2, xmm6, ebx, -0x5b",
			"vpinsrw xmm2, xmm6, word ptr [rax+2], -0x5b",
			"vpinsrw xmm2, xmm6, rbx, -0x5b",
			"vpinsrw xmm2, xmm6, word ptr [rax+2], -0x5b",
			"pextrw ecx, mmx5, -0x5b",
			"pextrw rcx, mmx5, -0x5b",
			"pextrw ecx, xmm5, -0x5b",
			"pextrw rcx, xmm5, -0x5b",
			"vpextrw edx, xmm3, -0x5b",
			"vpextrw rdx, xmm3, -0x5b",
			"vpextrw edx, xmm3, -0x5b",
			"vpextrw rdx, xmm3, -0x5b",
			"shufps xmm1, xmm5, -0x5b",
			"shufps xmm1, xmmword ptr [rax], -0x5b",
			"vshufps xmm2, xmm6, xmm3, -0x5b",
			"vshufps xmm2, xmm6, xmmword ptr [rax], -0x5b",
			"vshufps ymm2, ymm6, ymm3, -0x5b",
			"vshufps ymm2, ymm6, ymmword ptr [rax], -0x5b",
			"vshufps xmm2{k3}, xmm6, xmm3, -0x5b",
			"vshufps xmm2{k3}, xmm6, xmmword ptr [rax+0x10], -0x5b",
			"vshufps xmm2{k5}{z}, xmm6, dword ptr [rax+4]{1to4}, -0x5b",
			"vshufps ymm2{k3}, ymm6, ymm3, -0x5b",
			"vshufps ymm2{k3}, ymm6, ymmword ptr [rax+0x20], -0x5b",
			"vshufps ymm2{k5}{z}, ymm6, dword ptr [rax+4]{1to8}, -0x5b",
			"vshufps zmm2{k3}, zmm6, zmm3, -0x5b",
			"vshufps zmm2{k3}, zmm6, zmmword ptr [rax+0x40], -0x5b",
			"vshufps zmm2{k5}{z}, zmm6, dword ptr [rax+4]{1to16}, -0x5b",
			"shufpd xmm1, xmm5, -0x5b",
			"shufpd xmm1, xmmword ptr [rax], -0x5b",
			"vshufpd xmm2, xmm6, xmm3, -0x5b",
			"vshufpd xmm2, xmm6, xmmword ptr [rax], -0x5b",
			"vshufpd ymm2, ymm6, ymm3, -0x5b",
			"vshufpd ymm2, ymm6, ymmword ptr [rax], -0x5b",
			"vshufpd xmm2{k3}{z}, xmm6, xmm3, -0x5b",
			"vshufpd xmm2{k3}, xmm6, xmmword ptr [rax+0x10], -0x5b",
			"vshufpd xmm2{k5}{z}, xmm6, qword ptr [rax+8]{1to2}, -0x5b",
			"vshufpd ymm2{k3}{z}, ymm6, ymm3, -0x5b",
			"vshufpd ymm2{k3}, ymm6, ymmword ptr [rax+0x20], -0x5b",
			"vshufpd ymm2{k5}{z}, ymm6, qword ptr [rax+8]{1to4}, -0x5b",
			"vshufpd zmm2{k3}{z}, zmm6, zmm3, -0x5b",
			"vshufpd zmm2{k3}, zmm6, zmmword ptr [rax+0x40], -0x5b",
			"vshufpd zmm2{k5}{z}, zmm6, qword ptr [rax+8]{1to8}, -0x5b",
			"cmpxchg8b qword ptr [rax]",
			"cmpxchg16b xmmword ptr [rax]",
			"xrstors [rax]",
			"xrstors64 [rax]",
			"xsavec [rax]",
			"xsavec64 [rax]",
			"xsaves [rax]",
			"xsaves64 [rax]",
			"vmptrld qword ptr [rax]",
			"vmclear qword ptr [rax]",
			"vmxon qword ptr [rax]",
			"rdrand dx",
			"rdrand edx",
			"rdrand rdx",
			"vmptrst qword ptr [rax]",
			"rdseed dx",
			"rdseed edx",
			"rdseed rdx",
			"rdpid rdx",
			"bswap ax",
			"bswap r8w",
			"bswap eax",
			"bswap r8d",
			"bswap rax",
			"bswap r8",
			"bswap cx",
			"bswap r9w",
			"bswap ecx",
			"bswap r9d",
			"bswap rcx",
			"bswap r9",
			"bswap dx",
			"bswap r10w",
			"bswap edx",
			"bswap r10d",
			"bswap rdx",
			"bswap r10",
			"bswap bx",
			"bswap r11w",
			"bswap ebx",
			"bswap r11d",
			"bswap rbx",
			"bswap r11",
			"bswap sp",
			"bswap r12w",
			"bswap esp",
			"bswap r12d",
			"bswap rsp",
			"bswap r12",
			"bswap bp",
			"bswap r13w",
			"bswap ebp",
			"bswap r13d",
			"bswap rbp",
			"bswap r13",
			"bswap si",
			"bswap r14w",
			"bswap esi",
			"bswap r14d",
			"bswap rsi",
			"bswap r14",
			"bswap di",
			"bswap r15w",
			"bswap edi",
			"bswap r15d",
			"bswap rdi",
			"bswap r15",
			"addsubpd xmm1, xmm5",
			"addsubpd xmm1, xmmword ptr [rax]",
			"vaddsubpd xmm2, xmm6, xmm3",
			"vaddsubpd xmm2, xmm6, xmmword ptr [rax]",
			"vaddsubpd ymm2, ymm6, ymm3",
			"vaddsubpd ymm2, ymm6, ymmword ptr [rax]",
			"addsubps xmm1, xmm5",
			"addsubps xmm1, xmmword ptr [rax]",
			"vaddsubps xmm2, xmm6, xmm3",
			"vaddsubps xmm2, xmm6, xmmword ptr [rax]",
			"vaddsubps ymm2, ymm6, ymm3",
			"vaddsubps ymm2, ymm6, ymmword ptr [rax]",
			"psrlw mmx1, mmx5",
			"psrlw mmx1, qword ptr [rax]",
			"psrlw xmm1, xmm5",
			"psrlw xmm1, xmmword ptr [rax]",
			"vpsrlw xmm2, xmm6, xmm3",
			"vpsrlw xmm2, xmm6, xmmword ptr [rax]",
			"vpsrlw ymm2, ymm6, xmm3",
			"vpsrlw ymm2, ymm6, xmmword ptr [rax]",
			"vpsrlw xmm2{k3}, xmm6, xmm3",
			"vpsrlw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsrlw ymm2{k3}, ymm6, xmm3",
			"vpsrlw ymm2{k3}, ymm6, xmmword ptr [rax+0x10]",
			"vpsrlw zmm2{k3}, zmm6, xmm3",
			"vpsrlw zmm2{k3}, zmm6, xmmword ptr [rax+0x10]",
			"psrld mmx1, mmx5",
			"psrld mmx1, qword ptr [rax]",
			"psrld xmm1, xmm5",
			"psrld xmm1, xmmword ptr [rax]",
			"vpsrld xmm2, xmm6, xmm3",
			"vpsrld xmm2, xmm6, xmmword ptr [rax]",
			"vpsrld ymm2, ymm6, xmm3",
			"vpsrld ymm2, ymm6, xmmword ptr [rax]",
			"vpsrld xmm2{k3}, xmm6, xmm3",
			"vpsrld xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsrld ymm2{k3}, ymm6, xmm3",
			"vpsrld ymm2{k3}, ymm6, xmmword ptr [rax+0x10]",
			"vpsrld zmm2{k3}, zmm6, xmm3",
			"vpsrld zmm2{k3}, zmm6, xmmword ptr [rax+0x10]",
			"psrlq mmx1, mmx5",
			"psrlq mmx1, qword ptr [rax]",
			"psrlq xmm1, xmm5",
			"psrlq xmm1, xmmword ptr [rax]",
			"vpsrlq xmm2, xmm6, xmm3",
			"vpsrlq xmm2, xmm6, xmmword ptr [rax]",
			"vpsrlq ymm2, ymm6, xmm3",
			"vpsrlq ymm2, ymm6, xmmword ptr [rax]",
			"vpsrlq xmm2{k3}, xmm6, xmm3",
			"vpsrlq xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsrlq ymm2{k3}, ymm6, xmm3",
			"vpsrlq ymm2{k3}, ymm6, xmmword ptr [rax+0x10]",
			"vpsrlq zmm2{k3}, zmm6, xmm3",
			"vpsrlq zmm2{k3}, zmm6, xmmword ptr [rax+0x10]",
			"paddq mmx1, mmx5",
			"paddq mmx1, qword ptr [rax]",
			"paddq xmm1, xmm5",
			"paddq xmm1, xmmword ptr [rax]",
			"vpaddq xmm2, xmm6, xmm3",
			"vpaddq xmm2, xmm6, xmmword ptr [rax]",
			"vpaddq ymm2, ymm6, ymm3",
			"vpaddq ymm2, ymm6, ymmword ptr [rax]",
			"vpaddq xmm2{k3}{z}, xmm6, xmm3",
			"vpaddq xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpaddq xmm2{k5}{z}, xmm6, qword ptr [rax+8]{1to2}",
			"vpaddq ymm2{k3}{z}, ymm6, ymm3",
			"vpaddq ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpaddq ymm2{k5}{z}, ymm6, qword ptr [rax+8]{1to4}",
			"vpaddq zmm2{k3}{z}, zmm6, zmm3",
			"vpaddq zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpaddq zmm2{k5}{z}, zmm6, qword ptr [rax+8]{1to8}",
			"pmullw mmx1, mmx5",
			"pmullw mmx1, qword ptr [rax]",
			"pmullw xmm1, xmm5",
			"pmullw xmm1, xmmword ptr [rax]",
			"vpmullw xmm2, xmm6, xmm3",
			"vpmullw xmm2, xmm6, xmmword ptr [rax]",
			"vpmullw ymm2, ymm6, ymm3",
			"vpmullw ymm2, ymm6, ymmword ptr [rax]",
			"vpmullw xmm2{k3}, xmm6, xmm3",
			"vpmullw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpmullw ymm2{k3}, ymm6, ymm3",
			"vpmullw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpmullw zmm2{k3}, zmm6, zmm3",
			"vpmullw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"movq xmm5, xmm1",
			"movq qword ptr [rax], xmm1",
			"vmovq xmm5, xmm1",
			"vmovq qword ptr [rax], xmm2",
			"vmovq xmm3, xmm2",
			"vmovq qword ptr [rax+8], xmm2",
			"movq2dq xmm1, mmx5",
			"movdq2q mmx1, xmm5",
			"pmovmskb ecx, mmx5",
			"pmovmskb rcx, mmx5",
			"pmovmskb ecx, xmm5",
			"pmovmskb rcx, xmm5",
			"vpmovmskb ecx, xmm5",
			"vpmovmskb rcx, xmm5",
			"vpmovmskb ecx, ymm5",
			"vpmovmskb rcx, ymm5",
			"psubusb mmx1, mmx5",
			"psubusb mmx1, qword ptr [rax]",
			"psubusb xmm1, xmm5",
			"psubusb xmm1, xmmword ptr [rax]",
			"vpsubusb xmm2, xmm6, xmm3",
			"vpsubusb xmm2, xmm6, xmmword ptr [rax]",
			"vpsubusb ymm2, ymm6, ymm3",
			"vpsubusb ymm2, ymm6, ymmword ptr [rax]",
			"vpsubusb xmm2{k3}, xmm6, xmm3",
			"vpsubusb xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsubusb ymm2{k3}, ymm6, ymm3",
			"vpsubusb ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpsubusb zmm2{k3}, zmm6, zmm3",
			"vpsubusb zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"psubusw mmx1, mmx5",
			"psubusw mmx1, qword ptr [rax]",
			"psubusw xmm1, xmm5",
			"psubusw xmm1, xmmword ptr [rax]",
			"vpsubusw xmm2, xmm6, xmm3",
			"vpsubusw xmm2, xmm6, xmmword ptr [rax]",
			"vpsubusw ymm2, ymm6, ymm3",
			"vpsubusw ymm2, ymm6, ymmword ptr [rax]",
			"vpsubusw xmm2{k3}, xmm6, xmm3",
			"vpsubusw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsubusw ymm2{k3}, ymm6, ymm3",
			"vpsubusw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpsubusw zmm2{k3}, zmm6, zmm3",
			"vpsubusw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pminub mmx1, mmx5",
			"pminub mmx1, qword ptr [rax]",
			"pminub xmm1, xmm5",
			"pminub xmm1, xmmword ptr [rax]",
			"vpminub xmm2, xmm6, xmm3",
			"vpminub xmm2, xmm6, xmmword ptr [rax]",
			"vpminub ymm2, ymm6, ymm3",
			"vpminub ymm2, ymm6, ymmword ptr [rax]",
			"vpminub xmm2{k3}, xmm6, xmm3",
			"vpminub xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpminub ymm2{k3}, ymm6, ymm3",
			"vpminub ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpminub zmm2{k3}, zmm6, zmm3",
			"vpminub zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pand mmx1, mmx5",
			"pand mmx1, qword ptr [rax]",
			"pand xmm1, xmm5",
			"pand xmm1, xmmword ptr [rax]",
			"vpand xmm2, xmm6, xmm3",
			"vpand xmm2, xmm6, xmmword ptr [rax]",
			"vpand ymm2, ymm6, ymm3",
			"vpand ymm2, ymm6, ymmword ptr [rax]",
			"vpandd xmm2{k3}{z}, xmm6, xmm3",
			"vpandd xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpandd xmm2{k5}{z}, xmm6, dword ptr [rax+4]{1to4}",
			"vpandd ymm2{k3}{z}, ymm6, ymm3",
			"vpandd ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpandd ymm2{k5}{z}, ymm6, dword ptr [rax+4]{1to8}",
			"vpandd zmm2{k3}{z}, zmm6, zmm3",
			"vpandd zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpandd zmm2{k5}{z}, zmm6, dword ptr [rax+4]{1to16}",
			"vpandq xmm2{k3}{z}, xmm6, xmm3",
			"vpandq xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpandq xmm2{k5}{z}, xmm6, qword ptr [rax+8]{1to2}",
			"vpandq ymm2{k3}{z}, ymm6, ymm3",
			"vpandq ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpandq ymm2{k5}{z}, ymm6, qword ptr [rax+8]{1to4}",
			"vpandq zmm2{k3}{z}, zmm6, zmm3",
			"vpandq zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpandq zmm2{k5}{z}, zmm6, qword ptr [rax+8]{1to8}",
			"paddusb mmx1, mmx5",
			"paddusb mmx1, qword ptr [rax]",
			"paddusb xmm1, xmm5",
			"paddusb xmm1, xmmword ptr [rax]",
			"vpaddusb xmm2, xmm6, xmm3",
			"vpaddusb xmm2, xmm6, xmmword ptr [rax]",
			"vpaddusb ymm2, ymm6, ymm3",
			"vpaddusb ymm2, ymm6, ymmword ptr [rax]",
			"vpaddusb xmm2{k3}, xmm6, xmm3",
			"vpaddusb xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpaddusb ymm2{k3}, ymm6, ymm3",
			"vpaddusb ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpaddusb zmm2{k3}, zmm6, zmm3",
			"vpaddusb zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"paddusw mmx1, mmx5",
			"paddusw mmx1, qword ptr [rax]",
			"paddusw xmm1, xmm5",
			"paddusw xmm1, xmmword ptr [rax]",
			"vpaddusw xmm2, xmm6, xmm3",
			"vpaddusw xmm2, xmm6, xmmword ptr [rax]",
			"vpaddusw ymm2, ymm6, ymm3",
			"vpaddusw ymm2, ymm6, ymmword ptr [rax]",
			"vpaddusw xmm2{k3}, xmm6, xmm3",
			"vpaddusw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpaddusw ymm2{k3}, ymm6, ymm3",
			"vpaddusw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpaddusw zmm2{k3}, zmm6, zmm3",
			"vpaddusw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pmaxub mmx1, mmx5",
			"pmaxub mmx1, qword ptr [rax]",
			"pmaxub xmm1, xmm5",
			"pmaxub xmm1, xmmword ptr [rax]",
			"vpmaxub xmm2, xmm6, xmm3",
			"vpmaxub xmm2, xmm6, xmmword ptr [rax]",
			"vpmaxub ymm2, ymm6, ymm3",
			"vpmaxub ymm2, ymm6, ymmword ptr [rax]",
			"vpmaxub xmm2{k3}, xmm6, xmm3",
			"vpmaxub xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpmaxub ymm2{k3}, ymm6, ymm3",
			"vpmaxub ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpmaxub zmm2{k3}, zmm6, zmm3",
			"vpmaxub zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pandn mmx1, mmx5",
			"pandn mmx1, qword ptr [rax]",
			"pandn xmm1, xmm5",
			"pandn xmm1, xmmword ptr [rax]",
			"vpandn xmm2, xmm6, xmm3",
			"vpandn xmm2, xmm6, xmmword ptr [rax]",
			"vpandn ymm2, ymm6, ymm3",
			"vpandn ymm2, ymm6, ymmword ptr [rax]",
			"vpandnd xmm2{k3}{z}, xmm6, xmm3",
			"vpandnd xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpandnd xmm2{k5}{z}, xmm6, dword ptr [rax+4]{1to4}",
			"vpandnd ymm2{k3}{z}, ymm6, ymm3",
			"vpandnd ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpandnd ymm2{k5}{z}, ymm6, dword ptr [rax+4]{1to8}",
			"vpandnd zmm2{k3}{z}, zmm6, zmm3",
			"vpandnd zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpandnd zmm2{k5}{z}, zmm6, dword ptr [rax+4]{1to16}",
			"vpandnq xmm2{k3}{z}, xmm6, xmm3",
			"vpandnq xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpandnq xmm2{k5}{z}, xmm6, qword ptr [rax+8]{1to2}",
			"vpandnq ymm2{k3}{z}, ymm6, ymm3",
			"vpandnq ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpandnq ymm2{k5}{z}, ymm6, qword ptr [rax+8]{1to4}",
			"vpandnq zmm2{k3}{z}, zmm6, zmm3",
			"vpandnq zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpandnq zmm2{k5}{z}, zmm6, qword ptr [rax+8]{1to8}",
			"pavgb mmx1, mmx5",
			"pavgb mmx1, qword ptr [rax]",
			"pavgb xmm1, xmm5",
			"pavgb xmm1, xmmword ptr [rax]",
			"vpavgb xmm2, xmm6, xmm3",
			"vpavgb xmm2, xmm6, xmmword ptr [rax]",
			"vpavgb ymm2, ymm6, ymm3",
			"vpavgb ymm2, ymm6, ymmword ptr [rax]",
			"vpavgb xmm2{k3}, xmm6, xmm3",
			"vpavgb xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpavgb ymm2{k3}, ymm6, ymm3",
			"vpavgb ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpavgb zmm2{k3}, zmm6, zmm3",
			"vpavgb zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"psraw mmx1, mmx5",
			"psraw mmx1, qword ptr [rax]",
			"psraw xmm1, xmm5",
			"psraw xmm1, xmmword ptr [rax]",
			"vpsraw xmm2, xmm6, xmm3",
			"vpsraw xmm2, xmm6, xmmword ptr [rax]",
			"vpsraw ymm2, ymm6, xmm3",
			"vpsraw ymm2, ymm6, xmmword ptr [rax]",
			"vpsraw xmm2{k3}, xmm6, xmm3",
			"vpsraw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsraw ymm2{k3}, ymm6, xmm3",
			"vpsraw ymm2{k3}, ymm6, xmmword ptr [rax+0x10]",
			"vpsraw zmm2{k3}, zmm6, xmm3",
			"vpsraw zmm2{k3}, zmm6, xmmword ptr [rax+0x10]",
			"psrad mmx1, mmx5",
			"psrad mmx1, qword ptr [rax]",
			"psrad xmm1, xmm5",
			"psrad xmm1, xmmword ptr [rax]",
			"vpsrad xmm2, xmm6, xmm3",
			"vpsrad xmm2, xmm6, xmmword ptr [rax]",
			"vpsrad ymm2, ymm6, xmm3",
			"vpsrad ymm2, ymm6, xmmword ptr [rax]",
			"vpsrad xmm2{k3}, xmm6, xmm3",
			"vpsrad xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsrad ymm2{k3}, ymm6, xmm3",
			"vpsrad ymm2{k3}, ymm6, xmmword ptr [rax+0x10]",
			"vpsrad zmm2{k3}, zmm6, xmm3",
			"vpsrad zmm2{k3}, zmm6, xmmword ptr [rax+0x10]",
			"vpsraq xmm2{k3}, xmm6, xmm3",
			"vpsraq xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsraq ymm2{k3}, ymm6, xmm3",
			"vpsraq ymm2{k3}, ymm6, xmmword ptr [rax+0x10]",
			"vpsraq zmm2{k3}, zmm6, xmm3",
			"vpsraq zmm2{k3}, zmm6, xmmword ptr [rax+0x10]",
			"pavgw mmx1, mmx5",
			"pavgw mmx1, qword ptr [rax]",
			"pavgw xmm1, xmm5",
			"pavgw xmm1, xmmword ptr [rax]",
			"vpavgw xmm2, xmm6, xmm3",
			"vpavgw xmm2, xmm6, xmmword ptr [rax]",
			"vpavgw ymm2, ymm6, ymm3",
			"vpavgw ymm2, ymm6, ymmword ptr [rax]",
			"vpavgw xmm2{k3}, xmm6, xmm3",
			"vpavgw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpavgw ymm2{k3}, ymm6, ymm3",
			"vpavgw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpavgw zmm2{k3}, zmm6, zmm3",
			"vpavgw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pmulhuw mmx1, mmx5",
			"pmulhuw mmx1, qword ptr [rax]",
			"pmulhuw xmm1, xmm5",
			"pmulhuw xmm1, xmmword ptr [rax]",
			"vpmulhuw xmm2, xmm6, xmm3",
			"vpmulhuw xmm2, xmm6, xmmword ptr [rax]",
			"vpmulhuw ymm2, ymm6, ymm3",
			"vpmulhuw ymm2, ymm6, ymmword ptr [rax]",
			"vpmulhuw xmm2{k3}, xmm6, xmm3",
			"vpmulhuw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpmulhuw ymm2{k3}, ymm6, ymm3",
			"vpmulhuw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpmulhuw zmm2{k3}, zmm6, zmm3",
			"vpmulhuw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pmulhw mmx1, mmx5",
			"pmulhw mmx1, qword ptr [rax]",
			"pmulhw xmm1, xmm5",
			"pmulhw xmm1, xmmword ptr [rax]",
			"vpmulhw xmm2, xmm6, xmm3",
			"vpmulhw xmm2, xmm6, xmmword ptr [rax]",
			"vpmulhw ymm2, ymm6, ymm3",
			"vpmulhw ymm2, ymm6, ymmword ptr [rax]",
			"vpmulhw xmm2{k3}, xmm6, xmm3",
			"vpmulhw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpmulhw ymm2{k3}, ymm6, ymm3",
			"vpmulhw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpmulhw zmm2{k3}, zmm6, zmm3",
			"vpmulhw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"cvttpd2dq xmm1, xmm5",
			"cvttpd2dq xmm1, xmmword ptr [rax]",
			"vcvttpd2dq xmm1, xmm5",
			"vcvttpd2dq xmm2, xmmword ptr [rax]",
			"vcvttpd2dq xmm1, ymm5",
			"vcvttpd2dq xmm2, ymmword ptr [rax]",
			"vcvttpd2dq xmm2{k3}, xmm3",
			"vcvttpd2dq xmm2, xmmword ptr [rax+0x10]",
			"vcvttpd2dq xmm2{k3}{z}, qword ptr [rax+8]{1to2}",
			"vcvttpd2dq xmm2{k3}, ymm3",
			"vcvttpd2dq xmm2, ymmword ptr [rax+0x20]",
			"vcvttpd2dq xmm2{k3}{z}, qword ptr [rax+8]{1to4}",
			"vcvttpd2dq ymm2{k3}, zmm3",
			"vcvttpd2dq ymm2, zmmword ptr [rax+0x40]",
			"vcvttpd2dq ymm2{k3}{z}, qword ptr [rax+8]{1to8}",
			"cvtdq2pd xmm1, xmm5",
			"cvtdq2pd xmm1, qword ptr [rax]",
			"vcvtdq2pd xmm1, xmm5",
			"vcvtdq2pd xmm2, qword ptr [rax]",
			"vcvtdq2pd ymm1, xmm5",
			"vcvtdq2pd ymm2, xmmword ptr [rax]",
			"vcvtdq2pd xmm2{k3}, xmm3",
			"vcvtdq2pd xmm2, qword ptr [rax+8]",
			"vcvtdq2pd xmm2{k3}{z}, dword ptr [rax+4]{1to2}",
			"vcvtdq2pd ymm2{k3}, xmm3",
			"vcvtdq2pd ymm2, xmmword ptr [rax+0x10]",
			"vcvtdq2pd ymm2{k3}{z}, dword ptr [rax+4]{1to4}",
			"vcvtdq2pd zmm2{k3}, ymm3",
			"vcvtdq2pd zmm2, ymmword ptr [rax+0x20]",
			"vcvtdq2pd zmm2{k3}{z}, dword ptr [rax+4]{1to8}",
			"vcvtqq2pd xmm2{k3}, xmm3",
			"vcvtqq2pd xmm2, xmmword ptr [rax+0x10]",
			"vcvtqq2pd xmm2{k3}{z}, qword ptr [rax+8]{1to2}",
			"vcvtqq2pd ymm2{k3}, ymm3",
			"vcvtqq2pd ymm2, ymmword ptr [rax+0x20]",
			"vcvtqq2pd ymm2{k3}{z}, qword ptr [rax+8]{1to4}",
			"vcvtqq2pd zmm2{k3}, zmm3",
			"vcvtqq2pd zmm2, zmmword ptr [rax+0x40]",
			"vcvtqq2pd zmm2{k3}{z}, qword ptr [rax+8]{1to8}",
			"cvtpd2dq xmm1, xmm5",
			"cvtpd2dq xmm1, xmmword ptr [rax]",
			"vcvtpd2dq xmm1, xmm5",
			"vcvtpd2dq xmm2, xmmword ptr [rax]",
			"vcvtpd2dq xmm1, ymm5",
			"vcvtpd2dq xmm2, ymmword ptr [rax]",
			"vcvtpd2dq xmm2{k3}, xmm3",
			"vcvtpd2dq xmm2, xmmword ptr [rax+0x10]",
			"vcvtpd2dq xmm2{k3}{z}, qword ptr [rax+8]{1to2}",
			"vcvtpd2dq xmm2{k3}, ymm3",
			"vcvtpd2dq xmm2, ymmword ptr [rax+0x20]",
			"vcvtpd2dq xmm2{k3}{z}, qword ptr [rax+8]{1to4}",
			"vcvtpd2dq ymm2{k3}, zmm3",
			"vcvtpd2dq ymm2, zmmword ptr [rax+0x40]",
			"vcvtpd2dq ymm2{k3}{z}, qword ptr [rax+8]{1to8}",
			"movntq qword ptr [rax], mmx1",
			"movntdq xmmword ptr [rax], xmm1",
			"vmovntdq xmmword ptr [rax], xmm2",
			"vmovntdq ymmword ptr [rax], ymm2",
			"vmovntdq xmmword ptr [rax+0x10], xmm2",
			"vmovntdq ymmword ptr [rax+0x20], ymm2",
			"vmovntdq zmmword ptr [rax+0x40], zmm2",
			"psubsb mmx1, mmx5",
			"psubsb mmx1, qword ptr [rax]",
			"psubsb xmm1, xmm5",
			"psubsb xmm1, xmmword ptr [rax]",
			"vpsubsb xmm2, xmm6, xmm3",
			"vpsubsb xmm2, xmm6, xmmword ptr [rax]",
			"vpsubsb ymm2, ymm6, ymm3",
			"vpsubsb ymm2, ymm6, ymmword ptr [rax]",
			"vpsubsb xmm2{k3}, xmm6, xmm3",
			"vpsubsb xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsubsb ymm2{k3}, ymm6, ymm3",
			"vpsubsb ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpsubsb zmm2{k3}, zmm6, zmm3",
			"vpsubsb zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"psubsw mmx1, mmx5",
			"psubsw mmx1, qword ptr [rax]",
			"psubsw xmm1, xmm5",
			"psubsw xmm1, xmmword ptr [rax]",
			"vpsubsw xmm2, xmm6, xmm3",
			"vpsubsw xmm2, xmm6, xmmword ptr [rax]",
			"vpsubsw ymm2, ymm6, ymm3",
			"vpsubsw ymm2, ymm6, ymmword ptr [rax]",
			"vpsubsw xmm2{k3}, xmm6, xmm3",
			"vpsubsw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsubsw ymm2{k3}, ymm6, ymm3",
			"vpsubsw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpsubsw zmm2{k3}, zmm6, zmm3",
			"vpsubsw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pminsw mmx1, mmx5",
			"pminsw mmx1, qword ptr [rax]",
			"pminsw xmm1, xmm5",
			"pminsw xmm1, xmmword ptr [rax]",
			"vpminsw xmm2, xmm6, xmm3",
			"vpminsw xmm2, xmm6, xmmword ptr [rax]",
			"vpminsw ymm2, ymm6, ymm3",
			"vpminsw ymm2, ymm6, ymmword ptr [rax]",
			"vpminsw xmm2{k3}, xmm6, xmm3",
			"vpminsw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpminsw ymm2{k3}, ymm6, ymm3",
			"vpminsw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpminsw zmm2{k3}, zmm6, zmm3",
			"vpminsw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"por mmx1, mmx5",
			"por mmx1, qword ptr [rax]",
			"por xmm1, xmm5",
			"por xmm1, xmmword ptr [rax]",
			"vpor xmm2, xmm6, xmm3",
			"vpor xmm2, xmm6, xmmword ptr [rax]",
			"vpor ymm2, ymm6, ymm3",
			"vpor ymm2, ymm6, ymmword ptr [rax]",
			"vpord xmm2{k3}{z}, xmm6, xmm3",
			"vpord xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpord xmm2{k5}{z}, xmm6, dword ptr [rax+4]{1to4}",
			"vpord ymm2{k3}{z}, ymm6, ymm3",
			"vpord ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpord ymm2{k5}{z}, ymm6, dword ptr [rax+4]{1to8}",
			"vpord zmm2{k3}{z}, zmm6, zmm3",
			"vpord zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpord zmm2{k5}{z}, zmm6, dword ptr [rax+4]{1to16}",
			"vporq xmm2{k3}{z}, xmm6, xmm3",
			"vporq xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vporq xmm2{k5}{z}, xmm6, qword ptr [rax+8]{1to2}",
			"vporq ymm2{k3}{z}, ymm6, ymm3",
			"vporq ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vporq ymm2{k5}{z}, ymm6, qword ptr [rax+8]{1to4}",
			"vporq zmm2{k3}{z}, zmm6, zmm3",
			"vporq zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vporq zmm2{k5}{z}, zmm6, qword ptr [rax+8]{1to8}",
			"paddsb mmx1, mmx5",
			"paddsb mmx1, qword ptr [rax]",
			"paddsb xmm1, xmm5",
			"paddsb xmm1, xmmword ptr [rax]",
			"vpaddsb xmm2, xmm6, xmm3",
			"vpaddsb xmm2, xmm6, xmmword ptr [rax]",
			"vpaddsb ymm2, ymm6, ymm3",
			"vpaddsb ymm2, ymm6, ymmword ptr [rax]",
			"vpaddsb xmm2{k3}, xmm6, xmm3",
			"vpaddsb xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpaddsb ymm2{k3}, ymm6, ymm3",
			"vpaddsb ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpaddsb zmm2{k3}, zmm6, zmm3",
			"vpaddsb zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"paddsw mmx1, mmx5",
			"paddsw mmx1, qword ptr [rax]",
			"paddsw xmm1, xmm5",
			"paddsw xmm1, xmmword ptr [rax]",
			"vpaddsw xmm2, xmm6, xmm3",
			"vpaddsw xmm2, xmm6, xmmword ptr [rax]",
			"vpaddsw ymm2, ymm6, ymm3",
			"vpaddsw ymm2, ymm6, ymmword ptr [rax]",
			"vpaddsw xmm2{k3}, xmm6, xmm3",
			"vpaddsw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpaddsw ymm2{k3}, ymm6, ymm3",
			"vpaddsw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpaddsw zmm2{k3}, zmm6, zmm3",
			"vpaddsw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pmaxsw mmx1, mmx5",
			"pmaxsw mmx1, qword ptr [rax]",
			"pmaxsw xmm1, xmm5",
			"pmaxsw xmm1, xmmword ptr [rax]",
			"vpmaxsw xmm2, xmm6, xmm3",
			"vpmaxsw xmm2, xmm6, xmmword ptr [rax]",
			"vpmaxsw ymm2, ymm6, ymm3",
			"vpmaxsw ymm2, ymm6, ymmword ptr [rax]",
			"vpmaxsw xmm2{k3}, xmm6, xmm3",
			"vpmaxsw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpmaxsw ymm2{k3}, ymm6, ymm3",
			"vpmaxsw ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpmaxsw zmm2{k3}, zmm6, zmm3",
			"vpmaxsw zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"pxor mmx1, mmx5",
			"pxor mmx1, qword ptr [rax]",
			"pxor xmm1, xmm5",
			"pxor xmm1, xmmword ptr [rax]",
			"vpxor xmm2, xmm6, xmm3",
			"vpxor xmm2, xmm6, xmmword ptr [rax]",
			"vpxor ymm2, ymm6, ymm3",
			"vpxor ymm2, ymm6, ymmword ptr [rax]",
			"vpxord xmm2{k3}{z}, xmm6, xmm3",
			"vpxord xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpxord xmm2{k5}{z}, xmm6, dword ptr [rax+4]{1to4}",
			"vpxord ymm2{k3}{z}, ymm6, ymm3",
			"vpxord ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpxord ymm2{k5}{z}, ymm6, dword ptr [rax+4]{1to8}",
			"vpxord zmm2{k3}{z}, zmm6, zmm3",
			"vpxord zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpxord zmm2{k5}{z}, zmm6, dword ptr [rax+4]{1to16}",
			"vpxorq xmm2{k3}{z}, xmm6, xmm3",
			"vpxorq xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpxorq xmm2{k5}{z}, xmm6, qword ptr [rax+8]{1to2}",
			"vpxorq ymm2{k3}{z}, ymm6, ymm3",
			"vpxorq ymm2{k3}, ymm6, ymmword ptr [rax+0x20]",
			"vpxorq ymm2{k5}{z}, ymm6, qword ptr [rax+8]{1to4}",
			"vpxorq zmm2{k3}{z}, zmm6, zmm3",
			"vpxorq zmm2{k3}, zmm6, zmmword ptr [rax+0x40]",
			"vpxorq zmm2{k5}{z}, zmm6, qword ptr [rax+8]{1to8}",
			"lddqu xmm1, xmmword ptr [rax]",
			"vlddqu xmm2, xmmword ptr [rax]",
			"vlddqu ymm2, ymmword ptr [rax]",
			"psllw mmx1, mmx5",
			"psllw mmx1, qword ptr [rax]",
			"psllw xmm1, xmm5",
			"psllw xmm1, xmmword ptr [rax]",
			"vpsllw xmm2, xmm6, xmm3",
			"vpsllw xmm2, xmm6, xmmword ptr [rax]",
			"vpsllw ymm2, ymm6, xmm3",
			"vpsllw ymm2, ymm6, xmmword ptr [rax]",
			"vpsllw xmm2{k3}, xmm6, xmm3",
			"vpsllw xmm2{k3}, xmm6, xmmword ptr [rax+0x10]",
			"vpsllw ymm2{k3}, ymm6, xmm3",
		};
	}
}
#endif
