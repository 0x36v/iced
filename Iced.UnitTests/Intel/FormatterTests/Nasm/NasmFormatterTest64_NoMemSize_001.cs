/*
    Copyright (C) 2018 de4dot@gmail.com

    This file is part of Iced.

    Iced is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Iced is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Iced.  If not, see <https://www.gnu.org/licenses/>.
*/

#if !NO_NASM_FORMATTER && !NO_FORMATTER
using System.Collections.Generic;
using Xunit;

namespace Iced.UnitTests.Intel.FormatterTests.Nasm {
	public sealed class NasmFormatterTest64_NoMemSize_001 : FormatterTest {
		[Theory]
		[MemberData(nameof(Format_Data))]
		void Format(int index, InstructionInfo info, string formattedString) => FormatBase(index, info, formattedString, NasmFormatterFactory.Create_NoMemSize());
		public static IEnumerable<object[]> Format_Data => GetFormatData(infos, formattedStrings);

		static readonly InstructionInfo[] infos = InstructionInfos64_001.AllInfos;
		static readonly string[] formattedStrings = new string[InstructionInfos64_001.AllInfos_Length] {
			"idiv byte [rax]",
			"test cx,0xa55a",
			"test word [rax],0xa55a",
			"test ecx,0x3412a55a",
			"test dword [rax],0x3412a55a",
			"test rcx,0xffffffff8412a55a",
			"test qword [rax],0xffffffff8412a55a",
			"not cx",
			"not word [rax]",
			"not ecx",
			"not dword [rax]",
			"not rcx",
			"not qword [rax]",
			"neg si",
			"neg word [rax]",
			"neg esi",
			"neg dword [rax]",
			"neg rsi",
			"neg qword [rax]",
			"mul bp",
			"mul word [rax]",
			"mul ebp",
			"mul dword [rax]",
			"mul rbp",
			"mul qword [rax]",
			"imul si",
			"imul word [rax]",
			"imul esi",
			"imul dword [rax]",
			"imul rsi",
			"imul qword [rax]",
			"div di",
			"div word [rax]",
			"div edi",
			"div dword [rax]",
			"div rdi",
			"div qword [rax]",
			"idiv ax",
			"idiv word [rax]",
			"idiv eax",
			"idiv dword [rax]",
			"idiv r8",
			"idiv qword [rax]",
			"clc",
			"stc",
			"cli",
			"sti",
			"cld",
			"std",
			"inc cl",
			"inc byte [rax]",
			"dec dh",
			"dec byte [rax]",
			"inc cx",
			"inc word [rax]",
			"inc ecx",
			"inc dword [rax]",
			"inc rcx",
			"inc qword [rax]",
			"dec si",
			"dec word [rax]",
			"dec esi",
			"dec dword [rax]",
			"dec rsi",
			"dec qword [rax]",
			"call rcx",
			"call qword [rax]",
			"call word far [rax]",
			"call dword far [rax]",
			"call far [rax]",
			"jmp rsi",
			"jmp qword [rax]",
			"jmp word far [rax]",
			"jmp dword far [rax]",
			"jmp far [rax]",
			"push si",
			"push word [rax]",
			"push rsi",
			"push qword [rax]",
			"sldt cx",
			"o16 sldt [rax]",
			"sldt ecx",
			"sldt [rax]",
			"sldt rcx",
			"o64 sldt [rax]",
			"str dx",
			"o16 str [rax]",
			"str edx",
			"str [rax]",
			"str rdx",
			"o64 str [rax]",
			"o16 lldt bx",
			"o16 lldt [rax]",
			"lldt bx",
			"lldt [rax]",
			"o64 lldt bx",
			"o64 lldt [rax]",
			"o16 ltr sp",
			"o16 ltr [rax]",
			"ltr sp",
			"ltr [rax]",
			"o64 ltr sp",
			"o64 ltr [rax]",
			"o16 verr bp",
			"o16 verr [rax]",
			"verr bp",
			"verr [rax]",
			"o64 verr bp",
			"o64 verr [rax]",
			"o16 verw si",
			"o16 verw [rax]",
			"verw si",
			"verw [rax]",
			"o64 verw si",
			"o64 verw [rax]",
			"sgdt [rax]",
			"sidt [rax]",
			"lgdt [rax]",
			"lidt [rax]",
			"smsw bp",
			"o16 smsw [rax]",
			"smsw ebp",
			"smsw [rax]",
			"smsw rbp",
			"o64 smsw [rax]",
			"o16 lmsw si",
			"o16 lmsw [rax]",
			"lmsw si",
			"lmsw [rax]",
			"o64 lmsw si",
			"o64 lmsw [rax]",
			"invlpg [rax]",
			"enclv",
			"vmcall",
			"vmlaunch",
			"vmresume",
			"vmxoff",
			"monitor",
			"mwait",
			"clac",
			"stac",
			"encls",
			"xgetbv",
			"xsetbv",
			"vmfunc",
			"xend",
			"xtest",
			"enclu",
			"rdpkru",
			"wrpkru",
			"swapgs",
			"rdtscp",
			"lar cx,si",
			"lar bx,[rax]",
			"lar ecx,esi",
			"lar ebx,[rax]",
			"lar rcx,rsi",
			"lar rbx,[rax]",
			"lsl cx,si",
			"lsl bx,[rax]",
			"lsl ecx,esi",
			"lsl ebx,[rax]",
			"lsl rcx,rsi",
			"lsl rbx,[rax]",
			"syscall",
			"clts",
			"sysret",
			"o64 sysret",
			"invd",
			"wbinvd",
			"ud2",
			"prefetchw [rax]",
			"prefetchwt1 [rax]",
			"movups xmm1,xmm5",
			"movups xmm1,[rax]",
			"vmovups xmm1,xmm5",
			"vmovups xmm2,[rax]",
			"vmovups ymm1,ymm5",
			"vmovups ymm2,[rax]",
			"vmovups xmm2,xmm3",
			"vmovups xmm2,[rax+0x10]",
			"vmovups ymm2,ymm3",
			"vmovups ymm2,[rax+0x20]",
			"vmovups zmm2,zmm3",
			"vmovups zmm2,[rax+0x40]",
			"movupd xmm1,xmm5",
			"movupd xmm1,[rax]",
			"vmovupd xmm1,xmm5",
			"vmovupd xmm2,[rax]",
			"vmovupd ymm1,ymm5",
			"vmovupd ymm2,[rax]",
			"vmovupd xmm2,xmm3",
			"vmovupd xmm2,[rax+0x10]",
			"vmovupd ymm2,ymm3",
			"vmovupd ymm2,[rax+0x20]",
			"vmovupd zmm2,zmm3",
			"vmovupd zmm2,[rax+0x40]",
			"movss xmm1,xmm5",
			"movss xmm1,[rax]",
			"vmovss xmm1,xmm6,xmm5",
			"vmovss xmm2,[rax]",
			"vmovss xmm2,xmm6,xmm3",
			"vmovss xmm2,[rax+4]",
			"movsd xmm1,xmm5",
			"movsd xmm1,[rax]",
			"vmovsd xmm1,xmm6,xmm5",
			"vmovsd xmm2,[rax]",
			"vmovsd xmm2,xmm6,xmm3",
			"vmovsd xmm2,[rax+8]",
			"movups xmm5,xmm1",
			"movups [rax],xmm1",
			"vmovups xmm5,xmm1",
			"vmovups [rax],xmm2",
			"vmovups ymm5,ymm1",
			"vmovups [rax],ymm2",
			"vmovups xmm3,xmm2",
			"vmovups [rax+0x10],xmm2",
			"vmovups ymm3,ymm2",
			"vmovups [rax+0x20],ymm2",
			"vmovups zmm3,zmm2",
			"vmovups [rax+0x40],zmm2",
			"movupd xmm5,xmm1",
			"movupd [rax],xmm1",
			"vmovupd xmm5,xmm1",
			"vmovupd [rax],xmm2",
			"vmovupd ymm5,ymm1",
			"vmovupd [rax],ymm2",
			"vmovupd xmm3,xmm2",
			"vmovupd [rax+0x10],xmm2",
			"vmovupd ymm3,ymm2",
			"vmovupd [rax+0x20],ymm2",
			"vmovupd zmm3,zmm2",
			"vmovupd [rax+0x40],zmm2",
			"movss xmm5,xmm1",
			"movss [rax],xmm1",
			"vmovss xmm5,xmm6,xmm1",
			"vmovss [rax],xmm2",
			"vmovss xmm3,xmm6,xmm2",
			"vmovss [rax+4],xmm2",
			"movsd xmm5,xmm1",
			"movsd [rax],xmm1",
			"vmovsd xmm5,xmm6,xmm1",
			"vmovsd [rax],xmm2",
			"vmovsd xmm3,xmm6,xmm2",
			"vmovsd [rax+8],xmm2",
			"movhlps xmm1,xmm5",
			"movlps xmm1,[rax]",
			"vmovhlps xmm2,xmm6,xmm3",
			"vmovlps xmm2,xmm6,[rax]",
			"vmovhlps xmm2,xmm6,xmm3",
			"vmovlps xmm2,xmm6,[rax+8]",
			"movlpd xmm1,[rax]",
			"vmovlpd xmm2,xmm6,[rax]",
			"vmovlpd xmm2,xmm6,[rax+8]",
			"movsldup xmm1,xmm5",
			"movsldup xmm1,[rax]",
			"vmovsldup xmm1,xmm5",
			"vmovsldup xmm2,[rax]",
			"vmovsldup ymm1,ymm5",
			"vmovsldup ymm2,[rax]",
			"vmovsldup xmm2,xmm3",
			"vmovsldup xmm2,[rax+0x10]",
			"vmovsldup ymm2,ymm3",
			"vmovsldup ymm2,[rax+0x20]",
			"vmovsldup zmm2,zmm3",
			"vmovsldup zmm2,[rax+0x40]",
			"movddup xmm1,xmm5",
			"movddup xmm1,[rax]",
			"vmovddup xmm1,xmm5",
			"vmovddup xmm2,[rax]",
			"vmovddup ymm1,ymm5",
			"vmovddup ymm2,[rax]",
			"vmovddup xmm2,xmm3",
			"vmovddup xmm2,[rax+8]",
			"vmovddup ymm2,ymm3",
			"vmovddup ymm2,[rax+0x20]",
			"vmovddup zmm2,zmm3",
			"vmovddup zmm2,[rax+0x40]",
			"movlps [rax],xmm1",
			"vmovlps [rax],xmm2",
			"vmovlps [rax+8],xmm2",
			"movlpd [rax],xmm1",
			"vmovlpd [rax],xmm2",
			"vmovlpd [rax+8],xmm2",
			"unpcklps xmm1,xmm5",
			"unpcklps xmm1,[rax]",
			"vunpcklps xmm2,xmm6,xmm3",
			"vunpcklps xmm2,xmm6,[rax]",
			"vunpcklps ymm2,ymm6,ymm3",
			"vunpcklps ymm2,ymm6,[rax]",
			"vunpcklps xmm2{k3},xmm6,xmm3",
			"vunpcklps xmm2{k3},xmm6,[rax+0x10]",
			"vunpcklps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vunpcklps ymm2{k3},ymm6,ymm3",
			"vunpcklps ymm2{k3},ymm6,[rax+0x20]",
			"vunpcklps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vunpcklps zmm2{k3},zmm6,zmm3",
			"vunpcklps zmm2{k3},zmm6,[rax+0x40]",
			"vunpcklps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"unpcklpd xmm1,xmm5",
			"unpcklpd xmm1,[rax]",
			"vunpcklpd xmm2,xmm6,xmm3",
			"vunpcklpd xmm2,xmm6,[rax]",
			"vunpcklpd ymm2,ymm6,ymm3",
			"vunpcklpd ymm2,ymm6,[rax]",
			"vunpcklpd xmm2{k3}{z},xmm6,xmm3",
			"vunpcklpd xmm2{k3},xmm6,[rax+0x10]",
			"vunpcklpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vunpcklpd ymm2{k3}{z},ymm6,ymm3",
			"vunpcklpd ymm2{k3},ymm6,[rax+0x20]",
			"vunpcklpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vunpcklpd zmm2{k3}{z},zmm6,zmm3",
			"vunpcklpd zmm2{k3},zmm6,[rax+0x40]",
			"vunpcklpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"unpckhps xmm1,xmm5",
			"unpckhps xmm1,[rax]",
			"vunpckhps xmm2,xmm6,xmm3",
			"vunpckhps xmm2,xmm6,[rax]",
			"vunpckhps ymm2,ymm6,ymm3",
			"vunpckhps ymm2,ymm6,[rax]",
			"vunpckhps xmm2{k3},xmm6,xmm3",
			"vunpckhps xmm2{k3},xmm6,[rax+0x10]",
			"vunpckhps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vunpckhps ymm2{k3},ymm6,ymm3",
			"vunpckhps ymm2{k3},ymm6,[rax+0x20]",
			"vunpckhps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vunpckhps zmm2{k3},zmm6,zmm3",
			"vunpckhps zmm2{k3},zmm6,[rax+0x40]",
			"vunpckhps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"unpckhpd xmm1,xmm5",
			"unpckhpd xmm1,[rax]",
			"vunpckhpd xmm2,xmm6,xmm3",
			"vunpckhpd xmm2,xmm6,[rax]",
			"vunpckhpd ymm2,ymm6,ymm3",
			"vunpckhpd ymm2,ymm6,[rax]",
			"vunpckhpd xmm2{k3}{z},xmm6,xmm3",
			"vunpckhpd xmm2{k3},xmm6,[rax+0x10]",
			"vunpckhpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vunpckhpd ymm2{k3}{z},ymm6,ymm3",
			"vunpckhpd ymm2{k3},ymm6,[rax+0x20]",
			"vunpckhpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vunpckhpd zmm2{k3}{z},zmm6,zmm3",
			"vunpckhpd zmm2{k3},zmm6,[rax+0x40]",
			"vunpckhpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"movlhps xmm1,xmm5",
			"vmovlhps xmm2,xmm6,xmm3",
			"vmovlhps xmm2,xmm6,xmm3",
			"movhps xmm1,[rax]",
			"vmovhps xmm2,xmm6,[rax]",
			"vmovhps xmm2,xmm6,[rax+8]",
			"movhpd xmm1,[rax]",
			"vmovhpd xmm2,xmm6,[rax]",
			"vmovhpd xmm2,xmm6,[rax+8]",
			"movshdup xmm1,xmm5",
			"movshdup xmm1,[rax]",
			"vmovshdup xmm1,xmm5",
			"vmovshdup xmm2,[rax]",
			"vmovshdup ymm1,ymm5",
			"vmovshdup ymm2,[rax]",
			"vmovshdup xmm2,xmm3",
			"vmovshdup xmm2,[rax+0x10]",
			"vmovshdup ymm2,ymm3",
			"vmovshdup ymm2,[rax+0x20]",
			"vmovshdup zmm2,zmm3",
			"vmovshdup zmm2,[rax+0x40]",
			"movhps [rax],xmm1",
			"vmovhps [rax],xmm2",
			"vmovhps [rax+8],xmm2",
			"movhpd [rax],xmm1",
			"vmovhpd [rax],xmm2",
			"vmovhpd [rax+8],xmm2",
			"prefetchnta [rax]",
			"prefetcht0 [rax]",
			"prefetcht1 [rax]",
			"prefetcht2 [rax]",
			"bndldx bnd1,[rax]",
			"bndmov bnd1,bnd2",
			"bndmov bnd1,[rax]",
			"bndcl bnd1,rdx",
			"bndcl bnd1,[rax]",
			"bndcu bnd1,rdx",
			"bndcu bnd1,[rax]",
			"bndstx [rax],bnd1",
			"bndmov bnd2,bnd1",
			"bndmov [rax],bnd1",
			"bndmk bnd1,[rax]",
			"bndcn bnd1,rdx",
			"bndcn bnd1,[rax]",
			"nop cx",
			"nop word [rax]",
			"nop ecx",
			"nop dword [rax]",
			"nop rcx",
			"nop qword [rax]",
			"mov rsi,cr3",
			"mov rsi,dr3",
			"mov cr3,rsi",
			"mov dr3,rsi",
			"movaps xmm1,xmm5",
			"movaps xmm1,[rax]",
			"vmovaps xmm1,xmm5",
			"vmovaps xmm2,[rax]",
			"vmovaps ymm1,ymm5",
			"vmovaps ymm2,[rax]",
			"vmovaps xmm2,xmm3",
			"vmovaps xmm2,[rax+0x10]",
			"vmovaps ymm2,ymm3",
			"vmovaps ymm2,[rax+0x20]",
			"vmovaps zmm2,zmm3",
			"vmovaps zmm2,[rax+0x40]",
			"movapd xmm1,xmm5",
			"movapd xmm1,[rax]",
			"vmovapd xmm1,xmm5",
			"vmovapd xmm2,[rax]",
			"vmovapd ymm1,ymm5",
			"vmovapd ymm2,[rax]",
			"vmovapd xmm2,xmm3",
			"vmovapd xmm2,[rax+0x10]",
			"vmovapd ymm2,ymm3",
			"vmovapd ymm2,[rax+0x20]",
			"vmovapd zmm2,zmm3",
			"vmovapd zmm2,[rax+0x40]",
			"movaps xmm5,xmm1",
			"movaps [rax],xmm1",
			"vmovaps xmm5,xmm1",
			"vmovaps [rax],xmm2",
			"vmovaps ymm5,ymm1",
			"vmovaps [rax],ymm2",
			"vmovaps xmm3,xmm2",
			"vmovaps [rax+0x10],xmm2",
			"vmovaps ymm3,ymm2",
			"vmovaps [rax+0x20],ymm2",
			"vmovaps zmm3,zmm2",
			"vmovaps [rax+0x40],zmm2",
			"movapd xmm5,xmm1",
			"movapd [rax],xmm1",
			"vmovapd xmm5,xmm1",
			"vmovapd [rax],xmm2",
			"vmovapd ymm5,ymm1",
			"vmovapd [rax],ymm2",
			"vmovapd xmm3,xmm2",
			"vmovapd [rax+0x10],xmm2",
			"vmovapd ymm3,ymm2",
			"vmovapd [rax+0x20],ymm2",
			"vmovapd zmm3,zmm2",
			"vmovapd [rax+0x40],zmm2",
			"cvtpi2ps xmm1,mm5",
			"cvtpi2ps xmm1,[rax]",
			"cvtpi2pd xmm1,mm5",
			"cvtpi2pd xmm1,[rax]",
			"cvtsi2ss xmm1,ebp",
			"cvtsi2ss xmm1,[rax]",
			"cvtsi2ss xmm1,rbp",
			"cvtsi2ss xmm1,[rax]",
			"vcvtsi2ss xmm2,xmm6,ebx",
			"vcvtsi2ss xmm2,xmm6,[rax]",
			"vcvtsi2ss xmm2,xmm6,rbx",
			"vcvtsi2ss xmm2,xmm6,[rax]",
			"vcvtsi2ss xmm2,xmm6,ebx",
			"vcvtsi2ss xmm2,xmm6,[rax+4]",
			"vcvtsi2ss xmm2,xmm6,rbx",
			"vcvtsi2ss xmm2,xmm6,[rax+8]",
			"cvtsi2sd xmm1,ebp",
			"cvtsi2sd xmm1,[rax]",
			"cvtsi2sd xmm1,rbp",
			"cvtsi2sd xmm1,[rax]",
			"vcvtsi2sd xmm2,xmm6,ebx",
			"vcvtsi2sd xmm2,xmm6,[rax]",
			"vcvtsi2sd xmm2,xmm6,rbx",
			"vcvtsi2sd xmm2,xmm6,[rax]",
			"vcvtsi2sd xmm2,xmm6,ebx",
			"vcvtsi2sd xmm2,xmm6,[rax+4]",
			"vcvtsi2sd xmm2,xmm6,rbx",
			"vcvtsi2sd xmm2,xmm6,[rax+8]",
			"movntps [rax],xmm1",
			"vmovntps [rax],xmm2",
			"vmovntps [rax],ymm2",
			"vmovntps [rax+0x10],xmm2",
			"vmovntps [rax+0x20],ymm2",
			"vmovntps [rax+0x40],zmm2",
			"movntpd [rax],xmm1",
			"vmovntpd [rax],xmm2",
			"vmovntpd [rax],ymm2",
			"vmovntpd [rax+0x10],xmm2",
			"vmovntpd [rax+0x20],ymm2",
			"vmovntpd [rax+0x40],zmm2",
			"cvttps2pi mm1,xmm5",
			"cvttps2pi mm1,[rax]",
			"cvttpd2pi mm1,xmm5",
			"cvttpd2pi mm1,[rax]",
			"cvttss2si ecx,xmm5",
			"cvttss2si ecx,[rax]",
			"cvttss2si rcx,xmm5",
			"cvttss2si rcx,[rax]",
			"vcvttss2si ecx,xmm5",
			"vcvttss2si edx,[rax]",
			"vcvttss2si rcx,xmm5",
			"vcvttss2si rdx,[rax]",
			"vcvttss2si edx,xmm3",
			"vcvttss2si edx,[rax+4]",
			"vcvttss2si rdx,xmm3",
			"vcvttss2si rdx,[rax+4]",
			"cvttsd2si ecx,xmm5",
			"cvttsd2si ecx,[rax]",
			"cvttsd2si rcx,xmm5",
			"cvttsd2si rcx,[rax]",
			"vcvttsd2si ecx,xmm5",
			"vcvttsd2si edx,[rax]",
			"vcvttsd2si rcx,xmm5",
			"vcvttsd2si rdx,[rax]",
			"vcvttsd2si edx,xmm3",
			"vcvttsd2si edx,[rax+8]",
			"vcvttsd2si rdx,xmm3",
			"vcvttsd2si rdx,[rax+8]",
			"cvtps2pi mm1,xmm5",
			"cvtps2pi mm1,[rax]",
			"cvtpd2pi mm1,xmm5",
			"cvtpd2pi mm1,[rax]",
			"cvtss2si ecx,xmm5",
			"cvtss2si ecx,[rax]",
			"cvtss2si rcx,xmm5",
			"cvtss2si rcx,[rax]",
			"vcvtss2si ecx,xmm5",
			"vcvtss2si edx,[rax]",
			"vcvtss2si rcx,xmm5",
			"vcvtss2si rdx,[rax]",
			"vcvtss2si edx,xmm3",
			"vcvtss2si edx,[rax+4]",
			"vcvtss2si rdx,xmm3",
			"vcvtss2si rdx,[rax+4]",
			"cvtsd2si ecx,xmm5",
			"cvtsd2si ecx,[rax]",
			"cvtsd2si rcx,xmm5",
			"cvtsd2si rcx,[rax]",
			"vcvtsd2si ecx,xmm5",
			"vcvtsd2si edx,[rax]",
			"vcvtsd2si rcx,xmm5",
			"vcvtsd2si rdx,[rax]",
			"vcvtsd2si edx,xmm3",
			"vcvtsd2si edx,[rax+8]",
			"vcvtsd2si rdx,xmm3",
			"vcvtsd2si rdx,[rax+8]",
			"ucomiss xmm1,xmm5",
			"ucomiss xmm1,[rax]",
			"vucomiss xmm2,xmm3",
			"vucomiss xmm2,[rax]",
			"vucomiss xmm2,xmm3",
			"vucomiss xmm2,[rax+4]",
			"ucomisd xmm1,xmm5",
			"ucomisd xmm1,[rax]",
			"vucomisd xmm2,xmm3",
			"vucomisd xmm2,[rax]",
			"vucomisd xmm2,xmm3",
			"vucomisd xmm2,[rax+8]",
			"comiss xmm1,xmm5",
			"comiss xmm1,[rax]",
			"comisd xmm1,xmm5",
			"comisd xmm1,[rax]",
			"vcomiss xmm2,xmm3",
			"vcomiss xmm2,[rax]",
			"vcomisd xmm2,xmm3",
			"vcomisd xmm2,[rax]",
			"vcomiss xmm2,xmm3",
			"vcomiss xmm2,[rax+4]",
			"vcomisd xmm2,xmm3",
			"vcomisd xmm2,[rax+8]",
			"wrmsr",
			"rdtsc",
			"rdmsr",
			"rdpmc",
			"sysenter",
			"sysexit",
			"o64 sysexit",
			"getsec",
			"cmovo cx,si",
			"cmovo bx,[rax]",
			"cmovo ecx,esi",
			"cmovo ebx,[rax]",
			"cmovo rcx,rsi",
			"cmovo rbx,[rax]",
			"cmovno cx,si",
			"cmovno bx,[rax]",
			"cmovno ecx,esi",
			"cmovno ebx,[rax]",
			"cmovno rcx,rsi",
			"cmovno rbx,[rax]",
			"cmovb cx,si",
			"cmovb bx,[rax]",
			"cmovb ecx,esi",
			"cmovb ebx,[rax]",
			"cmovb rcx,rsi",
			"cmovb rbx,[rax]",
			"cmovae cx,si",
			"cmovae bx,[rax]",
			"cmovae ecx,esi",
			"cmovae ebx,[rax]",
			"cmovae rcx,rsi",
			"cmovae rbx,[rax]",
			"cmove cx,si",
			"cmove bx,[rax]",
			"cmove ecx,esi",
			"cmove ebx,[rax]",
			"cmove rcx,rsi",
			"cmove rbx,[rax]",
			"cmovne cx,si",
			"cmovne bx,[rax]",
			"cmovne ecx,esi",
			"cmovne ebx,[rax]",
			"cmovne rcx,rsi",
			"cmovne rbx,[rax]",
			"cmovbe cx,si",
			"cmovbe bx,[rax]",
			"cmovbe ecx,esi",
			"cmovbe ebx,[rax]",
			"cmovbe rcx,rsi",
			"cmovbe rbx,[rax]",
			"cmova cx,si",
			"cmova bx,[rax]",
			"cmova ecx,esi",
			"cmova ebx,[rax]",
			"cmova rcx,rsi",
			"cmova rbx,[rax]",
			"cmovs cx,si",
			"cmovs bx,[rax]",
			"cmovs ecx,esi",
			"cmovs ebx,[rax]",
			"cmovs rcx,rsi",
			"cmovs rbx,[rax]",
			"cmovns cx,si",
			"cmovns bx,[rax]",
			"cmovns ecx,esi",
			"cmovns ebx,[rax]",
			"cmovns rcx,rsi",
			"cmovns rbx,[rax]",
			"cmovp cx,si",
			"cmovp bx,[rax]",
			"cmovp ecx,esi",
			"cmovp ebx,[rax]",
			"cmovp rcx,rsi",
			"cmovp rbx,[rax]",
			"cmovnp cx,si",
			"cmovnp bx,[rax]",
			"cmovnp ecx,esi",
			"cmovnp ebx,[rax]",
			"cmovnp rcx,rsi",
			"cmovnp rbx,[rax]",
			"cmovl cx,si",
			"cmovl bx,[rax]",
			"cmovl ecx,esi",
			"cmovl ebx,[rax]",
			"cmovl rcx,rsi",
			"cmovl rbx,[rax]",
			"cmovge cx,si",
			"cmovge bx,[rax]",
			"cmovge ecx,esi",
			"cmovge ebx,[rax]",
			"cmovge rcx,rsi",
			"cmovge rbx,[rax]",
			"cmovle cx,si",
			"cmovle bx,[rax]",
			"cmovle ecx,esi",
			"cmovle ebx,[rax]",
			"cmovle rcx,rsi",
			"cmovle rbx,[rax]",
			"cmovg cx,si",
			"cmovg bx,[rax]",
			"cmovg ecx,esi",
			"cmovg ebx,[rax]",
			"cmovg rcx,rsi",
			"cmovg rbx,[rax]",
			"kandw k2,k6,k3",
			"kandq k2,k6,k3",
			"kandb k2,k6,k3",
			"kandd k2,k6,k3",
			"kandnw k2,k6,k3",
			"kandnq k2,k6,k3",
			"kandnb k2,k6,k3",
			"kandnd k2,k6,k3",
			"knotw k2,k3",
			"knotq k2,k3",
			"knotb k2,k3",
			"knotd k2,k3",
			"korw k2,k6,k3",
			"korq k2,k6,k3",
			"korb k2,k6,k3",
			"kord k2,k6,k3",
			"kxnorw k2,k6,k3",
			"kxnorq k2,k6,k3",
			"kxnorb k2,k6,k3",
			"kxnord k2,k6,k3",
			"kxorw k2,k6,k3",
			"kxorq k2,k6,k3",
			"kxorb k2,k6,k3",
			"kxord k2,k6,k3",
			"kaddw k2,k6,k3",
			"kaddq k2,k6,k3",
			"kaddb k2,k6,k3",
			"kaddd k2,k6,k3",
			"kunpckwd k2,k6,k3",
			"kunpckdq k2,k6,k3",
			"kunpckbw k2,k6,k3",
			"movmskps ecx,xmm5",
			"movmskps rcx,xmm5",
			"vmovmskps edx,xmm3",
			"vmovmskps rdx,xmm3",
			"vmovmskps edx,ymm3",
			"vmovmskps rdx,ymm3",
			"movmskpd ecx,xmm5",
			"movmskpd rcx,xmm5",
			"vmovmskpd edx,xmm3",
			"vmovmskpd rdx,xmm3",
			"vmovmskpd edx,ymm3",
			"vmovmskpd rdx,ymm3",
			"sqrtps xmm1,xmm5",
			"sqrtps xmm1,[rax]",
			"vsqrtps xmm2,xmm3",
			"vsqrtps xmm2,[rax]",
			"vsqrtps ymm2,ymm3",
			"vsqrtps ymm2,[rax]",
			"vsqrtps xmm2{k3},xmm3",
			"vsqrtps xmm2{k3},[rax+0x10]",
			"vsqrtps xmm2{k5}{z},[rax+4]{1to4}",
			"vsqrtps ymm2{k3},ymm3",
			"vsqrtps ymm2{k3},[rax+0x20]",
			"vsqrtps ymm2{k5}{z},[rax+4]{1to8}",
			"vsqrtps zmm2{k3}{z},zmm3,{ru-sae}",
			"vsqrtps zmm2{k3},[rax+0x40]",
			"vsqrtps zmm2{k5}{z},[rax+4]{1to16}",
			"sqrtpd xmm1,xmm5",
			"sqrtpd xmm1,[rax]",
			"vsqrtpd xmm2,xmm3",
			"vsqrtpd xmm2,[rax]",
			"vsqrtpd ymm2,ymm3",
			"vsqrtpd ymm2,[rax]",
			"vsqrtpd xmm2{k3}{z},xmm3",
			"vsqrtpd xmm2{k3},[rax+0x10]",
			"vsqrtpd xmm2{k5}{z},[rax+8]{1to2}",
			"vsqrtpd ymm2{k3}{z},ymm3",
			"vsqrtpd ymm2{k3},[rax+0x20]",
			"vsqrtpd ymm2{k5}{z},[rax+8]{1to4}",
			"vsqrtpd zmm2{k3}{z},zmm3,{ru-sae}",
			"vsqrtpd zmm2{k3},[rax+0x40]",
			"vsqrtpd zmm2{k5}{z},[rax+8]{1to8}",
			"sqrtss xmm1,xmm5",
			"sqrtss xmm1,[rax]",
			"vsqrtss xmm2,xmm6,xmm3",
			"vsqrtss xmm2,xmm6,[rax]",
			"vsqrtss xmm2{k3},xmm6,xmm3",
			"vsqrtss xmm2{k3},xmm6,[rax+4]",
			"sqrtsd xmm1,xmm5",
			"sqrtsd xmm1,[rax]",
			"vsqrtsd xmm2,xmm6,xmm3",
			"vsqrtsd xmm2,xmm6,[rax]",
			"vsqrtsd xmm2{k3}{z},xmm6,xmm3",
			"vsqrtsd xmm2{k3},xmm6,[rax+8]",
			"rsqrtps xmm1,xmm5",
			"rsqrtps xmm1,[rax]",
			"vrsqrtps xmm2,xmm3",
			"vrsqrtps xmm2,[rax]",
			"vrsqrtps ymm2,ymm3",
			"vrsqrtps ymm2,[rax]",
			"rsqrtss xmm1,xmm5",
			"rsqrtss xmm1,[rax]",
			"vrsqrtss xmm2,xmm6,xmm3",
			"vrsqrtss xmm2,xmm6,[rax]",
			"rcpps xmm1,xmm5",
			"rcpps xmm1,[rax]",
			"vrcpps xmm2,xmm3",
			"vrcpps xmm2,[rax]",
			"vrcpps ymm2,ymm3",
			"vrcpps ymm2,[rax]",
			"rcpss xmm1,xmm5",
			"rcpss xmm1,[rax]",
			"vrcpss xmm2,xmm6,xmm3",
			"vrcpss xmm2,xmm6,[rax]",
			"andps xmm1,xmm5",
			"andps xmm1,[rax]",
			"vandps xmm2,xmm6,xmm3",
			"vandps xmm2,xmm6,[rax]",
			"vandps ymm2,ymm6,ymm3",
			"vandps ymm2,ymm6,[rax]",
			"vandps xmm2{k3},xmm6,xmm3",
			"vandps xmm2{k3},xmm6,[rax+0x10]",
			"vandps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vandps ymm2{k3},ymm6,ymm3",
			"vandps ymm2{k3},ymm6,[rax+0x20]",
			"vandps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vandps zmm2{k3},zmm6,zmm3",
			"vandps zmm2{k3},zmm6,[rax+0x40]",
			"vandps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"andpd xmm1,xmm5",
			"andpd xmm1,[rax]",
			"vandpd xmm2,xmm6,xmm3",
			"vandpd xmm2,xmm6,[rax]",
			"vandpd ymm2,ymm6,ymm3",
			"vandpd ymm2,ymm6,[rax]",
			"vandpd xmm2{k3}{z},xmm6,xmm3",
			"vandpd xmm2{k3},xmm6,[rax+0x10]",
			"vandpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vandpd ymm2{k3}{z},ymm6,ymm3",
			"vandpd ymm2{k3},ymm6,[rax+0x20]",
			"vandpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vandpd zmm2{k3}{z},zmm6,zmm3",
			"vandpd zmm2{k3},zmm6,[rax+0x40]",
			"vandpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"andnps xmm1,xmm5",
			"andnps xmm1,[rax]",
			"vandnps xmm2,xmm6,xmm3",
			"vandnps xmm2,xmm6,[rax]",
			"vandnps ymm2,ymm6,ymm3",
			"vandnps ymm2,ymm6,[rax]",
			"vandnps xmm2{k3},xmm6,xmm3",
			"vandnps xmm2{k3},xmm6,[rax+0x10]",
			"vandnps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vandnps ymm2{k3},ymm6,ymm3",
			"vandnps ymm2{k3},ymm6,[rax+0x20]",
			"vandnps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vandnps zmm2{k3},zmm6,zmm3",
			"vandnps zmm2{k3},zmm6,[rax+0x40]",
			"vandnps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"andnpd xmm1,xmm5",
			"andnpd xmm1,[rax]",
			"vandnpd xmm2,xmm6,xmm3",
			"vandnpd xmm2,xmm6,[rax]",
			"vandnpd ymm2,ymm6,ymm3",
			"vandnpd ymm2,ymm6,[rax]",
			"vandnpd xmm2{k3}{z},xmm6,xmm3",
			"vandnpd xmm2{k3},xmm6,[rax+0x10]",
			"vandnpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vandnpd ymm2{k3}{z},ymm6,ymm3",
			"vandnpd ymm2{k3},ymm6,[rax+0x20]",
			"vandnpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vandnpd zmm2{k3}{z},zmm6,zmm3",
			"vandnpd zmm2{k3},zmm6,[rax+0x40]",
			"vandnpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"orps xmm1,xmm5",
			"orps xmm1,[rax]",
			"vorps xmm2,xmm6,xmm3",
			"vorps xmm2,xmm6,[rax]",
			"vorps ymm2,ymm6,ymm3",
			"vorps ymm2,ymm6,[rax]",
			"vorps xmm2{k3},xmm6,xmm3",
			"vorps xmm2{k3},xmm6,[rax+0x10]",
			"vorps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vorps ymm2{k3},ymm6,ymm3",
			"vorps ymm2{k3},ymm6,[rax+0x20]",
			"vorps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vorps zmm2{k3},zmm6,zmm3",
			"vorps zmm2{k3},zmm6,[rax+0x40]",
			"vorps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"orpd xmm1,xmm5",
			"orpd xmm1,[rax]",
			"vorpd xmm2,xmm6,xmm3",
			"vorpd xmm2,xmm6,[rax]",
			"vorpd ymm2,ymm6,ymm3",
			"vorpd ymm2,ymm6,[rax]",
			"vorpd xmm2{k3}{z},xmm6,xmm3",
			"vorpd xmm2{k3},xmm6,[rax+0x10]",
			"vorpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vorpd ymm2{k3}{z},ymm6,ymm3",
			"vorpd ymm2{k3},ymm6,[rax+0x20]",
			"vorpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vorpd zmm2{k3}{z},zmm6,zmm3",
			"vorpd zmm2{k3},zmm6,[rax+0x40]",
			"vorpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"xorps xmm1,xmm5",
			"xorps xmm1,[rax]",
			"vxorps xmm2,xmm6,xmm3",
			"vxorps xmm2,xmm6,[rax]",
			"vxorps ymm2,ymm6,ymm3",
			"vxorps ymm2,ymm6,[rax]",
			"vxorps xmm2{k3},xmm6,xmm3",
			"vxorps xmm2{k3},xmm6,[rax+0x10]",
			"vxorps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vxorps ymm2{k3},ymm6,ymm3",
			"vxorps ymm2{k3},ymm6,[rax+0x20]",
			"vxorps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vxorps zmm2{k3},zmm6,zmm3",
			"vxorps zmm2{k3},zmm6,[rax+0x40]",
			"vxorps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"xorpd xmm1,xmm5",
			"xorpd xmm1,[rax]",
			"vxorpd xmm2,xmm6,xmm3",
			"vxorpd xmm2,xmm6,[rax]",
			"vxorpd ymm2,ymm6,ymm3",
			"vxorpd ymm2,ymm6,[rax]",
			"vxorpd xmm2{k3}{z},xmm6,xmm3",
			"vxorpd xmm2{k3},xmm6,[rax+0x10]",
			"vxorpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vxorpd ymm2{k3}{z},ymm6,ymm3",
			"vxorpd ymm2{k3},ymm6,[rax+0x20]",
			"vxorpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vxorpd zmm2{k3}{z},zmm6,zmm3",
			"vxorpd zmm2{k3},zmm6,[rax+0x40]",
			"vxorpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"addps xmm1,xmm5",
			"addps xmm1,[rax]",
			"vaddps xmm2,xmm6,xmm3",
			"vaddps xmm2,xmm6,[rax]",
			"vaddps ymm2,ymm6,ymm3",
			"vaddps ymm2,ymm6,[rax]",
			"vaddps xmm2{k3},xmm6,xmm3",
			"vaddps xmm2{k3},xmm6,[rax+0x10]",
			"vaddps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vaddps ymm2{k3},ymm6,ymm3",
			"vaddps ymm2{k3},ymm6,[rax+0x20]",
			"vaddps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vaddps zmm2{k3}{z},zmm6,zmm3,{ru-sae}",
			"vaddps zmm2{k3},zmm6,[rax+0x40]",
			"vaddps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"addpd xmm1,xmm5",
			"addpd xmm1,[rax]",
			"vaddpd xmm2,xmm6,xmm3",
			"vaddpd xmm2,xmm6,[rax]",
			"vaddpd ymm2,ymm6,ymm3",
			"vaddpd ymm2,ymm6,[rax]",
			"vaddpd xmm2{k3}{z},xmm6,xmm3",
			"vaddpd xmm2{k3},xmm6,[rax+0x10]",
			"vaddpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vaddpd ymm2{k3}{z},ymm6,ymm3",
			"vaddpd ymm2{k3},ymm6,[rax+0x20]",
			"vaddpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vaddpd zmm2{k3}{z},zmm6,zmm3,{ru-sae}",
			"vaddpd zmm2{k3},zmm6,[rax+0x40]",
			"vaddpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"addss xmm1,xmm5",
			"addss xmm1,[rax]",
			"vaddss xmm2,xmm6,xmm3",
			"vaddss xmm2,xmm6,[rax]",
			"vaddss xmm2{k3},xmm6,xmm3",
			"vaddss xmm2{k3},xmm6,[rax+4]",
			"addsd xmm1,xmm5",
			"addsd xmm1,[rax]",
			"vaddsd xmm2,xmm6,xmm3",
			"vaddsd xmm2,xmm6,[rax]",
			"vaddsd xmm2{k3}{z},xmm6,xmm3",
			"vaddsd xmm2{k3},xmm6,[rax+8]",
			"mulps xmm1,xmm5",
			"mulps xmm1,[rax]",
			"vmulps xmm2,xmm6,xmm3",
			"vmulps xmm2,xmm6,[rax]",
			"vmulps ymm2,ymm6,ymm3",
			"vmulps ymm2,ymm6,[rax]",
			"vmulps xmm2{k3},xmm6,xmm3",
			"vmulps xmm2{k3},xmm6,[rax+0x10]",
			"vmulps xmm2{k5}{z},xmm6,[rax+4]{1to4}",
			"vmulps ymm2{k3},ymm6,ymm3",
			"vmulps ymm2{k3},ymm6,[rax+0x20]",
			"vmulps ymm2{k5}{z},ymm6,[rax+4]{1to8}",
			"vmulps zmm2{k3}{z},zmm6,zmm3,{ru-sae}",
			"vmulps zmm2{k3},zmm6,[rax+0x40]",
			"vmulps zmm2{k5}{z},zmm6,[rax+4]{1to16}",
			"mulpd xmm1,xmm5",
			"mulpd xmm1,[rax]",
			"vmulpd xmm2,xmm6,xmm3",
			"vmulpd xmm2,xmm6,[rax]",
			"vmulpd ymm2,ymm6,ymm3",
			"vmulpd ymm2,ymm6,[rax]",
			"vmulpd xmm2{k3}{z},xmm6,xmm3",
			"vmulpd xmm2{k3},xmm6,[rax+0x10]",
			"vmulpd xmm2{k5}{z},xmm6,[rax+8]{1to2}",
			"vmulpd ymm2{k3}{z},ymm6,ymm3",
			"vmulpd ymm2{k3},ymm6,[rax+0x20]",
			"vmulpd ymm2{k5}{z},ymm6,[rax+8]{1to4}",
			"vmulpd zmm2{k3}{z},zmm6,zmm3,{ru-sae}",
			"vmulpd zmm2{k3},zmm6,[rax+0x40]",
			"vmulpd zmm2{k5}{z},zmm6,[rax+8]{1to8}",
			"mulss xmm1,xmm5",
			"mulss xmm1,[rax]",
			"vmulss xmm2,xmm6,xmm3",
			"vmulss xmm2,xmm6,[rax]",
			"vmulss xmm2{k3},xmm6,xmm3",
			"vmulss xmm2{k3},xmm6,[rax+4]",
			"mulsd xmm1,xmm5",
			"mulsd xmm1,[rax]",
			"vmulsd xmm2,xmm6,xmm3",
			"vmulsd xmm2,xmm6,[rax]",
			"vmulsd xmm2{k3}{z},xmm6,xmm3",
			"vmulsd xmm2{k3},xmm6,[rax+8]",
			"cvtps2pd xmm1,xmm5",
			"cvtps2pd xmm1,[rax]",
			"vcvtps2pd xmm1,xmm5",
			"vcvtps2pd xmm2,[rax]",
			"vcvtps2pd ymm1,xmm5",
			"vcvtps2pd ymm2,[rax]",
			"vcvtps2pd xmm2{k3},xmm3",
			"vcvtps2pd xmm2,[rax+8]",
			"vcvtps2pd xmm2{k3}{z},[rax+4]{1to2}",
			"vcvtps2pd ymm2{k3},xmm3",
			"vcvtps2pd ymm2,[rax+0x10]",
			"vcvtps2pd ymm2{k3}{z},[rax+4]{1to4}",
			"vcvtps2pd zmm2{k3},ymm3",
			"vcvtps2pd zmm2,[rax+0x20]",
			"vcvtps2pd zmm2{k3}{z},[rax+4]{1to8}",
			"cvtpd2ps xmm1,xmm5",
			"cvtpd2ps xmm1,[rax]",
			"vcvtpd2ps xmm1,xmm5",
			"vcvtpd2ps xmm2,[rax]",
			"vcvtpd2ps xmm1,ymm5",
			"vcvtpd2ps xmm2,[rax]",
		};
	}
}
#endif
