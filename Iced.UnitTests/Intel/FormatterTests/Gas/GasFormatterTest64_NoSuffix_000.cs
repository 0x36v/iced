/*
    Copyright (C) 2018 de4dot@gmail.com

    This file is part of Iced.

    Iced is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Iced is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Iced.  If not, see <https://www.gnu.org/licenses/>.
*/

#if !NO_GAS_FORMATTER && !NO_FORMATTER
using System.Collections.Generic;
using Xunit;

namespace Iced.UnitTests.Intel.FormatterTests.Gas {
	public sealed class GasFormatterTest64_NoSuffix_000 : FormatterTest {
		[Theory]
		[MemberData(nameof(Format_Data))]
		void Format(int index, InstructionInfo info, string formattedString) => FormatBase(index, info, formattedString, GasFormatterFactory.Create_NoSuffix());
		public static IEnumerable<object[]> Format_Data => GetFormatData(infos, formattedStrings);

		static readonly InstructionInfo[] infos = InstructionInfos64_000.AllInfos;
		static readonly string[] formattedStrings = new string[InstructionInfos64_000.AllInfos_Length] {
			"add %cl,%dh",
			"add %bh,(%rax)",
			"add %cx,%si",
			"add %bx,(%rax)",
			"add %ecx,%esi",
			"add %ebx,(%rax)",
			"add %rcx,%rsi",
			"add %rbx,(%rax)",
			"add %dh,%cl",
			"add (%rax),%bh",
			"add %si,%cx",
			"add (%rax),%bx",
			"add %esi,%ecx",
			"add (%rax),%ebx",
			"add %rsi,%rcx",
			"add (%rax),%rbx",
			"add $0xa5,%al",
			"add $0x5aa5,%ax",
			"add $0x12345aa5,%eax",
			"add $0xffffffff82345aa5,%rax",
			"or %cl,%dh",
			"or %bh,(%rax)",
			"or %cx,%si",
			"or %bx,(%rax)",
			"or %ecx,%esi",
			"or %ebx,(%rax)",
			"or %rcx,%rsi",
			"or %rbx,(%rax)",
			"or %dh,%cl",
			"or (%rax),%bh",
			"or %si,%cx",
			"or (%rax),%bx",
			"or %esi,%ecx",
			"or (%rax),%ebx",
			"or %rsi,%rcx",
			"or (%rax),%rbx",
			"or $0xa5,%al",
			"or $0x5aa5,%ax",
			"or $0x12345aa5,%eax",
			"or $0xffffffff82345aa5,%rax",
			"adc %cl,%dh",
			"adc %bh,(%rax)",
			"adc %cx,%si",
			"adc %bx,(%rax)",
			"adc %ecx,%esi",
			"adc %ebx,(%rax)",
			"adc %rcx,%rsi",
			"adc %rbx,(%rax)",
			"adc %dh,%cl",
			"adc (%rax),%bh",
			"adc %si,%cx",
			"adc (%rax),%bx",
			"adc %esi,%ecx",
			"adc (%rax),%ebx",
			"adc %rsi,%rcx",
			"adc (%rax),%rbx",
			"adc $0xa5,%al",
			"adc $0x5aa5,%ax",
			"adc $0x12345aa5,%eax",
			"adc $0xffffffff82345aa5,%rax",
			"sbb %cl,%dh",
			"sbb %bh,(%rax)",
			"sbb %cx,%si",
			"sbb %bx,(%rax)",
			"sbb %ecx,%esi",
			"sbb %ebx,(%rax)",
			"sbb %rcx,%rsi",
			"sbb %rbx,(%rax)",
			"sbb %dh,%cl",
			"sbb (%rax),%bh",
			"sbb %si,%cx",
			"sbb (%rax),%bx",
			"sbb %esi,%ecx",
			"sbb (%rax),%ebx",
			"sbb %rsi,%rcx",
			"sbb (%rax),%rbx",
			"sbb $0xa5,%al",
			"sbb $0x5aa5,%ax",
			"sbb $0x12345aa5,%eax",
			"sbb $0xffffffff82345aa5,%rax",
			"and %cl,%dh",
			"and %bh,(%rax)",
			"and %cx,%si",
			"and %bx,(%rax)",
			"and %ecx,%esi",
			"and %ebx,(%rax)",
			"and %rcx,%rsi",
			"and %rbx,(%rax)",
			"and %dh,%cl",
			"and (%rax),%bh",
			"and %si,%cx",
			"and (%rax),%bx",
			"and %esi,%ecx",
			"and (%rax),%ebx",
			"and %rsi,%rcx",
			"and (%rax),%rbx",
			"and $0xa5,%al",
			"and $0x5aa5,%ax",
			"and $0x12345aa5,%eax",
			"and $0xffffffff82345aa5,%rax",
			"sub %cl,%dh",
			"sub %bh,(%rax)",
			"sub %cx,%si",
			"sub %bx,(%rax)",
			"sub %ecx,%esi",
			"sub %ebx,(%rax)",
			"sub %rcx,%rsi",
			"sub %rbx,(%rax)",
			"sub %dh,%cl",
			"sub (%rax),%bh",
			"sub %si,%cx",
			"sub (%rax),%bx",
			"sub %esi,%ecx",
			"sub (%rax),%ebx",
			"sub %rsi,%rcx",
			"sub (%rax),%rbx",
			"sub $0xa5,%al",
			"sub $0x5aa5,%ax",
			"sub $0x12345aa5,%eax",
			"sub $0xffffffff82345aa5,%rax",
			"xor %cl,%dh",
			"xor %bh,(%rax)",
			"xor %cx,%si",
			"xor %bx,(%rax)",
			"xor %ecx,%esi",
			"xor %ebx,(%rax)",
			"xor %rcx,%rsi",
			"xor %rbx,(%rax)",
			"xor %dh,%cl",
			"xor (%rax),%bh",
			"xor %si,%cx",
			"xor (%rax),%bx",
			"xor %esi,%ecx",
			"xor (%rax),%ebx",
			"xor %rsi,%rcx",
			"xor (%rax),%rbx",
			"xor $0xa5,%al",
			"xor $0x5aa5,%ax",
			"xor $0x12345aa5,%eax",
			"xor $0xffffffff82345aa5,%rax",
			"cmp %cl,%dh",
			"cmp %bh,(%rax)",
			"cmp %cx,%si",
			"cmp %bx,(%rax)",
			"cmp %ecx,%esi",
			"cmp %ebx,(%rax)",
			"cmp %rcx,%rsi",
			"cmp %rbx,(%rax)",
			"cmp %dh,%cl",
			"cmp (%rax),%bh",
			"cmp %si,%cx",
			"cmp (%rax),%bx",
			"cmp %esi,%ecx",
			"cmp (%rax),%ebx",
			"cmp %rsi,%rcx",
			"cmp (%rax),%rbx",
			"cmp $0xa5,%al",
			"cmp $0x5aa5,%ax",
			"cmp $0x12345aa5,%eax",
			"cmp $0xffffffff82345aa5,%rax",
			"push %ax",
			"push %r8w",
			"push %rax",
			"push %r8",
			"push %cx",
			"push %r9w",
			"push %rcx",
			"push %r9",
			"push %dx",
			"push %r10w",
			"push %rdx",
			"push %r10",
			"push %bx",
			"push %r11w",
			"push %rbx",
			"push %r11",
			"push %sp",
			"push %r12w",
			"push %rsp",
			"push %r12",
			"push %bp",
			"push %r13w",
			"push %rbp",
			"push %r13",
			"push %si",
			"push %r14w",
			"push %rsi",
			"push %r14",
			"push %di",
			"push %r15w",
			"push %rdi",
			"push %r15",
			"pop %ax",
			"pop %r8w",
			"pop %rax",
			"pop %r8",
			"pop %cx",
			"pop %r9w",
			"pop %rcx",
			"pop %r9",
			"pop %dx",
			"pop %r10w",
			"pop %rdx",
			"pop %r10",
			"pop %bx",
			"pop %r11w",
			"pop %rbx",
			"pop %r11",
			"pop %sp",
			"pop %r12w",
			"pop %rsp",
			"pop %r12",
			"pop %bp",
			"pop %r13w",
			"pop %rbp",
			"pop %r13",
			"pop %si",
			"pop %r14w",
			"pop %rsi",
			"pop %r14",
			"pop %di",
			"pop %r15w",
			"pop %rdi",
			"pop %r15",
			"movslq %si,%cx",
			"movslq (%rax),%bx",
			"movslq %esi,%ecx",
			"movslq (%rax),%ebx",
			"movslq %esi,%rcx",
			"movslq (%rax),%rbx",
			"pushw $0xa55a",
			"push $0xffffffff8412a55a",
			"imul $0x5aa5,%si,%cx",
			"imul $0xa55a,(%rax),%bx",
			"imul $0x3412a55a,%esi,%ecx",
			"imul $0x3412a55a,(%rax),%ebx",
			"imul $0xffffffff8412a55a,%rsi,%rcx",
			"imul $0xffffffff8412a55a,(%rax),%rbx",
			"pushw $0xffa5",
			"push $0xffffffffffffffa5",
			"imul $0xffa5,%si,%cx",
			"imul $0xffa5,(%rax),%bx",
			"imul $0xffffffa5,%esi,%ecx",
			"imul $0xffffffa5,(%rax),%ebx",
			"imul $0xffffffffffffffa5,%rsi,%rcx",
			"imul $0xffffffffffffffa5,(%rax),%rbx",
			"insb %dx,(%edi)",
			"insb %dx,(%rdi)",
			"insw %dx,(%edi)",
			"insw %dx,(%rdi)",
			"insl %dx,(%edi)",
			"insl %dx,(%rdi)",
			"outsb (%esi),%dx",
			"outsb (%rsi),%dx",
			"outsw (%esi),%dx",
			"outsw (%rsi),%dx",
			"outsl (%esi),%dx",
			"outsl (%rsi),%dx",
			"jo 0x800000000000004c",
			"jno 0x800000000000004c",
			"jb 0x800000000000004c",
			"jae 0x800000000000004c",
			"je 0x800000000000004c",
			"jne 0x800000000000004c",
			"jbe 0x800000000000004c",
			"ja 0x800000000000004c",
			"js 0x800000000000004c",
			"jns 0x800000000000004c",
			"jp 0x800000000000004c",
			"jnp 0x800000000000004c",
			"jl 0x800000000000004c",
			"jge 0x800000000000004c",
			"jle 0x800000000000004c",
			"jg 0x800000000000004c",
			"add $0x5a,%cl",
			"addb $0x5a,(%rax)",
			"or $0xa5,%dl",
			"orb $0xa5,(%rax)",
			"adc $0x5a,%bl",
			"adcb $0x5a,(%rax)",
			"sbb $0xa5,%ah",
			"sbbb $0xa5,(%rax)",
			"and $0x5a,%ch",
			"andb $0x5a,(%rax)",
			"sub $0xa5,%dh",
			"subb $0xa5,(%rax)",
			"xor $0x5a,%bh",
			"xorb $0x5a,(%rax)",
			"cmp $0xa5,%al",
			"cmpb $0xa5,(%rax)",
			"add $0xa55a,%cx",
			"addw $0xa55a,(%rax)",
			"add $0x3412a55a,%ecx",
			"addl $0x3412a55a,(%rax)",
			"add $0xffffffff8412a55a,%rcx",
			"addq $0xffffffff8412a55a,(%rax)",
			"or $0x5aa5,%dx",
			"orw $0x5aa5,(%rax)",
			"or $0xab895aa5,%edx",
			"orl $0xab895aa5,(%rax)",
			"or $0xffffffff8412a55a,%rdx",
			"orq $0xffffffff8412a55a,(%rax)",
			"adc $0xa55a,%bx",
			"adcw $0xa55a,(%rax)",
			"adc $0x3412a55a,%ebx",
			"adcl $0x3412a55a,(%rax)",
			"adc $0xffffffff8412a55a,%rbx",
			"adcq $0xffffffff8412a55a,(%rax)",
			"sbb $0x5aa5,%sp",
			"sbbw $0x5aa5,(%rax)",
			"sbb $0xab895aa5,%esp",
			"sbbl $0xab895aa5,(%rax)",
			"sbb $0xffffffff8412a55a,%rsp",
			"sbbq $0xffffffff8412a55a,(%rax)",
			"and $0xa55a,%bp",
			"andw $0xa55a,(%rax)",
			"and $0x3412a55a,%ebp",
			"andl $0x3412a55a,(%rax)",
			"and $0xffffffff8412a55a,%rbp",
			"andq $0xffffffff8412a55a,(%rax)",
			"sub $0x5aa5,%si",
			"subw $0x5aa5,(%rax)",
			"sub $0xab895aa5,%esi",
			"subl $0xab895aa5,(%rax)",
			"sub $0xffffffff8412a55a,%rsi",
			"subq $0xffffffff8412a55a,(%rax)",
			"xor $0xa55a,%di",
			"xorw $0xa55a,(%rax)",
			"xor $0x3412a55a,%edi",
			"xorl $0x3412a55a,(%rax)",
			"xor $0xffffffff8412a55a,%rdi",
			"xorq $0xffffffff8412a55a,(%rax)",
			"cmp $0x5aa5,%ax",
			"cmpw $0x5aa5,(%rax)",
			"cmp $0xab895aa5,%eax",
			"cmpl $0xab895aa5,(%rax)",
			"cmp $0xffffffff8412a55a,%r8",
			"cmpq $0xffffffff8412a55a,(%rax)",
			"add $0xffa5,%cx",
			"addw $0xffa5,(%rax)",
			"add $0xffffffa5,%ecx",
			"addl $0xffffffa5,(%rax)",
			"add $0xffffffffffffffa5,%rcx",
			"addq $0xffffffffffffffa5,(%rax)",
			"or $0xffa5,%dx",
			"orw $0xffa5,(%rax)",
			"or $0xffffffa5,%edx",
			"orl $0xffffffa5,(%rax)",
			"or $0xffffffffffffffa5,%rdx",
			"orq $0xffffffffffffffa5,(%rax)",
			"adc $0xffa5,%bx",
			"adcw $0xffa5,(%rax)",
			"adc $0xffffffa5,%ebx",
			"adcl $0xffffffa5,(%rax)",
			"adc $0xffffffffffffffa5,%rbx",
			"adcq $0xffffffffffffffa5,(%rax)",
			"sbb $0xffa5,%sp",
			"sbbw $0xffa5,(%rax)",
			"sbb $0xffffffa5,%esp",
			"sbbl $0xffffffa5,(%rax)",
			"sbb $0xffffffffffffffa5,%rsp",
			"sbbq $0xffffffffffffffa5,(%rax)",
			"and $0xffa5,%bp",
			"andw $0xffa5,(%rax)",
			"and $0xffffffa5,%ebp",
			"andl $0xffffffa5,(%rax)",
			"and $0xffffffffffffffa5,%rbp",
			"andq $0xffffffffffffffa5,(%rax)",
			"sub $0xffa5,%si",
			"subw $0xffa5,(%rax)",
			"sub $0xffffffa5,%esi",
			"subl $0xffffffa5,(%rax)",
			"sub $0xffffffffffffffa5,%rsi",
			"subq $0xffffffffffffffa5,(%rax)",
			"xor $0xffa5,%di",
			"xorw $0xffa5,(%rax)",
			"xor $0xffffffa5,%edi",
			"xorl $0xffffffa5,(%rax)",
			"xor $0xffffffffffffffa5,%rdi",
			"xorq $0xffffffffffffffa5,(%rax)",
			"cmp $0xffa5,%ax",
			"cmpw $0xffa5,(%rax)",
			"cmp $0xffffffa5,%eax",
			"cmpl $0xffffffa5,(%rax)",
			"cmp $0xffffffffffffffa5,%r8",
			"cmpq $0xffffffffffffffa5,(%rax)",
			"test %cl,%dh",
			"test %bh,(%rax)",
			"test %cx,%si",
			"test %bx,(%rax)",
			"test %ecx,%esi",
			"test %ebx,(%rax)",
			"test %rcx,%rsi",
			"test %rbx,(%rax)",
			"xchg %cl,%dh",
			"xchg %bh,(%rax)",
			"xchg %cx,%si",
			"xchg %bx,(%rax)",
			"xchg %ecx,%esi",
			"xchg %ebx,(%rax)",
			"xchg %rcx,%rsi",
			"xchg %rbx,(%rax)",
			"mov %cl,%dh",
			"mov %bh,(%rax)",
			"mov %cx,%si",
			"mov %bx,(%rax)",
			"mov %ecx,%esi",
			"mov %ebx,(%rax)",
			"mov %rcx,%rsi",
			"mov %rbx,(%rax)",
			"mov %dh,%cl",
			"mov (%rax),%bh",
			"mov %si,%cx",
			"mov (%rax),%bx",
			"mov %esi,%ecx",
			"mov (%rax),%ebx",
			"mov %rsi,%rcx",
			"mov (%rax),%rbx",
			"mov %cs,%si",
			"data16 mov %ds,(%rax)",
			"mov %cs,%esi",
			"mov %ds,(%rax)",
			"mov %cs,%rsi",
			"rex.w mov %ds,(%rax)",
			"lea (%rax),%bx",
			"lea (%rax),%ebx",
			"lea (%rax),%rbx",
			"mov %si,%fs",
			"data16 mov (%rax),%ds",
			"mov %esi,%fs",
			"mov (%rax),%ds",
			"mov %rsi,%fs",
			"rex.w mov (%rax),%ds",
			"pop %si",
			"popw (%rax)",
			"pop %rsi",
			"popq (%rax)",
			"xchg %ax,%ax",
			"xchg %ax,%r8w",
			"nop",
			"xchg %eax,%r8d",
			"xchg %rax,%rax",
			"xchg %rax,%r8",
			"xchg %ax,%cx",
			"xchg %ax,%r9w",
			"xchg %eax,%ecx",
			"xchg %eax,%r9d",
			"xchg %rax,%rcx",
			"xchg %rax,%r9",
			"xchg %ax,%dx",
			"xchg %ax,%r10w",
			"xchg %eax,%edx",
			"xchg %eax,%r10d",
			"xchg %rax,%rdx",
			"xchg %rax,%r10",
			"xchg %ax,%bx",
			"xchg %ax,%r11w",
			"xchg %eax,%ebx",
			"xchg %eax,%r11d",
			"xchg %rax,%rbx",
			"xchg %rax,%r11",
			"xchg %ax,%sp",
			"xchg %ax,%r12w",
			"xchg %eax,%esp",
			"xchg %eax,%r12d",
			"xchg %rax,%rsp",
			"xchg %rax,%r12",
			"xchg %ax,%bp",
			"xchg %ax,%r13w",
			"xchg %eax,%ebp",
			"xchg %eax,%r13d",
			"xchg %rax,%rbp",
			"xchg %rax,%r13",
			"xchg %ax,%si",
			"xchg %ax,%r14w",
			"xchg %eax,%esi",
			"xchg %eax,%r14d",
			"xchg %rax,%rsi",
			"xchg %rax,%r14",
			"xchg %ax,%di",
			"xchg %ax,%r15w",
			"xchg %eax,%edi",
			"xchg %eax,%r15d",
			"xchg %rax,%rdi",
			"xchg %rax,%r15",
			"pause",
			"cbtw",
			"cwtl",
			"cltq",
			"cwtd",
			"cltd",
			"cqto",
			"fwait",
			"pushfw",
			"pushf",
			"popfw",
			"popf",
			"sahf",
			"lahf",
			"movabs 0xf0debc9a78563412,%al",
			"addr32 mov 0x78563412,%al",
			"movabs 0xf0debc9a78563412,%ax",
			"addr32 mov 0x78563412,%ax",
			"movabs 0xf0debc9a78563412,%eax",
			"addr32 mov 0x78563412,%eax",
			"movabs 0xf0debc9a78563412,%rax",
			"addr32 mov 0x78563412,%rax",
			"movabs %al,0xf0debc9a78563412",
			"addr32 mov %al,0x78563412",
			"movabs %ax,0xf0debc9a78563412",
			"addr32 mov %ax,0x78563412",
			"movabs %eax,0xf0debc9a78563412",
			"addr32 mov %eax,0x78563412",
			"movabs %rax,0xf0debc9a78563412",
			"addr32 mov %rax,0x78563412",
			"movsb (%esi),(%edi)",
			"movsb (%rsi),(%rdi)",
			"movsw (%esi),(%edi)",
			"movsw (%rsi),(%rdi)",
			"movsl (%esi),(%edi)",
			"movsl (%rsi),(%rdi)",
			"movsq (%esi),(%edi)",
			"movsq (%rsi),(%rdi)",
			"cmpsb (%edi),(%esi)",
			"cmpsb (%rdi),(%rsi)",
			"cmpsw (%edi),(%esi)",
			"cmpsw (%rdi),(%rsi)",
			"cmpsl (%edi),(%esi)",
			"cmpsl (%rdi),(%rsi)",
			"cmpsq (%edi),(%esi)",
			"cmpsq (%rdi),(%rsi)",
			"test $0xa5,%al",
			"test $0x5aa5,%ax",
			"test $0x12345aa5,%eax",
			"test $0xffffffff82345aa5,%rax",
			"stos %al,(%edi)",
			"stos %al,(%rdi)",
			"stos %ax,(%edi)",
			"stos %ax,(%rdi)",
			"stos %eax,(%edi)",
			"stos %eax,(%rdi)",
			"stos %rax,(%edi)",
			"stos %rax,(%rdi)",
			"lods (%esi),%al",
			"lods (%rsi),%al",
			"lods (%esi),%ax",
			"lods (%rsi),%ax",
			"lods (%esi),%eax",
			"lods (%rsi),%eax",
			"lods (%esi),%rax",
			"lods (%rsi),%rax",
			"scas (%edi),%al",
			"scas (%rdi),%al",
			"scas (%edi),%ax",
			"scas (%rdi),%ax",
			"scas (%edi),%eax",
			"scas (%rdi),%eax",
			"scas (%edi),%rax",
			"scas (%rdi),%rax",
			"mov $0x5a,%al",
			"mov $0x5a,%r8b",
			"mov $0xa5,%cl",
			"mov $0xa5,%r9b",
			"mov $0x5a,%dl",
			"mov $0x5a,%r10b",
			"mov $0xa5,%bl",
			"mov $0xa5,%r11b",
			"mov $0x5a,%ah",
			"mov $0x5a,%spl",
			"mov $0x5a,%r12b",
			"mov $0xa5,%ch",
			"mov $0xa5,%bpl",
			"mov $0xa5,%r13b",
			"mov $0x5a,%dh",
			"mov $0x5a,%sil",
			"mov $0x5a,%r14b",
			"mov $0xa5,%bh",
			"mov $0xa5,%dil",
			"mov $0xa5,%r15b",
			"mov $0xa55a,%ax",
			"mov $0xa55a,%r8w",
			"mov $0x3412a55a,%eax",
			"mov $0x3412a55a,%r8d",
			"movabs $0x3412a55a37261504,%rax",
			"movabs $0x3412a55a37261504,%r8",
			"mov $0x5aa5,%cx",
			"mov $0x5aa5,%r9w",
			"mov $0x78565aa5,%ecx",
			"mov $0x78565aa5,%r9d",
			"movabs $0x78565aa537261504,%rcx",
			"movabs $0x78565aa537261504,%r9",
			"mov $0xa55a,%dx",
			"mov $0xa55a,%r10w",
			"mov $0x3412a55a,%edx",
			"mov $0x3412a55a,%r10d",
			"movabs $0x3412a55a37261504,%rdx",
			"movabs $0x3412a55a37261504,%r10",
			"mov $0x5aa5,%bx",
			"mov $0x5aa5,%r11w",
			"mov $0x78565aa5,%ebx",
			"mov $0x78565aa5,%r11d",
			"movabs $0x78565aa537261504,%rbx",
			"movabs $0x78565aa537261504,%r11",
			"mov $0xa55a,%sp",
			"mov $0xa55a,%r12w",
			"mov $0x3412a55a,%esp",
			"mov $0x3412a55a,%r12d",
			"movabs $0x3412a55a37261504,%rsp",
			"movabs $0x3412a55a37261504,%r12",
			"mov $0x5aa5,%bp",
			"mov $0x5aa5,%r13w",
			"mov $0x78565aa5,%ebp",
			"mov $0x78565aa5,%r13d",
			"movabs $0x78565aa537261504,%rbp",
			"movabs $0x78565aa537261504,%r13",
			"mov $0xa55a,%si",
			"mov $0xa55a,%r14w",
			"mov $0x3412a55a,%esi",
			"mov $0x3412a55a,%r14d",
			"movabs $0x3412a55a37261504,%rsi",
			"movabs $0x3412a55a37261504,%r14",
			"mov $0x5aa5,%di",
			"mov $0x5aa5,%r15w",
			"mov $0x78565aa5,%edi",
			"mov $0x78565aa5,%r15d",
			"movabs $0x78565aa537261504,%rdi",
			"movabs $0x78565aa537261504,%r15",
			"rol $0x5a,%cl",
			"rolb $0x5a,(%rax)",
			"ror $0xa5,%dl",
			"rorb $0xa5,(%rax)",
			"rcl $0x5a,%bl",
			"rclb $0x5a,(%rax)",
			"rcr $0xa5,%ah",
			"rcrb $0xa5,(%rax)",
			"shl $0x5a,%ch",
			"shlb $0x5a,(%rax)",
			"shr $0xa5,%dh",
			"shrb $0xa5,(%rax)",
			"sar $0xa5,%al",
			"sarb $0xa5,(%rax)",
			"rol $0x5a,%cx",
			"rolw $0x5a,(%rax)",
			"rol $0x5a,%ecx",
			"roll $0x5a,(%rax)",
			"rol $0x5a,%rcx",
			"rolq $0x5a,(%rax)",
			"ror $0xa5,%dx",
			"rorw $0xa5,(%rax)",
			"ror $0xa5,%edx",
			"rorl $0xa5,(%rax)",
			"ror $0xa5,%rdx",
			"rorq $0xa5,(%rax)",
			"rcl $0x5a,%bx",
			"rclw $0x5a,(%rax)",
			"rcl $0x5a,%ebx",
			"rcll $0x5a,(%rax)",
			"rcl $0x5a,%rbx",
			"rclq $0x5a,(%rax)",
			"rcr $0xa5,%sp",
			"rcrw $0xa5,(%rax)",
			"rcr $0xa5,%esp",
			"rcrl $0xa5,(%rax)",
			"rcr $0xa5,%rsp",
			"rcrq $0xa5,(%rax)",
			"shl $0x5a,%bp",
			"shlw $0x5a,(%rax)",
			"shl $0x5a,%ebp",
			"shll $0x5a,(%rax)",
			"shl $0x5a,%rbp",
			"shlq $0x5a,(%rax)",
			"shr $0xa5,%si",
			"shrw $0xa5,(%rax)",
			"shr $0xa5,%esi",
			"shrl $0xa5,(%rax)",
			"shr $0xa5,%rsi",
			"shrq $0xa5,(%rax)",
			"sar $0xa5,%ax",
			"sarw $0xa5,(%rax)",
			"sar $0xa5,%eax",
			"sarl $0xa5,(%rax)",
			"sar $0xa5,%r8",
			"sarq $0xa5,(%rax)",
			"ret $0xa55a",
			"ret",
			"mov $0x5a,%cl",
			"movb $0x5a,(%rax)",
			"xabort $0x5a",
			"mov $0xa55a,%cx",
			"movw $0xa55a,(%rax)",
			"mov $0x3412a55a,%ecx",
			"movl $0x3412a55a,(%rax)",
			"mov $0xffffffff8412a55a,%rcx",
			"movq $0xffffffff8412a55a,(%rax)",
			"data16 xbegin 0x7fffffffffffa54f",
			"xbegin 0x800000003412a550",
			"rex.w xbegin 0x800000003412a551",
			"enterw $0xa55a,$0xa6",
			"enter $0xa55a,$0xa6",
			"leavew",
			"leave",
			"lretw $0xa55a",
			"lret $0xa55a",
			"lretq $0xa55a",
			"lretw",
			"lret",
			"lretq",
			"int3",
			"int $0x5a",
			"iretw",
			"iret",
			"iretq",
			"rol $1,%cl",
			"rolb $1,(%rax)",
			"ror $1,%dl",
			"rorb $1,(%rax)",
			"rcl $1,%bl",
			"rclb $1,(%rax)",
			"rcr $1,%ah",
			"rcrb $1,(%rax)",
			"shl $1,%ch",
			"shlb $1,(%rax)",
			"shr $1,%dh",
			"shrb $1,(%rax)",
			"sar $1,%al",
			"sarb $1,(%rax)",
			"rol $1,%cx",
			"rolw $1,(%rax)",
			"rol $1,%ecx",
			"roll $1,(%rax)",
			"rol $1,%rcx",
			"rolq $1,(%rax)",
			"ror $1,%dx",
			"rorw $1,(%rax)",
			"ror $1,%edx",
			"rorl $1,(%rax)",
			"ror $1,%rdx",
			"rorq $1,(%rax)",
			"rcl $1,%bx",
			"rclw $1,(%rax)",
			"rcl $1,%ebx",
			"rcll $1,(%rax)",
			"rcl $1,%rbx",
			"rclq $1,(%rax)",
			"rcr $1,%sp",
			"rcrw $1,(%rax)",
			"rcr $1,%esp",
			"rcrl $1,(%rax)",
			"rcr $1,%rsp",
			"rcrq $1,(%rax)",
			"shl $1,%bp",
			"shlw $1,(%rax)",
			"shl $1,%ebp",
			"shll $1,(%rax)",
			"shl $1,%rbp",
			"shlq $1,(%rax)",
			"shr $1,%si",
			"shrw $1,(%rax)",
			"shr $1,%esi",
			"shrl $1,(%rax)",
			"shr $1,%rsi",
			"shrq $1,(%rax)",
			"sar $1,%ax",
			"sarw $1,(%rax)",
			"sar $1,%eax",
			"sarl $1,(%rax)",
			"sar $1,%r8",
			"sarq $1,(%rax)",
			"rol %cl,%cl",
			"rolb %cl,(%rax)",
			"ror %cl,%dl",
			"rorb %cl,(%rax)",
			"rcl %cl,%bl",
			"rclb %cl,(%rax)",
			"rcr %cl,%ah",
			"rcrb %cl,(%rax)",
			"shl %cl,%ch",
			"shlb %cl,(%rax)",
			"shr %cl,%dh",
			"shrb %cl,(%rax)",
			"sar %cl,%al",
			"sarb %cl,(%rax)",
			"rol %cl,%cx",
			"rolw %cl,(%rax)",
			"rol %cl,%ecx",
			"roll %cl,(%rax)",
			"rol %cl,%rcx",
			"rolq %cl,(%rax)",
			"ror %cl,%dx",
			"rorw %cl,(%rax)",
			"ror %cl,%edx",
			"rorl %cl,(%rax)",
			"ror %cl,%rdx",
			"rorq %cl,(%rax)",
			"rcl %cl,%bx",
			"rclw %cl,(%rax)",
			"rcl %cl,%ebx",
			"rcll %cl,(%rax)",
			"rcl %cl,%rbx",
			"rclq %cl,(%rax)",
			"rcr %cl,%sp",
			"rcrw %cl,(%rax)",
			"rcr %cl,%esp",
			"rcrl %cl,(%rax)",
			"rcr %cl,%rsp",
			"rcrq %cl,(%rax)",
			"shl %cl,%bp",
			"shlw %cl,(%rax)",
			"shl %cl,%ebp",
			"shll %cl,(%rax)",
			"shl %cl,%rbp",
			"shlq %cl,(%rax)",
			"shr %cl,%si",
			"shrw %cl,(%rax)",
			"shr %cl,%esi",
			"shrl %cl,(%rax)",
			"shr %cl,%rsi",
			"shrq %cl,(%rax)",
			"sar %cl,%ax",
			"sarw %cl,(%rax)",
			"sar %cl,%eax",
			"sarl %cl,(%rax)",
			"sar %cl,%r8",
			"sarq %cl,(%rax)",
			"xlat (%rbx)",
			"fadds (%rax)",
			"fmuls (%rax)",
			"fcoms (%rax)",
			"fcomps (%rax)",
			"fsubs (%rax)",
			"fsubrs (%rax)",
			"fdivs (%rax)",
			"fdivrs (%rax)",
			"fadd %st(3),%st",
			"fmul %st(3),%st",
			"fcom %st(3)",
			"fcomp %st(3)",
			"fsub %st(3),%st",
			"fsubr %st(3),%st",
			"fdiv %st(3),%st",
			"fdivr %st(3),%st",
			"flds (%rax)",
			"fsts (%rax)",
			"fstps (%rax)",
			"fldenvs (%rax)",
			"fldenv (%rax)",
			"fldcw (%rax)",
			"fnstenvs (%rax)",
			"fnstenv (%rax)",
			"fnstcw (%rax)",
			"fld %st(3)",
			"fxch %st(3)",
			"fnop",
			"fchs",
			"fabs",
			"ftst",
			"fxam",
			"fld1",
			"fldl2t",
			"fldl2e",
			"fldpi",
			"fldlg2",
			"fldln2",
			"fldz",
			"f2xm1",
			"fyl2x",
			"fptan",
			"fpatan",
			"fxtract",
			"fprem1",
			"fdecstp",
			"fincstp",
			"fprem",
			"fyl2xp1",
			"fsqrt",
			"fsincos",
			"frndint",
			"fscale",
			"fsin",
			"fcos",
			"fiaddl (%rax)",
			"fimull (%rax)",
			"ficoml (%rax)",
			"ficompl (%rax)",
			"fisubl (%rax)",
			"fisubrl (%rax)",
			"fidivl (%rax)",
			"fidivrl (%rax)",
			"fcmovb %st(3),%st",
			"fcmove %st(3),%st",
			"fcmovbe %st(3),%st",
			"fcmovu %st(3),%st",
			"fucompp",
			"fildl (%rax)",
			"fisttpl (%rax)",
			"fistl (%rax)",
			"fistpl (%rax)",
			"fldt (%rax)",
			"fstpt (%rax)",
			"fcmovnb %st(3),%st",
			"fcmovne %st(3),%st",
			"fcmovnbe %st(3),%st",
			"fcmovnu %st(3),%st",
			"fnclex",
			"fninit",
			"fucomi %st(3),%st",
			"fcomi %st(3),%st",
			"faddl (%rax)",
			"fmull (%rax)",
			"fcoml (%rax)",
			"fcompl (%rax)",
			"fsubl (%rax)",
			"fsubrl (%rax)",
			"fdivl (%rax)",
			"fdivrl (%rax)",
			"fadd %st,%st(3)",
			"fmul %st,%st(3)",
			"fsub %st,%st(3)",
			"fsubr %st,%st(3)",
			"fdiv %st,%st(3)",
			"fdivr %st,%st(3)",
			"fldl (%rax)",
			"fisttpll (%rax)",
			"fstl (%rax)",
			"fstpl (%rax)",
			"frstors (%rax)",
			"frstor (%rax)",
			"fnsaves (%rax)",
			"fnsave (%rax)",
			"fnstsw (%rax)",
			"ffree %st(3)",
			"fst %st(3)",
			"fstp %st(3)",
			"fucom %st(3)",
			"fucomp %st(3)",
			"fiadds (%rax)",
			"fimuls (%rax)",
			"ficoms (%rax)",
			"ficomps (%rax)",
			"fisubs (%rax)",
			"fisubrs (%rax)",
			"fidivs (%rax)",
			"fidivrs (%rax)",
			"faddp %st,%st(3)",
			"fmulp %st,%st(3)",
			"fcompp",
			"fsubp %st,%st(3)",
			"fsubrp %st,%st(3)",
			"fdivp %st,%st(3)",
			"fdivrp %st,%st(3)",
			"filds (%rax)",
			"fisttps (%rax)",
			"fists (%rax)",
			"fistps (%rax)",
			"fbld (%rax)",
			"fildll (%rax)",
			"fbstp (%rax)",
			"fistpll (%rax)",
			"fnstsw %ax",
			"fucomip %st(3),%st",
			"fcomip %st(3),%st",
			".byte 0x66; loopnel 0x004e",
			"loopnel 0x800000000000004d",
			".byte 0x66; loopne 0x004d",
			"loopne 0x800000000000004c",
			".byte 0x66; loopel 0x004e",
			"loopel 0x800000000000004d",
			".byte 0x66; loope 0x004d",
			"loope 0x800000000000004c",
			".byte 0x66; loopl 0x004e",
			"loopl 0x800000000000004d",
			".byte 0x66; loop 0x004d",
			"loop 0x800000000000004c",
			".byte 0x66; jecxz 0x004e",
			"jecxz 0x800000000000004d",
			".byte 0x66; jrcxz 0x004d",
			"jrcxz 0x800000000000004c",
			"in $0x5a,%al",
			"in $0x5a,%ax",
			"in $0x5a,%eax",
			"out %al,$0x5a",
			"out %ax,$0x5a",
			"out %eax,$0x5a",
			"call 0x7fffffffa55a3407",
			"jmp 0x7fffffffa55a3407",
			"jmp 0x800000000000004c",
			"in %dx,%al",
			"in %dx,%ax",
			"in %dx,%eax",
			"out %al,%dx",
			"out %ax,%dx",
			"out %eax,%dx",
			"int1",
			"hlt",
			"cmc",
			"test $0x5a,%cl",
			"testb $0x5a,(%rax)",
			"not %cl",
			"notb (%rax)",
			"neg %dh",
			"negb (%rax)",
			"mul %ch",
			"mulb (%rax)",
			"imul %dh",
			"imulb (%rax)",
			"div %bh",
			"divb (%rax)",
			"idiv %al",
		};
	}
}
#endif
