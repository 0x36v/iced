/*
Copyright (C) 2018-2019 de4dot@gmail.com

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

// ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è

use super::handlers::*;
use super::handlers_vex::*;
use super::*;

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_19: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsllw_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_18: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsllw_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_389: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_314: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_389 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_17: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsraw_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_16: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsraw_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_388: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_313: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_388 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_15: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsrlw_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_14: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsrlw_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_387: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_312: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_387 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_13: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpslld_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_12: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpslld_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_386: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_311: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_386 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_11: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsrad_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_10: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsrad_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_385: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_310: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_385 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_9: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsrld_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_8: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsrld_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_384: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_309: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_384 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_7: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpslldq_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_6: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpslldq_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_383: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_308: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_383 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_5: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsllq_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_4: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsllq_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_382: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_307: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_382 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_3: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsrldq_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_2: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsrldq_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_381: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_306: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_381 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB_1: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpsrlq_ymm_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HRIB: OpCodeHandler_VEX_HRIb = OpCodeHandler_VEX_HRIb {
	decode: OpCodeHandler_VEX_HRIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpsrlq_xmm_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_380: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HRIB }.to },
		unsafe { HandlerTransmuter { from: &GEN_HRIB_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_305: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_380 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_M_VEX_VSTMXCSR_M32: OpCodeHandler_VEX_M = OpCodeHandler_VEX_M {
	decode: OpCodeHandler_VEX_M::decode,
	has_modrm: true,
	code: Code::VEX_Vstmxcsr_m32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_379: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_M_VEX_VSTMXCSR_M32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_304: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_379 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_M_VEX_VLDMXCSR_M32: OpCodeHandler_VEX_M = OpCodeHandler_VEX_M {
	decode: OpCodeHandler_VEX_M::decode,
	has_modrm: true,
	code: Code::VEX_Vldmxcsr_m32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_378: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_M_VEX_VLDMXCSR_M32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_303: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_378 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_349: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_348: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_377: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_348 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_349 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_302: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_377 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_347: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_346: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_376: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_346 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_347 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_301: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_376 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_345: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_344: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_375: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_344 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_345 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_300: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_375 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_343: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_342: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_374: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_342 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_343 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_299: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_374 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_341: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_340: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_373: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_340 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_341 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_298: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_373 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_339: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_338: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_372: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_338 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_339 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_297: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_372 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_337: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_336: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_371: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_336 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_337 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_296: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_371 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GENR_DI_VX_RX: OpCodeHandler_VEX_rDI_VX_RX = OpCodeHandler_VEX_rDI_VX_RX {
	decode: OpCodeHandler_VEX_rDI_VX_RX::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmaskmovdqu_rDI_xmm_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_370: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GENR_DI_VX_RX }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_295: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_370 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_335: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsadbw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsadbw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_334: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsadbw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsadbw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_369: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_334 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_335 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_294: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_369 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_333: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaddwd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaddwd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_332: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaddwd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaddwd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_368: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_332 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_333 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_293: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_368 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_331: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmuludq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmuludq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_330: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmuludq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmuludq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_367: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_330 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_331 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_292: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_367 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_15: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsllq_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpsllq_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_14: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsllq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsllq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_366: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_291: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_366 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_13: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpslld_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpslld_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_12: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpslld_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpslld_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_365: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_290: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_365 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_11: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsllw_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpsllw_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_10: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsllw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsllw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_364: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_289: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_364 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM_7: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vlddqu_ymm_m256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM_6: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vlddqu_xmm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_363: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VM_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VM_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_288: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_363 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_329: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpxor_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpxor_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_328: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpxor_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpxor_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_362: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_328 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_329 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_287: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_362 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_327: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaxsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaxsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_326: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaxsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaxsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_361: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_326 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_327 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_286: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_361 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_325: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_324: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_360: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_324 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_325 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_285: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_360 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_323: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddsb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddsb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_322: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddsb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddsb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_359: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_322 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_323 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_284: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_359 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_321: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpor_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpor_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_320: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpor_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpor_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_358: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_320 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_321 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_283: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_358 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_319: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpminsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpminsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_318: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpminsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpminsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_357: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_318 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_319 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_282: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_357 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_317: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_316: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_356: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_316 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_317 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_281: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_356 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_315: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubsb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubsb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_314: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubsb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubsb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_355: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_314 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_315 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_280: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_355 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_11: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmovntdq_m256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_10: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovntdq_m128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_354: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MV_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_MV_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_279: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_354 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_41: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vcvtpd2dq_xmm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_55: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtpd2dq_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_353: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_55 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_41 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_40: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtdq2pd_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_54: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtdq2pd_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_352: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_54 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_40 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_39: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vcvttpd2dq_xmm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_53: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvttpd2dq_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_351: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_53 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_39 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_278: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_351 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_352 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_353 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_313: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmulhw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmulhw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_312: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmulhw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmulhw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_350: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_312 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_313 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_277: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_350 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_311: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmulhuw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmulhuw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_310: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmulhuw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmulhuw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_349: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_310 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_311 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_276: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_349 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_309: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpavgw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpavgw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_308: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpavgw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpavgw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_348: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_308 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_309 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_275: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_348 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_9: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrad_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrad_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_8: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrad_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrad_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_347: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_274: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_347 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_7: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsraw_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpsraw_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_6: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsraw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsraw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_346: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_273: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_346 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_307: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpavgb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpavgb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_306: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpavgb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpavgb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_345: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_306 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_307 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_272: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_345 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_305: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpandn_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpandn_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_304: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpandn_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpandn_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_344: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_304 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_305 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_271: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_344 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_303: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaxub_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaxub_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_302: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaxub_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaxub_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_343: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_302 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_303 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_270: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_343 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_301: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddusw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddusw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_300: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddusw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddusw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_342: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_300 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_301 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_269: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_342 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_299: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddusb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddusb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_298: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddusb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddusb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_341: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_298 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_299 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_268: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_341 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_297: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpand_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpand_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_296: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpand_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpand_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_340: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_296 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_297 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_267: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_340 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_295: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpminub_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpminub_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_294: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpminub_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpminub_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_339: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_294 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_295 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_266: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_339 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_293: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubusw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubusw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_292: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubusw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubusw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_338: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_292 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_293 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_265: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_338 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_291: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsubusb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsubusb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_290: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsubusb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsubusb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_337: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_290 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_291 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_264: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_337 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_RX_5: OpCodeHandler_VEX_Gv_RX = OpCodeHandler_VEX_Gv_RX {
	decode: OpCodeHandler_VEX_Gv_RX::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code32: Code::VEX_Vpmovmskb_r32_ymm as u32,
	code64: Code::VEX_Vpmovmskb_r64_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_RX_4: OpCodeHandler_VEX_Gv_RX = OpCodeHandler_VEX_Gv_RX {
	decode: OpCodeHandler_VEX_Gv_RX::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vpmovmskb_r32_xmm as u32,
	code64: Code::VEX_Vpmovmskb_r64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_336: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_RX_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_GV_RX_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_263: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_336 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_12: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovq_xmmm64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_335: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WV_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_262: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_335 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_289: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmullw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmullw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_288: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmullw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmullw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_334: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_288 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_289 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_261: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_334 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_287: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpaddq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpaddq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_286: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpaddq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpaddq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_333: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_286 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_287 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_260: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_333 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_5: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrlq_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrlq_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_4: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrlq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrlq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_332: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_259: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_332 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_3: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrld_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrld_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_2: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrld_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrld_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_331: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_258: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_331 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4_1: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrlw_ymm_ymm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrlw_ymm_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_4: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrlw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrlw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_330: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_4_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_257: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_330 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_285: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaddsubps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaddsubps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_284: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaddsubps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaddsubps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_329: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_284 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_285 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_283: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaddsubpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaddsubpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_282: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaddsubpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaddsubpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_328: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_282 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_283 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_256: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_328 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_329 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_35: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vshufpd_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_34: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vshufpd_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_327: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_34 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_35 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_33: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vshufps_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_32: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vshufps_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_326: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_33 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_255: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_326 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_327 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_GPR_IB: OpCodeHandler_VEX_Gv_GPR_Ib = OpCodeHandler_VEX_Gv_GPR_Ib {
	decode: OpCodeHandler_VEX_Gv_GPR_Ib::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vpextrw_r32_xmm_imm8 as u32,
	code64: Code::VEX_Vpextrw_r64_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_325: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_GPR_IB }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_254: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_325 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHEV_IB_2: OpCodeHandler_VEX_VHEvIb = OpCodeHandler_VEX_VHEvIb {
	decode: OpCodeHandler_VEX_VHEvIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vpinsrw_xmm_xmm_r32m16_imm8 as u32,
	code_w1: Code::VEX_Vpinsrw_xmm_xmm_r64m16_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_324: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHEV_IB_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_253: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_324 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_31: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vcmpsd_xmm_xmm_xmmm64_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_30: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vcmpss_xmm_xmm_xmmm32_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_29: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vcmppd_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_28: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vcmppd_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_323: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_27: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vcmpps_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_26: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vcmpps_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_322: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_252: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_322 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_323 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_30 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_31 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GROUP_4: OpCodeHandler_Group = OpCodeHandler_Group {
	decode: OpCodeHandler_Group::decode,
	has_modrm: true,
	group_handlers: &HANDLERS_GRP_0_FAE,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KTESTD_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Ktestd_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KTESTB_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Ktestb_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_131: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KTESTB_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KTESTD_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_321: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_131 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KTESTQ_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Ktestq_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KTESTW_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Ktestw_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_130: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KTESTW_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KTESTQ_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_320: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_130 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_251: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_320 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_321 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KORTESTD_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kortestd_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KORTESTB_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kortestb_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_129: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KORTESTB_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KORTESTD_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_319: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_129 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KORTESTQ_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kortestq_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KORTESTW_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kortestw_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_128: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KORTESTW_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KORTESTQ_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_318: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_128 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_250: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_318 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_319 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_G_VK_VEX_KMOVQ_R64_K: OpCodeHandler_VEX_G_VK = OpCodeHandler_VEX_G_VK {
	decode: OpCodeHandler_VEX_G_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovq_r64_k as u32,
	gpr: Register::RAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_BITNESS_DONT_READ_MOD_RM_1: OpCodeHandler_Bitness_DontReadModRM = OpCodeHandler_Bitness_DontReadModRM {
	decode: OpCodeHandler_Bitness_DontReadModRM::decode,
	has_modrm: true,
	handler1632: unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	handler64: unsafe { HandlerTransmuter { from: &GEN_G_VK_VEX_KMOVQ_R64_K }.to },
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_G_VK_VEX_KMOVD_R32_K: OpCodeHandler_VEX_G_VK = OpCodeHandler_VEX_G_VK {
	decode: OpCodeHandler_VEX_G_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovd_r32_k as u32,
	gpr: Register::EAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_127: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_G_VK_VEX_KMOVD_R32_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_BITNESS_DONT_READ_MOD_RM_1 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_317: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_127 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_G_VK_VEX_KMOVB_R32_K: OpCodeHandler_VEX_G_VK = OpCodeHandler_VEX_G_VK {
	decode: OpCodeHandler_VEX_G_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovb_r32_k as u32,
	gpr: Register::EAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_126: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_G_VK_VEX_KMOVB_R32_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_316: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_126 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_G_VK_VEX_KMOVW_R32_K: OpCodeHandler_VEX_G_VK = OpCodeHandler_VEX_G_VK {
	decode: OpCodeHandler_VEX_G_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovw_r32_k as u32,
	gpr: Register::EAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_125: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_G_VK_VEX_KMOVW_R32_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_315: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_125 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_249: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_315 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_316 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_317 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_R_VEX_KMOVQ_K_R64: OpCodeHandler_VEX_VK_R = OpCodeHandler_VEX_VK_R {
	decode: OpCodeHandler_VEX_VK_R::decode,
	has_modrm: true,
	code: Code::VEX_Kmovq_k_r64 as u32,
	gpr: Register::RAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_BITNESS_DONT_READ_MOD_RM: OpCodeHandler_Bitness_DontReadModRM = OpCodeHandler_Bitness_DontReadModRM {
	decode: OpCodeHandler_Bitness_DontReadModRM::decode,
	has_modrm: true,
	handler1632: unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	handler64: unsafe { HandlerTransmuter { from: &GEN_VK_R_VEX_KMOVQ_K_R64 }.to },
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_R_VEX_KMOVD_K_R32: OpCodeHandler_VEX_VK_R = OpCodeHandler_VEX_VK_R {
	decode: OpCodeHandler_VEX_VK_R::decode,
	has_modrm: true,
	code: Code::VEX_Kmovd_k_r32 as u32,
	gpr: Register::EAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_124: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_R_VEX_KMOVD_K_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_BITNESS_DONT_READ_MOD_RM }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_314: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_124 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_R_VEX_KMOVB_K_R32: OpCodeHandler_VEX_VK_R = OpCodeHandler_VEX_VK_R {
	decode: OpCodeHandler_VEX_VK_R::decode,
	has_modrm: true,
	code: Code::VEX_Kmovb_k_r32 as u32,
	gpr: Register::EAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_123: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_R_VEX_KMOVB_K_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_313: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_123 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_R_VEX_KMOVW_K_R32: OpCodeHandler_VEX_VK_R = OpCodeHandler_VEX_VK_R {
	decode: OpCodeHandler_VEX_VK_R::decode,
	has_modrm: true,
	code: Code::VEX_Kmovw_k_r32 as u32,
	gpr: Register::EAX,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_122: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_R_VEX_KMOVW_K_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_312: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_122 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_248: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_312 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_313 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_314 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_M_VK_VEX_KMOVD_M32_K: OpCodeHandler_VEX_M_VK = OpCodeHandler_VEX_M_VK {
	decode: OpCodeHandler_VEX_M_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovd_m32_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_M_VK_VEX_KMOVB_M8_K: OpCodeHandler_VEX_M_VK = OpCodeHandler_VEX_M_VK {
	decode: OpCodeHandler_VEX_M_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovb_m8_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_121: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_M_VK_VEX_KMOVB_M8_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_M_VK_VEX_KMOVD_M32_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_311: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_121 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_M_VK_VEX_KMOVQ_M64_K: OpCodeHandler_VEX_M_VK = OpCodeHandler_VEX_M_VK {
	decode: OpCodeHandler_VEX_M_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovq_m64_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_M_VK_VEX_KMOVW_M16_K: OpCodeHandler_VEX_M_VK = OpCodeHandler_VEX_M_VK {
	decode: OpCodeHandler_VEX_M_VK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovw_m16_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_120: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_M_VK_VEX_KMOVW_M16_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_M_VK_VEX_KMOVQ_M64_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_310: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_120 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_247: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_310 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_311 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_WK_VEX_KMOVD_K_KM32: OpCodeHandler_VEX_VK_WK = OpCodeHandler_VEX_VK_WK {
	decode: OpCodeHandler_VEX_VK_WK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovd_k_km32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_WK_VEX_KMOVB_K_KM8: OpCodeHandler_VEX_VK_WK = OpCodeHandler_VEX_VK_WK {
	decode: OpCodeHandler_VEX_VK_WK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovb_k_km8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_119: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_WK_VEX_KMOVB_K_KM8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_WK_VEX_KMOVD_K_KM32 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_309: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_119 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_WK_VEX_KMOVQ_K_KM64: OpCodeHandler_VEX_VK_WK = OpCodeHandler_VEX_VK_WK {
	decode: OpCodeHandler_VEX_VK_WK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovq_k_km64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_WK_VEX_KMOVW_K_KM16: OpCodeHandler_VEX_VK_WK = OpCodeHandler_VEX_VK_WK {
	decode: OpCodeHandler_VEX_VK_WK::decode,
	has_modrm: true,
	code: Code::VEX_Kmovw_k_km16 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_118: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_WK_VEX_KMOVW_K_KM16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_WK_VEX_KMOVQ_K_KM64 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_308: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_118 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_246: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_308 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_309 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_11: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovdqu_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_10: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovdqu_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_307: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WV_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_WV_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_9: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovdqa_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_8: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovdqa_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_306: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WV_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_WV_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_245: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_306 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_307 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_52: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovq_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_305: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_52 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_EV_VX_VEX_VMOVD_RM32_XMM: OpCodeHandler_VEX_Ev_VX = OpCodeHandler_VEX_Ev_VX {
	decode: OpCodeHandler_VEX_Ev_VX::decode,
	has_modrm: true,
	code32: Code::VEX_Vmovd_rm32_xmm as u32,
	code64: Code::VEX_Vmovq_rm64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_304: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_EV_VX_VEX_VMOVD_RM32_XMM }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_244: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_304 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_305 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_281: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vhsubps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vhsubps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_280: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vhsubps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vhsubps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_303: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_280 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_281 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_279: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vhsubpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vhsubpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_278: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vhsubpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vhsubpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_302: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_278 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_279 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_243: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_302 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_303 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_277: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vhaddps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vhaddps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_276: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vhaddps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vhaddps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_301: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_276 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_277 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_275: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vhaddpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vhaddpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_274: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vhaddpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vhaddpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_300: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_274 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_275 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_242: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_300 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_301 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_INVALID_NO_MOD_RM: OpCodeHandler_Invalid = OpCodeHandler_Invalid {
	decode: OpCodeHandler_Invalid::decode,
	has_modrm: false,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_SIMPLE_VEX_VZEROALL: OpCodeHandler_VEX_Simple = OpCodeHandler_VEX_Simple {
	decode: OpCodeHandler_VEX_Simple::decode,
	has_modrm: false,
	code: Code::VEX_Vzeroall as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_SIMPLE_VEX_VZEROUPPER: OpCodeHandler_VEX_Simple = OpCodeHandler_VEX_Simple {
	decode: OpCodeHandler_VEX_Simple::decode,
	has_modrm: false,
	code: Code::VEX_Vzeroupper as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_NO_MOD_RM: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: false,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_SIMPLE_VEX_VZEROUPPER }.to },
		unsafe { HandlerTransmuter { from: &GEN_SIMPLE_VEX_VZEROALL }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_NO_MOD_RM: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: false,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_NO_MOD_RM }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID_NO_MOD_RM }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID_NO_MOD_RM }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID_NO_MOD_RM }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_273: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpeqd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpeqd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_272: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpeqd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpeqd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_299: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_272 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_273 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_241: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_299 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_271: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpeqw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpeqw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_270: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpeqw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpeqw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_298: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_270 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_271 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_240: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_298 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_269: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpeqb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpeqb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_268: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpeqb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpeqb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_297: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_268 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_269 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_239: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_297 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GROUP_3: OpCodeHandler_Group = OpCodeHandler_Group {
	decode: OpCodeHandler_Group::decode,
	has_modrm: true,
	group_handlers: &HANDLERS_GRP_0_F73,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GROUP_2: OpCodeHandler_Group = OpCodeHandler_Group {
	decode: OpCodeHandler_Group::decode,
	has_modrm: true,
	group_handlers: &HANDLERS_GRP_0_F72,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GROUP_1: OpCodeHandler_Group = OpCodeHandler_Group {
	decode: OpCodeHandler_Group::decode,
	has_modrm: true,
	group_handlers: &HANDLERS_GRP_0_F71,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_18: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vpshuflw_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vpshuflw_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_17: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpshuflw_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpshuflw_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_296: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_16: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vpshufhw_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vpshufhw_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_15: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpshufhw_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpshufhw_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_295: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_14: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vpshufd_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vpshufd_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_13: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpshufd_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpshufd_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_294: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_238: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_294 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_295 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_296 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_51: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovdqu_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_50: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovdqu_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_293: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_50 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_51 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_49: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovdqa_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_48: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovdqa_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_292: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_48 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_49 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_237: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_292 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_293 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_EV_VEX_VMOVD_XMM_RM32: OpCodeHandler_VEX_VX_Ev = OpCodeHandler_VEX_VX_Ev {
	decode: OpCodeHandler_VEX_VX_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Vmovd_xmm_rm32 as u32,
	code64: Code::VEX_Vmovq_xmm_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_291: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_EV_VEX_VMOVD_XMM_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_236: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_291 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_267: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpckhqdq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpckhqdq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_266: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpckhqdq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpckhqdq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_290: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_266 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_267 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_235: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_290 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_265: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpcklqdq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpcklqdq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_264: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpcklqdq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpcklqdq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_289: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_264 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_265 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_234: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_289 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_263: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpackssdw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpackssdw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_262: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpackssdw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpackssdw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_288: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_262 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_263 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_233: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_288 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_261: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpckhdq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpckhdq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_260: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpckhdq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpckhdq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_287: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_260 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_261 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_232: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_287 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_259: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpckhwd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpckhwd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_258: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpckhwd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpckhwd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_286: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_258 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_259 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_231: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_286 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_257: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpckhbw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpckhbw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_256: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpckhbw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpckhbw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_285: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_256 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_257 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_230: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_285 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_255: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpackuswb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpackuswb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_254: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpackuswb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpackuswb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_284: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_254 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_255 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_229: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_284 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_253: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpgtd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpgtd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_252: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpgtd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpgtd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_283: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_252 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_253 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_228: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_283 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_251: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpgtw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpgtw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_250: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpgtw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpgtw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_282: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_250 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_251 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_227: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_282 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_249: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpgtb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpgtb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_248: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpgtb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpgtb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_281: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_248 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_249 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_226: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_281 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_247: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpacksswb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpacksswb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_246: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpacksswb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpacksswb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_280: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_246 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_247 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_225: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_280 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_245: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpckldq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpckldq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_244: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpckldq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpckldq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_279: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_244 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_245 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_224: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_279 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_243: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpcklwd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpcklwd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_242: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpcklwd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpcklwd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_278: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_242 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_243 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_223: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_278 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_241: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpunpcklbw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpunpcklbw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_240: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpunpcklbw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpunpcklbw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_277: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_240 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_241 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_222: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_277 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_239: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmaxsd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vmaxsd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_238: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmaxss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vmaxss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_237: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vmaxpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vmaxpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_236: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmaxpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vmaxpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_276: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_236 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_237 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_235: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vmaxps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vmaxps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_234: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmaxps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vmaxps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_275: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_234 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_235 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_221: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_275 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_276 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_238 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_239 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_233: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vdivsd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vdivsd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_232: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vdivss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vdivss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_231: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vdivpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vdivpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_230: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vdivpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vdivpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_274: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_230 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_231 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_229: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vdivps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vdivps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_228: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vdivps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vdivps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_273: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_228 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_229 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_220: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_273 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_274 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_232 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_233 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_227: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vminsd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vminsd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_226: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vminss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vminss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_225: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vminpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vminpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_224: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vminpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vminpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_272: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_224 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_225 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_223: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vminps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vminps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_222: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vminps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vminps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_271: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_222 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_223 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_219: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_271 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_272 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_226 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_227 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_221: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vsubsd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vsubsd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_220: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vsubss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vsubss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_219: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vsubpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vsubpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_218: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vsubpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vsubpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_270: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_218 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_219 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_217: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vsubps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vsubps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_216: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vsubps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vsubps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_269: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_216 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_217 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_218: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_269 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_270 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_220 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_221 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_47: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vcvttps2dq_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_46: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvttps2dq_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_268: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_46 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_47 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_45: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vcvtps2dq_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_44: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtps2dq_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_267: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_44 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_45 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_43: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vcvtdq2ps_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_42: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtdq2ps_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_266: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_42 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_43 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_217: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_266 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_267 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_268 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_215: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vcvtsd2ss_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vcvtsd2ss_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_214: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vcvtss2sd_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vcvtss2sd_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_38: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vcvtpd2ps_xmm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_41: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtpd2ps_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_265: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_41 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_38 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_37: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtps2pd_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_40: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtps2pd_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_264: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_40 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_37 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_216: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_264 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_265 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_214 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_215 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_213: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmulsd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vmulsd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_212: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmulss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vmulss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_211: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vmulpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vmulpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_210: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmulpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vmulpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_263: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_210 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_211 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_209: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vmulps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vmulps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_208: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmulps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vmulps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_262: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_208 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_209 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_215: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_262 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_263 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_212 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_213 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_207: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaddsd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vaddsd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_206: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaddss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vaddss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_205: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaddpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaddpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_204: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaddpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaddpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_261: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_204 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_205 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_203: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaddps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaddps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_202: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaddps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaddps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_260: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_202 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_203 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_214: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_260 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_261 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_206 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_207 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_201: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vxorpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vxorpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_200: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vxorpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vxorpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_259: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_200 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_201 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_199: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vxorps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vxorps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_198: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vxorps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vxorps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_258: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_198 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_199 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_213: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_258 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_259 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_197: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vorpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vorpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_196: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vorpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vorpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_257: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_196 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_197 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_195: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vorps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vorps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_194: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vorps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vorps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_256: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_194 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_195 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_212: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_256 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_257 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_193: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vandnpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vandnpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_192: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vandnpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vandnpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_255: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_192 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_193 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_191: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vandnps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vandnps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_190: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vandnps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vandnps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_254: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_190 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_191 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_211: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_254 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_255 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_189: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vandpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vandpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_188: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vandpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vandpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_253: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_188 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_189 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_187: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vandps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vandps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_186: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vandps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vandps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_252: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_186 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_187 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_210: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_252 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_253 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_185: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vrcpss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vrcpss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_39: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vrcpps_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_38: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vrcpps_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_251: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_38 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_39 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_209: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_251 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_185 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_184: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vrsqrtss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vrsqrtss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_37: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vrsqrtps_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_36: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vrsqrtps_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_250: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_36 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_37 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_208: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_250 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_184 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_183: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vsqrtsd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vsqrtsd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_182: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vsqrtss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vsqrtss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_35: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vsqrtpd_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_34: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vsqrtpd_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_249: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_34 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_35 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_33: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vsqrtps_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_32: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vsqrtps_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_248: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_33 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_207: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_248 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_249 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_182 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_183 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_RX_3: OpCodeHandler_VEX_Gv_RX = OpCodeHandler_VEX_Gv_RX {
	decode: OpCodeHandler_VEX_Gv_RX::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code32: Code::VEX_Vmovmskpd_r32_ymm as u32,
	code64: Code::VEX_Vmovmskpd_r64_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_RX_2: OpCodeHandler_VEX_Gv_RX = OpCodeHandler_VEX_Gv_RX {
	decode: OpCodeHandler_VEX_Gv_RX::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vmovmskpd_r32_xmm as u32,
	code64: Code::VEX_Vmovmskpd_r64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_247: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_RX_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_GV_RX_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_RX_1: OpCodeHandler_VEX_Gv_RX = OpCodeHandler_VEX_Gv_RX {
	decode: OpCodeHandler_VEX_Gv_RX::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code32: Code::VEX_Vmovmskps_r32_ymm as u32,
	code64: Code::VEX_Vmovmskps_r64_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_RX: OpCodeHandler_VEX_Gv_RX = OpCodeHandler_VEX_Gv_RX {
	decode: OpCodeHandler_VEX_Gv_RX::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vmovmskps_r32_xmm as u32,
	code64: Code::VEX_Vmovmskps_r64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_246: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_RX }.to },
		unsafe { HandlerTransmuter { from: &GEN_GV_RX_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_206: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_246 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_247 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KUNPCKBW_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kunpckbw_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_117: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KUNPCKBW_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_245: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_117 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KUNPCKDQ_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kunpckdq_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KUNPCKWD_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kunpckwd_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_116: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KUNPCKWD_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KUNPCKDQ_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_244: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_116 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_205: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_244 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_245 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KADDD_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kaddd_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KADDB_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kaddb_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_115: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KADDB_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KADDD_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_243: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_115 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KADDQ_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kaddq_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KADDW_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kaddw_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_114: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KADDW_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KADDQ_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_242: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_114 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_204: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_242 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_243 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXORD_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxord_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXORB_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxorb_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_113: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXORB_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXORD_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_241: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_113 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXORQ_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxorq_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXORW_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxorw_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_112: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXORW_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXORQ_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_240: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_112 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_203: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_240 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_241 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXNORD_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxnord_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXNORB_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxnorb_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_111: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXNORB_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXNORD_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_239: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_111 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXNORQ_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxnorq_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KXNORW_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kxnorw_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_110: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXNORW_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KXNORQ_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_238: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_110 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_202: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_238 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_239 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KORD_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kord_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KORB_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Korb_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_109: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KORB_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KORD_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_237: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_109 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KORQ_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Korq_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KORW_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Korw_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_108: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KORW_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KORQ_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_236: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_108 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_201: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_236 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_237 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KNOTD_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Knotd_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KNOTB_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Knotb_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_107: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KNOTB_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KNOTD_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_235: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_107 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KNOTQ_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Knotq_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_VEX_KNOTW_K_K: OpCodeHandler_VEX_VK_RK = OpCodeHandler_VEX_VK_RK {
	decode: OpCodeHandler_VEX_VK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Knotw_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_106: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KNOTW_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_VEX_KNOTQ_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_234: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_106 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_200: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_234 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_235 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDND_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandnd_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDNB_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandnb_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_105: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDNB_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDND_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_233: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_105 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDNQ_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandnq_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDNW_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandnw_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_104: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDNW_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDNQ_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_232: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_104 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_199: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_232 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_233 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDD_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandd_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDB_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandb_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_103: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDB_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDD_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_231: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_103 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDQ_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandq_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_HK_RK_VEX_KANDW_K_K_K: OpCodeHandler_VEX_VK_HK_RK = OpCodeHandler_VEX_VK_HK_RK {
	decode: OpCodeHandler_VEX_VK_HK_RK::decode,
	has_modrm: true,
	code: Code::VEX_Kandw_k_k_k as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_102: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDW_K_K_K }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_HK_RK_VEX_KANDQ_K_K_K }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_230: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_102 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_198: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_230 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_231 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_31: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcomisd_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_30: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcomiss_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_197: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_30 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_31 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_29: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vucomisd_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_28: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vucomiss_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_196: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_W_3: OpCodeHandler_VEX_Gv_W = OpCodeHandler_VEX_Gv_W {
	decode: OpCodeHandler_VEX_Gv_W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vcvtsd2si_r32_xmmm64 as u32,
	code_w1: Code::VEX_Vcvtsd2si_r64_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_W_2: OpCodeHandler_VEX_Gv_W = OpCodeHandler_VEX_Gv_W {
	decode: OpCodeHandler_VEX_Gv_W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vcvtss2si_r32_xmmm32 as u32,
	code_w1: Code::VEX_Vcvtss2si_r64_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_195: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_GV_W_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_GV_W_3 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_W_1: OpCodeHandler_VEX_Gv_W = OpCodeHandler_VEX_Gv_W {
	decode: OpCodeHandler_VEX_Gv_W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vcvttsd2si_r32_xmmm64 as u32,
	code_w1: Code::VEX_Vcvttsd2si_r64_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_W: OpCodeHandler_VEX_Gv_W = OpCodeHandler_VEX_Gv_W {
	decode: OpCodeHandler_VEX_Gv_W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vcvttss2si_r32_xmmm32 as u32,
	code_w1: Code::VEX_Vcvttss2si_r64_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_194: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_GV_W }.to },
		unsafe { HandlerTransmuter { from: &GEN_GV_W_1 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_9: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmovntpd_m256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_8: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovntpd_m128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_229: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MV_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_MV_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_7: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmovntps_m256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_6: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovntps_m128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_228: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MV_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_MV_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_193: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_228 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_229 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHEV_1: OpCodeHandler_VEX_VHEv = OpCodeHandler_VEX_VHEv {
	decode: OpCodeHandler_VEX_VHEv::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vcvtsi2sd_xmm_xmm_rm32 as u32,
	code_w1: Code::VEX_Vcvtsi2sd_xmm_xmm_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHEV: OpCodeHandler_VEX_VHEv = OpCodeHandler_VEX_VHEv {
	decode: OpCodeHandler_VEX_VHEv::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vcvtsi2ss_xmm_xmm_rm32 as u32,
	code_w1: Code::VEX_Vcvtsi2ss_xmm_xmm_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_192: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHEV }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHEV_1 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_7: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovapd_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_6: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovapd_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_227: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WV_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_WV_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_5: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovaps_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_4: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovaps_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_226: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WV_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_WV_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_191: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_226 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_227 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_27: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovapd_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_26: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovapd_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_225: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_25: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovaps_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_24: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovaps_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_224: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_24 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_25 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_190: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_224 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_225 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_5: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovhpd_m64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_223: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MV_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_4: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovhps_m64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_222: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MV_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_189: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_222 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_223 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_23: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovshdup_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_22: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovshdup_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_221: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_9: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovhpd_xmm_xmm_m64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_220: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHM_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_3_1: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmovlhps_xmm_xmm_xmm as u32,
	code_m: Code::VEX_Vmovhps_xmm_xmm_m64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_219: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_3_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_188: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_219 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_220 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_221 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_181: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vunpckhpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vunpckhpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_180: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vunpckhpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vunpckhpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_218: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_180 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_181 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_179: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vunpckhps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vunpckhps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_178: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vunpckhps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vunpckhps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_217: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_178 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_179 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_187: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_217 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_218 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_177: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vunpcklpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vunpcklpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_176: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vunpcklpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vunpcklpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_216: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_176 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_177 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_175: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vunpcklps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vunpcklps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_174: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vunpcklps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vunpcklps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_215: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_174 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_175 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_186: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_215 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_216 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_3: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovlpd_m64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_214: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MV_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_2: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovlps_m64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_213: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MV_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_185: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_213 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_214 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_21: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovddup_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_20: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovddup_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_212: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_19: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovsldup_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_18: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovsldup_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_211: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_8: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovlpd_xmm_xmm_m64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_210: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHM_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_3: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmovhlps_xmm_xmm_xmm as u32,
	code_m: Code::VEX_Vmovlps_xmm_xmm_m64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_209: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_184: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_209 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_210 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_211 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_212 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV_1: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovsd_m64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WHV_1: OpCodeHandler_VEX_WHV = OpCodeHandler_VEX_WHV {
	decode: OpCodeHandler_VEX_WHV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_r: Code::VEX_Vmovsd_xmm_xmm_xmm_0F11 as u32,
	code_m: Code::VEX_Vmovsd_xmm_xmm_xmm_0F11 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_RM_3: OpCodeHandler_RM = OpCodeHandler_RM {
	decode: OpCodeHandler_RM::decode,
	has_modrm: true,
	reg: unsafe { HandlerTransmuter { from: &GEN_WHV_1 }.to },
	mem: unsafe { HandlerTransmuter { from: &GEN_MV_1 }.to },
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MV: OpCodeHandler_VEX_MV = OpCodeHandler_VEX_MV {
	decode: OpCodeHandler_VEX_MV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovss_m32_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WHV: OpCodeHandler_VEX_WHV = OpCodeHandler_VEX_WHV {
	decode: OpCodeHandler_VEX_WHV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_r: Code::VEX_Vmovss_xmm_xmm_xmm_0F11 as u32,
	code_m: Code::VEX_Vmovss_xmm_xmm_xmm_0F11 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_RM_2: OpCodeHandler_RM = OpCodeHandler_RM {
	decode: OpCodeHandler_RM::decode,
	has_modrm: true,
	reg: unsafe { HandlerTransmuter { from: &GEN_WHV }.to },
	mem: unsafe { HandlerTransmuter { from: &GEN_MV }.to },
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_3: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovupd_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_2: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovupd_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_208: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WV_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_WV_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV_1: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovups_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WV: OpCodeHandler_VEX_WV = OpCodeHandler_VEX_WV {
	decode: OpCodeHandler_VEX_WV::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovups_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_207: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WV }.to },
		unsafe { HandlerTransmuter { from: &GEN_WV_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_183: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_207 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_208 }.to },
		unsafe { HandlerTransmuter { from: &GEN_RM_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_RM_3 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM_5: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovsd_xmm_m64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_173: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmovsd_xmm_xmm_xmm as u32,
	code_m: Code::VEX_Vmovsd_xmm_xmm_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_RM_1: OpCodeHandler_RM = OpCodeHandler_RM {
	decode: OpCodeHandler_RM::decode,
	has_modrm: true,
	reg: unsafe { HandlerTransmuter { from: &GEN_VHW_2_173 }.to },
	mem: unsafe { HandlerTransmuter { from: &GEN_VM_5 }.to },
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM_4: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovss_xmm_m32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_172: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vmovss_xmm_xmm_xmm as u32,
	code_m: Code::VEX_Vmovss_xmm_xmm_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_RM: OpCodeHandler_RM = OpCodeHandler_RM {
	decode: OpCodeHandler_RM::decode,
	has_modrm: true,
	reg: unsafe { HandlerTransmuter { from: &GEN_VHW_2_172 }.to },
	mem: unsafe { HandlerTransmuter { from: &GEN_VM_4 }.to },
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_17: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovupd_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_16: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovupd_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_206: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_15: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vmovups_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_14: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vmovups_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_205: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_182: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_205 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_206 }.to },
		unsafe { HandlerTransmuter { from: &GEN_RM }.to },
		unsafe { HandlerTransmuter { from: &GEN_RM_1 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HV_EV_VEX_BLSI_R32_RM32: OpCodeHandler_VEX_Hv_Ev = OpCodeHandler_VEX_Hv_Ev {
	decode: OpCodeHandler_VEX_Hv_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Blsi_r32_rm32 as u32,
	code64: Code::VEX_Blsi_r64_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_204: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HV_EV_VEX_BLSI_R32_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_181: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_204 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HV_EV_VEX_BLSMSK_R32_RM32: OpCodeHandler_VEX_Hv_Ev = OpCodeHandler_VEX_Hv_Ev {
	decode: OpCodeHandler_VEX_Hv_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Blsmsk_r32_rm32 as u32,
	code64: Code::VEX_Blsmsk_r64_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_203: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HV_EV_VEX_BLSMSK_R32_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_180: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_203 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_HV_EV_VEX_BLSR_R32_RM32: OpCodeHandler_VEX_Hv_Ev = OpCodeHandler_VEX_Hv_Ev {
	decode: OpCodeHandler_VEX_Hv_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Blsr_r32_rm32 as u32,
	code64: Code::VEX_Blsr_r64_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_202: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_HV_EV_VEX_BLSR_R32_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_179: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_202 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_EV_GV_VEX_SHRX_R32_RM32_R32: OpCodeHandler_VEX_Gv_Ev_Gv = OpCodeHandler_VEX_Gv_Ev_Gv {
	decode: OpCodeHandler_VEX_Gv_Ev_Gv::decode,
	has_modrm: true,
	code32: Code::VEX_Shrx_r32_rm32_r32 as u32,
	code64: Code::VEX_Shrx_r64_rm64_r64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_201: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_EV_GV_VEX_SHRX_R32_RM32_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_EV_GV_VEX_SARX_R32_RM32_R32: OpCodeHandler_VEX_Gv_Ev_Gv = OpCodeHandler_VEX_Gv_Ev_Gv {
	decode: OpCodeHandler_VEX_Gv_Ev_Gv::decode,
	has_modrm: true,
	code32: Code::VEX_Sarx_r32_rm32_r32 as u32,
	code64: Code::VEX_Sarx_r64_rm64_r64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_200: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_EV_GV_VEX_SARX_R32_RM32_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_EV_GV_VEX_SHLX_R32_RM32_R32: OpCodeHandler_VEX_Gv_Ev_Gv = OpCodeHandler_VEX_Gv_Ev_Gv {
	decode: OpCodeHandler_VEX_Gv_Ev_Gv::decode,
	has_modrm: true,
	code32: Code::VEX_Shlx_r32_rm32_r32 as u32,
	code64: Code::VEX_Shlx_r64_rm64_r64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_199: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_EV_GV_VEX_SHLX_R32_RM32_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_EV_GV_VEX_BEXTR_R32_RM32_R32: OpCodeHandler_VEX_Gv_Ev_Gv = OpCodeHandler_VEX_Gv_Ev_Gv {
	decode: OpCodeHandler_VEX_Gv_Ev_Gv::decode,
	has_modrm: true,
	code32: Code::VEX_Bextr_r32_rm32_r32 as u32,
	code64: Code::VEX_Bextr_r64_rm64_r64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_198: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_EV_GV_VEX_BEXTR_R32_RM32_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_178: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_198 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_199 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_200 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_201 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_GV_EV_VEX_MULX_R32_R32_RM32: OpCodeHandler_VEX_Gv_Gv_Ev = OpCodeHandler_VEX_Gv_Gv_Ev {
	decode: OpCodeHandler_VEX_Gv_Gv_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Mulx_r32_r32_rm32 as u32,
	code64: Code::VEX_Mulx_r64_r64_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_197: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_GV_EV_VEX_MULX_R32_R32_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_177: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_197 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_GV_EV_VEX_PDEP_R32_R32_RM32: OpCodeHandler_VEX_Gv_Gv_Ev = OpCodeHandler_VEX_Gv_Gv_Ev {
	decode: OpCodeHandler_VEX_Gv_Gv_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Pdep_r32_r32_rm32 as u32,
	code64: Code::VEX_Pdep_r64_r64_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_196: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_GV_EV_VEX_PDEP_R32_R32_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_GV_EV_VEX_PEXT_R32_R32_RM32: OpCodeHandler_VEX_Gv_Gv_Ev = OpCodeHandler_VEX_Gv_Gv_Ev {
	decode: OpCodeHandler_VEX_Gv_Gv_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Pext_r32_r32_rm32 as u32,
	code64: Code::VEX_Pext_r64_r64_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_195: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_GV_EV_VEX_PEXT_R32_R32_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_EV_GV_VEX_BZHI_R32_RM32_R32: OpCodeHandler_VEX_Gv_Ev_Gv = OpCodeHandler_VEX_Gv_Ev_Gv {
	decode: OpCodeHandler_VEX_Gv_Ev_Gv::decode,
	has_modrm: true,
	code32: Code::VEX_Bzhi_r32_rm32_r32 as u32,
	code64: Code::VEX_Bzhi_r64_rm64_r64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_194: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_EV_GV_VEX_BZHI_R32_RM32_R32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_176: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_194 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_195 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_196 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GROUP: OpCodeHandler_Group = OpCodeHandler_Group {
	decode: OpCodeHandler_Group::decode,
	has_modrm: true,
	group_handlers: &HANDLERS_GRP_0_F38_F3,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_GV_EV_VEX_ANDN_R32_R32_RM32: OpCodeHandler_VEX_Gv_Gv_Ev = OpCodeHandler_VEX_Gv_Gv_Ev {
	decode: OpCodeHandler_VEX_Gv_Gv_Ev::decode,
	has_modrm: true,
	code32: Code::VEX_Andn_r32_r32_rm32 as u32,
	code64: Code::VEX_Andn_r64_r64_rm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_193: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_GV_EV_VEX_ANDN_R32_R32_RM32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_175: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_193 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_171: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaesdeclast_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaesdeclast_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_170: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaesdeclast_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaesdeclast_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_192: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_170 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_171 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_174: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_192 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_169: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaesdec_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaesdec_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_168: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaesdec_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaesdec_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_191: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_168 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_169 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_173: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_191 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_167: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaesenclast_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaesenclast_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_166: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaesenclast_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaesenclast_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_190: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_166 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_167 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_172: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_190 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_165: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vaesenc_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vaesenc_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_164: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vaesenc_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vaesenc_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_189: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_164 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_165 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_171: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_189 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_13: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vaesimc_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_188: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_170: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_188 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_163: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vgf2p8mulb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vgf2p8mulb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_162: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vgf2p8mulb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vgf2p8mulb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_187: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_162 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_163 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_101: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_187 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_169: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_101 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_161: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub231sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfnmsub231sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_160: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub231ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfnmsub231ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_100: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_160 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_161 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_168: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_100 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_159: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmsub231pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmsub231pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_158: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub231pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmsub231pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_186: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_158 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_159 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_157: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmsub231ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmsub231ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_156: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub231ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmsub231ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_185: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_156 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_157 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_99: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_185 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_186 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_167: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_99 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_155: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd231sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfnmadd231sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_154: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd231ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfnmadd231ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_98: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_154 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_155 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_166: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_98 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_153: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmadd231pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmadd231pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_152: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd231pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmadd231pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_184: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_152 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_153 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_151: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmadd231ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmadd231ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_150: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd231ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmadd231ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_183: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_150 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_151 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_97: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_183 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_184 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_165: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_97 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_149: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub231sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfmsub231sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_148: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub231ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfmsub231ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_96: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_148 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_149 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_164: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_96 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_147: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsub231pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsub231pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_146: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub231pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsub231pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_182: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_146 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_147 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_145: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsub231ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsub231ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_144: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub231ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsub231ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_181: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_144 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_145 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_95: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_181 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_182 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_163: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_95 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_143: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd231sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfmadd231sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_142: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd231ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfmadd231ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_94: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_142 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_143 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_162: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_94 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_141: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmadd231pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmadd231pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_140: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd231pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmadd231pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_180: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_140 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_141 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_139: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmadd231ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmadd231ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_138: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd231ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmadd231ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_179: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_138 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_139 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_93: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_179 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_180 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_161: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_93 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_137: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsubadd231pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsubadd231pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_136: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsubadd231pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsubadd231pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_178: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_136 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_137 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_135: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsubadd231ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsubadd231ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_134: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsubadd231ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsubadd231ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_177: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_134 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_135 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_92: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_177 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_178 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_160: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_92 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_133: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmaddsub231pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmaddsub231pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_132: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmaddsub231pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmaddsub231pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_176: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_132 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_133 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_131: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmaddsub231ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmaddsub231ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_130: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmaddsub231ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmaddsub231ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_175: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_130 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_131 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_91: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_175 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_176 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_159: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_91 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_129: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub213sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfnmsub213sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_128: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub213ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfnmsub213ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_90: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_128 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_129 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_158: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_90 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_127: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmsub213pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmsub213pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_126: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub213pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmsub213pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_174: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_126 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_127 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_125: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmsub213ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmsub213ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_124: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub213ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmsub213ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_173: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_124 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_125 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_89: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_173 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_174 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_157: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_89 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_123: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd213sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfnmadd213sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_122: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd213ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfnmadd213ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_88: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_122 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_123 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_156: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_88 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_121: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmadd213pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmadd213pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_120: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd213pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmadd213pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_172: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_120 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_121 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_119: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmadd213ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmadd213ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_118: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd213ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmadd213ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_171: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_118 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_119 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_87: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_171 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_172 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_155: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_87 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_117: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub213sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfmsub213sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_116: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub213ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfmsub213ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_86: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_116 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_117 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_154: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_86 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_115: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsub213pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsub213pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_114: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub213pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsub213pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_170: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_114 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_115 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_113: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsub213ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsub213ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_112: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub213ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsub213ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_169: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_112 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_113 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_85: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_169 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_170 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_153: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_85 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_111: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd213sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfmadd213sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_110: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd213ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfmadd213ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_84: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_110 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_111 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_152: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_84 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_109: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmadd213pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmadd213pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_108: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd213pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmadd213pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_168: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_108 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_109 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_107: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmadd213ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmadd213ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_106: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd213ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmadd213ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_167: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_106 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_107 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_83: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_167 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_168 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_151: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_83 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_105: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsubadd213pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsubadd213pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_104: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsubadd213pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsubadd213pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_166: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_104 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_105 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_103: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsubadd213ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsubadd213ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_102: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsubadd213ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsubadd213ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_165: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_102 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_103 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_82: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_165 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_166 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_150: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_82 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_101: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmaddsub213pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmaddsub213pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_100: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmaddsub213pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmaddsub213pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_164: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_100 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_101 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_99: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmaddsub213ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmaddsub213ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_98: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmaddsub213ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmaddsub213ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_163: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_98 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_99 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_81: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_163 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_164 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_149: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_81 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_97: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub132sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfnmsub132sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_96: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub132ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfnmsub132ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_80: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_96 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_97 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_148: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_80 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_95: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmsub132pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmsub132pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_94: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub132pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmsub132pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_162: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_94 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_95 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_93: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmsub132ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmsub132ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_92: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmsub132ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmsub132ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_161: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_92 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_93 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_79: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_161 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_162 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_147: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_79 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_91: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd132sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfnmadd132sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_90: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd132ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfnmadd132ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_78: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_90 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_91 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_146: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_78 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_89: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmadd132pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmadd132pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_88: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd132pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmadd132pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_160: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_88 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_89 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_87: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfnmadd132ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfnmadd132ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_86: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfnmadd132ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfnmadd132ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_159: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_86 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_87 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_77: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_159 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_160 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_145: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_77 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_85: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub132sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfmsub132sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_84: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub132ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfmsub132ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_76: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_84 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_85 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_144: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_76 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_83: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsub132pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsub132pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_82: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub132pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsub132pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_158: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_82 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_83 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_81: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsub132ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsub132ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_80: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsub132ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsub132ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_157: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_80 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_81 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_75: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_157 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_158 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_143: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_75 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_79: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd132sd_xmm_xmm_xmmm64 as u32,
	code_m: Code::VEX_Vfmadd132sd_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_78: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd132ss_xmm_xmm_xmmm32 as u32,
	code_m: Code::VEX_Vfmadd132ss_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_74: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_78 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_79 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_142: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_74 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_77: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmadd132pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmadd132pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_76: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd132pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmadd132pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_156: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_76 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_77 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_75: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmadd132ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmadd132ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_74: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmadd132ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmadd132ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_155: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_74 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_75 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_73: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_155 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_156 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_141: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_73 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_73: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsubadd132pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsubadd132pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_72: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsubadd132pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsubadd132pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_154: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_72 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_73 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_71: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmsubadd132ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmsubadd132ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_70: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmsubadd132ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmsubadd132ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_153: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_70 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_71 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_72: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_153 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_154 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_140: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_72 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_69: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmaddsub132pd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmaddsub132pd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_68: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmaddsub132pd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmaddsub132pd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_152: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_68 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_69 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_67: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vfmaddsub132ps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vfmaddsub132ps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_66: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vfmaddsub132ps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vfmaddsub132ps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_151: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_66 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_67 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_71: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_151 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_152 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_139: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_71 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_15: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	vsib_index: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vgatherqpd_ymm_vm64y_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_14: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vgatherqpd_xmm_vm64x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_150: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_13: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::YMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vgatherqps_xmm_vm64y_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_12: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vgatherqps_xmm_vm64x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_149: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_70: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_149 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_150 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_138: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_70 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_11: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vgatherdpd_ymm_vm32x_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_10: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vgatherdpd_xmm_vm32x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_148: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_9: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	vsib_index: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vgatherdps_ymm_vm32y_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_8: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vgatherdps_xmm_vm32x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_147: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_69: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_147 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_148 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_137: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_69 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_7: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	vsib_index: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vpgatherqq_ymm_vm64y_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_6: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpgatherqq_xmm_vm64x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_146: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_5: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::YMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpgatherqd_xmm_vm64y_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_4: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpgatherqd_xmm_vm64x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_145: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_68: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_145 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_146 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_136: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_68 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_3: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vpgatherdq_ymm_vm32x_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_2: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpgatherdq_xmm_vm32x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_144: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX_1: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	vsib_index: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vpgatherdd_ymm_vm32y_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VX_VSIB_HX: OpCodeHandler_VEX_VX_VSIB_HX = OpCodeHandler_VEX_VX_VSIB_HX {
	decode: OpCodeHandler_VEX_VX_VSIB_HX::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	vsib_index: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpgatherdd_xmm_vm32x_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_143: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX }.to },
		unsafe { HandlerTransmuter { from: &GEN_VX_VSIB_HX_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_67: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_143 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_144 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_135: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_67 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV_7: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpmaskmovq_m256_ymm_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV_6: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpmaskmovq_m128_xmm_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_142: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MHV_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_MHV_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV_5: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpmaskmovd_m256_ymm_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV_4: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpmaskmovd_m128_xmm_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_141: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MHV_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_MHV_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_66: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_141 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_142 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_134: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_66 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_7: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpmaskmovq_ymm_ymm_m256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_6: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpmaskmovq_xmm_xmm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_140: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHM_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHM_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_5: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpmaskmovd_ymm_ymm_m256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_4: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpmaskmovd_xmm_xmm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_139: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHM_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHM_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_65: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_139 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_140 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_133: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_65 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_36: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastw_ymm_xmmm16 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_35: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastw_xmm_xmmm16 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_138: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_35 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_36 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_64: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_138 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_132: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_64 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_34: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastb_ymm_xmmm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_33: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastb_xmm_xmmm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_137: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_33 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_34 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_63: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_137 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_131: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_63 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM_3: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vbroadcasti128_ymm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_136: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VM_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_62: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_136 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_130: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_62 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_32: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastq_ymm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_31: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastq_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_135: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_31 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_61: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_135 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_129: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_61 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_30: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastd_ymm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_29: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpbroadcastd_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_134: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_30 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_60: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_134 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_128: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_60 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_65: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsllvq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsllvq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_64: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsllvq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsllvq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_133: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_64 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_65 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_63: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsllvd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsllvd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_62: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsllvd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsllvd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_132: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_62 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_63 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_59: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_132 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_133 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_127: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_59 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_61: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsravd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsravd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_60: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsravd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsravd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_131: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_60 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_61 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_58: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_131 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_126: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_58 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_59: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsrlvq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsrlvq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_58: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrlvq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrlvq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_130: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_58 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_59 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_57: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsrlvd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsrlvd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_56: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsrlvd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsrlvd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_129: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_56 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_57 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_57: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_129 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_130 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_125: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_57 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_12: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vphminposuw_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_128: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_124: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_128 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_55: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmulld_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmulld_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_54: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmulld_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmulld_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_127: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_54 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_55 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_123: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_127 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_53: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaxud_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaxud_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_52: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaxud_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaxud_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_126: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_52 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_53 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_122: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_126 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_51: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaxuw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaxuw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_50: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaxuw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaxuw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_125: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_50 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_51 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_121: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_125 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_49: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaxsd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaxsd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_48: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaxsd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaxsd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_124: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_48 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_49 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_120: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_124 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_47: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaxsb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaxsb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_46: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaxsb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaxsb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_123: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_46 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_47 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_119: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_123 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_45: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpminud_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpminud_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_44: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpminud_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpminud_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_122: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_44 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_45 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_118: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_122 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_43: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpminuw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpminuw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_42: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpminuw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpminuw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_121: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_42 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_43 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_117: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_121 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_41: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpminsd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpminsd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_40: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpminsd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpminsd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_120: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_40 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_41 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_116: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_120 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_39: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpminsb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpminsb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_38: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpminsb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpminsb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_119: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_38 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_39 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_115: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_119 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_37: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpgtq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpgtq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_36: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpgtq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpgtq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_118: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_36 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_37 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_114: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_118 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_35: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpermd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpermd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_117: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_35 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_56: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_117 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_113: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_56 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_28: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxdq_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_27: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxdq_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_116: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_112: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_116 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_26: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxwq_ymm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_25: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxwq_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_115: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_25 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_111: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_115 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_24: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxwd_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_23: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxwd_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_114: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_24 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_110: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_114 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_22: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxbq_ymm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_21: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxbq_xmm_xmmm16 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_113: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_109: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_113 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_20: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxbd_ymm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_19: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxbd_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_112: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_108: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_112 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_18: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxbw_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_17: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovzxbw_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_111: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_107: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_111 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV_3: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmaskmovpd_m256_ymm_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV_2: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmaskmovpd_m128_xmm_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_110: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MHV_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_MHV_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_55: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_110 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_106: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_55 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV_1: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmaskmovps_m256_ymm_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MHV: OpCodeHandler_VEX_MHV = OpCodeHandler_VEX_MHV {
	decode: OpCodeHandler_VEX_MHV::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmaskmovps_m128_xmm_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_109: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_MHV }.to },
		unsafe { HandlerTransmuter { from: &GEN_MHV_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_54: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_109 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_105: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_54 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_3: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmaskmovpd_ymm_ymm_m256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_2: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmaskmovpd_xmm_xmm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_108: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHM_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHM_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_53: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_108 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_104: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_53 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM_1: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmaskmovps_ymm_ymm_m256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHM: OpCodeHandler_VEX_VHM = OpCodeHandler_VEX_VHM {
	decode: OpCodeHandler_VEX_VHM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmaskmovps_xmm_xmm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_107: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHM }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHM_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_52: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_107 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_103: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_52 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_34: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpackusdw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpackusdw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_33: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpackusdw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpackusdw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_106: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_33 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_34 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_102: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_106 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM_2: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vmovntdqa_ymm_m256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM_1: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vmovntdqa_xmm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_105: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VM_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VM_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_101: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_105 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_32: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpcmpeqq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpcmpeqq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_31: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpcmpeqq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpcmpeqq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_104: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_31 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_100: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_104 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_30: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmuldq_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmuldq_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_29: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmuldq_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmuldq_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_103: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_30 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_99: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_103 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_16: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxdq_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_15: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxdq_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_102: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_98: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_102 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_14: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxwq_ymm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_13: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxwq_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_101: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_97: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_101 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_12: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxwd_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_11: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxwd_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_100: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_96: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_100 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_10: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxbq_ymm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_9: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxbq_xmm_xmmm16 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_99: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_95: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_99 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_8: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxbd_ymm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_7: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxbd_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_98: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_94: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_98 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_6: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxbw_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_5: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpmovsxbw_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_97: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_93: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_97 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_11: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vpabsd_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_10: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpabsd_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_96: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_92: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_96 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_9: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vpabsw_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_8: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpabsw_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_95: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_91: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_95 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_7: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vpabsb_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_6: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vpabsb_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_94: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_90: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_94 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VM: OpCodeHandler_VEX_VM = OpCodeHandler_VEX_VM {
	decode: OpCodeHandler_VEX_VM::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vbroadcastf128_ymm_m128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_93: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VM }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_51: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_93 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_89: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_51 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_4: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vbroadcastsd_ymm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_92: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_50: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_92 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_88: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_50 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_3: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vbroadcastss_ymm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_2: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vbroadcastss_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_91: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_49: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_91 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_87: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_49 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_5: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vptest_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_4: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vptest_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_90: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_86: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_90 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_28: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpermps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpermps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_89: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_48: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_89 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_85: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_48 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3_1: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtph2ps_ymm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_3: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtph2ps_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_88: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_3_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_47: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_88 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_84: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_47 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_3: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vtestpd_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_2: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vtestpd_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_87: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_46: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_87 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_83: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_46 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2_1: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vtestps_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VW_2: OpCodeHandler_VEX_VW = OpCodeHandler_VEX_VW {
	decode: OpCodeHandler_VEX_VW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vtestps_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_86: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VW_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VW_2_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_45: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_86 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_82: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_45 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_27: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpermilpd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpermilpd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_26: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpermilpd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpermilpd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_85: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_44: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_85 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_81: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_44 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_25: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpermilps_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpermilps_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_24: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpermilps_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpermilps_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_84: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_24 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_25 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_43: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_84 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_80: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_43 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_23: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmulhrsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmulhrsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_22: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmulhrsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmulhrsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_83: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_79: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_83 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_21: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsignd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsignd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_20: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsignd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsignd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_82: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_78: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_82 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_19: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsignw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsignw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_18: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsignw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsignw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_81: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_77: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_81 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_17: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpsignb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpsignb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_16: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpsignb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpsignb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_80: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_76: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_80 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_15: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vphsubsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vphsubsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_14: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vphsubsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vphsubsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_79: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_75: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_79 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_13: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vphsubd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vphsubd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_12: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vphsubd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vphsubd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_78: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_74: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_78 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_11: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vphsubw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vphsubw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_10: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vphsubw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vphsubw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_77: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_73: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_77 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_9: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpmaddubsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpmaddubsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_8: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpmaddubsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpmaddubsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_76: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_72: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_76 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_7: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vphaddsw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vphaddsw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_6: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vphaddsw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vphaddsw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_75: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_71: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_75 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_5: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vphaddd_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vphaddd_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_4: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vphaddd_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vphaddd_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_74: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_70: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_74 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_3: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vphaddw_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vphaddw_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_2: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vphaddw_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vphaddw_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_73: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_69: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_73 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2_1: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code_r: Code::VEX_Vpshufb_ymm_ymm_ymmm256 as u32,
	code_m: Code::VEX_Vpshufb_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHW_2: OpCodeHandler_VEX_VHW = OpCodeHandler_VEX_VHW {
	decode: OpCodeHandler_VEX_VHW::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code_r: Code::VEX_Vpshufb_xmm_xmm_xmmm128 as u32,
	code_m: Code::VEX_Vpshufb_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_72: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHW_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHW_2_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_68: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_72 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_EV_IB_VEX_RORX_R32_RM32_IMM8: OpCodeHandler_VEX_Gv_Ev_Ib = OpCodeHandler_VEX_Gv_Ev_Ib {
	decode: OpCodeHandler_VEX_Gv_Ev_Ib::decode,
	has_modrm: true,
	code32: Code::VEX_Rorx_r32_rm32_imm8 as u32,
	code64: Code::VEX_Rorx_r64_rm64_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_71: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_EV_IB_VEX_RORX_R32_RM32_IMM8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_67: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_71 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_12: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vaeskeygenassist_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vaeskeygenassist_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_70: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_66: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_70 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_25: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vgf2p8affineinvqb_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_24: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vgf2p8affineinvqb_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_69: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_24 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_25 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_42: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_69 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_65: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_42 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_23: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vgf2p8affineqb_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_22: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vgf2p8affineqb_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_68: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_41: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_68 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_64: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_41 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_31: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubsd_xmm_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_37: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubsd_xmm_xmm_xmmm64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_40: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_37 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_31 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_63: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_40 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_30: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubss_xmm_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_36: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubss_xmm_xmm_xmmm32_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_39: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_36 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_30 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_62: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_39 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_29: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmsubpd_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_28: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubpd_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_67: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_35: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmsubpd_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_34: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubpd_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_66: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_34 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_35 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_38: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_66 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_67 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_61: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_38 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_27: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmsubps_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_26: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubps_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_65: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_33: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmsubps_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_32: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmsubps_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_64: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_33 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_37: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_64 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_65 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_60: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_37 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_25: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddsd_xmm_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_31: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddsd_xmm_xmm_xmmm64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_36: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_31 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_25 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_59: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_36 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_24: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddss_xmm_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_30: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddss_xmm_xmm_xmmm32_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_35: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_30 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_24 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_58: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_35 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_23: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmaddpd_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_22: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddpd_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_63: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_29: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmaddpd_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_28: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddpd_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_62: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_34: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_62 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_63 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_57: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_34 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_21: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmaddps_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_20: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddps_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_61: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_27: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfnmaddps_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_26: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfnmaddps_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_60: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_33: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_60 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_61 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_56: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_33 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_19: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubsd_xmm_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_25: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubsd_xmm_xmm_xmmm64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_32: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_25 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_19 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_55: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_18: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubss_xmm_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_24: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubss_xmm_xmm_xmmm32_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_31: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_24 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_18 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_54: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_31 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_17: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubpd_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_16: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubpd_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_59: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_23: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubpd_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_22: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubpd_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_58: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_30: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_58 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_59 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_53: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_30 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_15: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubps_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_14: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubps_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_57: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_21: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubps_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_20: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubps_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_56: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_29: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_56 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_57 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_52: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_13: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddsd_xmm_xmm_xmm_xmmm64 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_19: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddsd_xmm_xmm_xmmm64_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_28: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_13 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_51: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_12: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddss_xmm_xmm_xmm_xmmm32 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_18: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddss_xmm_xmm_xmmm32_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_27: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_12 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_50: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_11: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddpd_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_10: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddpd_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_55: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_17: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddpd_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_16: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddpd_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_54: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_26: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_54 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_55 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_49: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_9: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddps_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_8: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddps_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_53: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_15: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddps_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_14: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddps_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_52: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_25: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_52 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_53 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_48: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_25 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_11: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpcmpistri_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpcmpistri_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_51: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_47: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_51 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_10: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpcmpistrm_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpcmpistrm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_50: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_46: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_50 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_3_1: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpcmpestri_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpcmpestri64_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_49: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_3_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_45: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_49 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_3: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpcmpestrm_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpcmpestrm64_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_48: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_44: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_48 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_7: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubaddpd_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_6: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubaddpd_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_47: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_13: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubaddpd_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_12: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubaddpd_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_46: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_24: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_46 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_47 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_43: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_24 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_5: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubaddps_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_4: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubaddps_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_45: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_11: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmsubaddps_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_10: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmsubaddps_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_44: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_23: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_44 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_45 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_42: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_3: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddsubpd_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_2: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddsubpd_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_43: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_9: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddsubpd_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_8: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddsubpd_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_42: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_22: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_42 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_43 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_41: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W_1: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddsubps_ymm_ymm_ymm_ymmm256 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS4_W: OpCodeHandler_VEX_VHIs4W = OpCodeHandler_VEX_VHIs4W {
	decode: OpCodeHandler_VEX_VHIs4W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddsubps_xmm_xmm_xmm_xmmm128 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_41: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS4_W_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_7: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vfmaddsubps_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_6: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vfmaddsubps_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_40: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_21: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_40 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_41 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_40: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_5: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpblendvb_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_4: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpblendvb_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_39: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_20: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_39 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_39: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_3: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vblendvpd_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_2: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vblendvpd_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_38: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_19: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_38 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_38: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4_1: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vblendvps_ymm_ymm_ymmm256_ymm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS4: OpCodeHandler_VEX_VHWIs4 = OpCodeHandler_VEX_VHWIs4 {
	decode: OpCodeHandler_VEX_VHWIs4::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vblendvps_xmm_xmm_xmmm128_xmm as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_37: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS4_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_18: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_37 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_37: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS5_W_3: OpCodeHandler_VEX_VHIs5W = OpCodeHandler_VEX_VHIs5W {
	decode: OpCodeHandler_VEX_VHIs5W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpermil2pd_ymm_ymm_ymm_ymmm256_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS5_W_2: OpCodeHandler_VEX_VHIs5W = OpCodeHandler_VEX_VHIs5W {
	decode: OpCodeHandler_VEX_VHIs5W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpermil2pd_xmm_xmm_xmm_xmmm128_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_36: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS5_W_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS5_W_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS5_3: OpCodeHandler_VEX_VHWIs5 = OpCodeHandler_VEX_VHWIs5 {
	decode: OpCodeHandler_VEX_VHWIs5::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpermil2pd_ymm_ymm_ymmm256_ymm_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS5_2: OpCodeHandler_VEX_VHWIs5 = OpCodeHandler_VEX_VHWIs5 {
	decode: OpCodeHandler_VEX_VHWIs5::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpermil2pd_xmm_xmm_xmmm128_xmm_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_35: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS5_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS5_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_17: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_35 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_36 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_36: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS5_W_1: OpCodeHandler_VEX_VHIs5W = OpCodeHandler_VEX_VHIs5W {
	decode: OpCodeHandler_VEX_VHIs5W::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpermil2ps_ymm_ymm_ymm_ymmm256_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHIS5_W: OpCodeHandler_VEX_VHIs5W = OpCodeHandler_VEX_VHIs5W {
	decode: OpCodeHandler_VEX_VHIs5W::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpermil2ps_xmm_xmm_xmm_xmmm128_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_34: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHIS5_W }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHIS5_W_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS5_1: OpCodeHandler_VEX_VHWIs5 = OpCodeHandler_VEX_VHWIs5 {
	decode: OpCodeHandler_VEX_VHWIs5::decode,
	has_modrm: true,
	base_reg: Register::YMM0,
	code: Code::VEX_Vpermil2ps_ymm_ymm_ymmm256_ymm_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIS5: OpCodeHandler_VEX_VHWIs5 = OpCodeHandler_VEX_VHWIs5 {
	decode: OpCodeHandler_VEX_VHWIs5::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code: Code::VEX_Vpermil2ps_xmm_xmm_xmmm128_xmm_imm2 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_33: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIS5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIS5_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_16: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_33 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_34 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_35: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_21: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vperm2i128_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_32: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_15: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_32 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_34: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_20: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vpclmulqdq_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_19: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpclmulqdq_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_31: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_33: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_31 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_18: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vmpsadbw_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_17: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vmpsadbw_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_30: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_32: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_30 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_16: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vdppd_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_29: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_31: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_29 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_15: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vdpps_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_14: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vdpps_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_28: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_30: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_28 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WVIB_3: OpCodeHandler_VEX_WVIb = OpCodeHandler_VEX_WVIb {
	decode: OpCodeHandler_VEX_WVIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vextracti128_xmmm128_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_27: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_WVIB_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_14: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_27 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_29: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_4_1: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vinserti128_ymm_ymm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_26: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_4_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_13: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_26 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_28: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTLQ_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftlq_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTLD_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftld_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_12: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTLD_K_K_IMM8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTLQ_K_K_IMM8 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_25: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_27: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_25 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTLW_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftlw_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTLB_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftlb_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_11: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTLB_K_K_IMM8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTLW_K_K_IMM8 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_24: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_26: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_24 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTRQ_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftrq_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTRD_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftrd_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_10: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTRD_K_K_IMM8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTRQ_K_K_IMM8 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_23: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_25: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_23 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTRW_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftrw_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VK_RK_IB_VEX_KSHIFTRB_K_K_IMM8: OpCodeHandler_VEX_VK_RK_Ib = OpCodeHandler_VEX_VK_RK_Ib {
	decode: OpCodeHandler_VEX_VK_RK_Ib::decode,
	has_modrm: true,
	code: Code::VEX_Kshiftrb_k_k_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_9: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTRB_K_K_IMM8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VK_RK_IB_VEX_KSHIFTRW_K_K_IMM8 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_22: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_W_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_24: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_22 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHEV_IB_1: OpCodeHandler_VEX_VHEvIb = OpCodeHandler_VEX_VHEvIb {
	decode: OpCodeHandler_VEX_VHEvIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vpinsrd_xmm_xmm_rm32_imm8 as u32,
	code_w1: Code::VEX_Vpinsrq_xmm_xmm_rm64_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_21: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHEV_IB_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_23: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_21 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_13: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vinsertps_xmm_xmm_xmmm32_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_20: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_22: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_20 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHEV_IB: OpCodeHandler_VEX_VHEvIb = OpCodeHandler_VEX_VHEvIb {
	decode: OpCodeHandler_VEX_VHEvIb::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code_w0: Code::VEX_Vpinsrb_xmm_xmm_r32m8_imm8 as u32,
	code_w1: Code::VEX_Vpinsrb_xmm_xmm_r64m8_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_19: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHEV_IB }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_21: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_19 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WVIB_2: OpCodeHandler_VEX_WVIb = OpCodeHandler_VEX_WVIb {
	decode: OpCodeHandler_VEX_WVIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vcvtps2ph_xmmm128_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WVIB_1: OpCodeHandler_VEX_WVIb = OpCodeHandler_VEX_WVIb {
	decode: OpCodeHandler_VEX_WVIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code: Code::VEX_Vcvtps2ph_xmmm64_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_18: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_WVIB_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_WVIB_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_8: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_18 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_20: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_WVIB: OpCodeHandler_VEX_WVIb = OpCodeHandler_VEX_WVIb {
	decode: OpCodeHandler_VEX_WVIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::YMM0,
	code: Code::VEX_Vextractf128_xmmm128_ymm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_17: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_WVIB }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_7: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_17 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_19: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_4: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vinsertf128_ymm_ymm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_16: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_6: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_16 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_18: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_ED_V_IB: OpCodeHandler_VEX_Ed_V_Ib = OpCodeHandler_VEX_Ed_V_Ib {
	decode: OpCodeHandler_VEX_Ed_V_Ib::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vextractps_rm32_xmm_imm8 as u32,
	code64: Code::VEX_Vextractps_r64m32_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_15: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_ED_V_IB }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_17: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_15 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_M_VX_IB_2: OpCodeHandler_VEX_GvM_VX_Ib = OpCodeHandler_VEX_GvM_VX_Ib {
	decode: OpCodeHandler_VEX_GvM_VX_Ib::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vpextrd_rm32_xmm_imm8 as u32,
	code64: Code::VEX_Vpextrq_rm64_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_14: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_M_VX_IB_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_16: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_14 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_M_VX_IB_1: OpCodeHandler_VEX_GvM_VX_Ib = OpCodeHandler_VEX_GvM_VX_Ib {
	decode: OpCodeHandler_VEX_GvM_VX_Ib::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vpextrw_r32m16_xmm_imm8 as u32,
	code64: Code::VEX_Vpextrw_r64m16_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_13: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_M_VX_IB_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_15: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_13 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_GV_M_VX_IB: OpCodeHandler_VEX_GvM_VX_Ib = OpCodeHandler_VEX_GvM_VX_Ib {
	decode: OpCodeHandler_VEX_GvM_VX_Ib::decode,
	has_modrm: true,
	base_reg: Register::XMM0,
	code32: Code::VEX_Vpextrb_r32m8_xmm_imm8 as u32,
	code64: Code::VEX_Vpextrb_r64m8_xmm_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_12: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_GV_M_VX_IB }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_14: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_12: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vpalignr_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_11: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpalignr_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_11: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_12 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_13: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_11 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_10: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vpblendw_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_9: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpblendw_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_10: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_12: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_10 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_8: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vblendpd_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_7: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vblendpd_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_9: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_11: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_6: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vblendps_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_5: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vblendps_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_8: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_10: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_4: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vroundsd_xmm_xmm_xmmm64_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_9: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_3: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vroundss_xmm_xmm_xmmm32_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_8: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_9: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vroundpd_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vroundpd_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_8: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vroundpd_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vroundpd_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_7: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_8 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_9 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_7: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_7: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vroundps_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vroundps_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_6: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vroundps_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vroundps_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_6: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_7 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_6: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_6 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_2: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vperm2f128_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_5: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_5: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_5: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_5: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vpermilpd_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vpermilpd_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_4: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpermilpd_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpermilpd_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_4: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_5 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_4: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_4: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_4 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_3: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vpermilps_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vpermilps_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_2: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	code_w0: Code::VEX_Vpermilps_xmm_xmmm128_imm8 as u32,
	code_w1: Code::VEX_Vpermilps_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_3: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_3: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_3: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_3 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2_1: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	base_reg3: Register::YMM0,
	code: Code::VEX_Vpblendd_ymm_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VHWIB_2: OpCodeHandler_VEX_VHWIb = OpCodeHandler_VEX_VHWIb {
	decode: OpCodeHandler_VEX_VHWIb::decode,
	has_modrm: true,
	base_reg1: Register::XMM0,
	base_reg2: Register::XMM0,
	base_reg3: Register::XMM0,
	code: Code::VEX_Vpblendd_xmm_xmm_xmmm128_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_2: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_VHWIB_2_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_2: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_2: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2_1: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vpermpd_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vpermpd_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH_1: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W_1: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH_1 }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4_1: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W_1 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VWIB_2: OpCodeHandler_VEX_VWIb = OpCodeHandler_VEX_VWIb {
	decode: OpCodeHandler_VEX_VWIb::decode,
	has_modrm: true,
	base_reg1: Register::YMM0,
	base_reg2: Register::YMM0,
	code_w0: Code::VEX_Vpermq_ymm_ymmm256_imm8 as u32,
	code_w1: Code::VEX_Vpermq_ymm_ymmm256_imm8 as u32,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_VECTOR_LENGTH: OpCodeHandler_VectorLength_VEX = OpCodeHandler_VectorLength_VEX {
	decode: OpCodeHandler_VectorLength_VEX::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VWIB_2 }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_W: OpCodeHandler_W = OpCodeHandler_W {
	decode: OpCodeHandler_W::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_VECTOR_LENGTH }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_INVALID: OpCodeHandler_Invalid = OpCodeHandler_Invalid {
	decode: OpCodeHandler_Invalid::decode,
	has_modrm: true,
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static GEN_MANDATORY_PREFIX2_4: OpCodeHandler_MandatoryPrefix2 = OpCodeHandler_MandatoryPrefix2 {
	decode: OpCodeHandler_MandatoryPrefix2::decode,
	has_modrm: true,
	handlers: [
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_W }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
		unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	],
};

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static HANDLERS_GRP_0_F71: [&OpCodeHandler; 8] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_312 }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_313 }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_314 }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
];

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static HANDLERS_GRP_0_F72: [&OpCodeHandler; 8] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_309 }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_310 }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_311 }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
];

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static HANDLERS_GRP_0_F73: [&OpCodeHandler; 8] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_305 }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_306 }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_307 }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_308 }.to },
];

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static HANDLERS_GRP_0_FAE: [&OpCodeHandler; 8] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_303 }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_304 }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
];

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
static HANDLERS_GRP_0_F38_F3: [&OpCodeHandler; 8] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_179 }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_180 }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_181 }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
];

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
pub(crate) static HANDLERS_VEX_0F38XX: [&OpCodeHandler; 0x100] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_68 }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_69 }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_70 }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_71 }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_72 }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_73 }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_74 }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_75 }.to },
	/*08*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_76 }.to },
	/*09*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_77 }.to },
	/*0A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_78 }.to },
	/*0B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_79 }.to },
	/*0C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_80 }.to },
	/*0D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_81 }.to },
	/*0E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_82 }.to },
	/*0F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_83 }.to },
	/*10*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*11*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*12*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*13*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_84 }.to },
	/*14*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*15*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*16*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_85 }.to },
	/*17*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_86 }.to },
	/*18*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_87 }.to },
	/*19*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_88 }.to },
	/*1A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_89 }.to },
	/*1B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_90 }.to },
	/*1D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_91 }.to },
	/*1E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_92 }.to },
	/*1F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*20*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_93 }.to },
	/*21*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_94 }.to },
	/*22*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_95 }.to },
	/*23*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_96 }.to },
	/*24*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_97 }.to },
	/*25*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_98 }.to },
	/*26*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*27*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*28*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_99 }.to },
	/*29*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_100 }.to },
	/*2A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_101 }.to },
	/*2B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_102 }.to },
	/*2C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_103 }.to },
	/*2D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_104 }.to },
	/*2E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_105 }.to },
	/*2F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_106 }.to },
	/*30*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_107 }.to },
	/*31*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_108 }.to },
	/*32*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_109 }.to },
	/*33*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_110 }.to },
	/*34*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_111 }.to },
	/*35*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_112 }.to },
	/*36*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_113 }.to },
	/*37*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_114 }.to },
	/*38*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_115 }.to },
	/*39*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_116 }.to },
	/*3A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_117 }.to },
	/*3B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_118 }.to },
	/*3C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_119 }.to },
	/*3D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_120 }.to },
	/*3E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_121 }.to },
	/*3F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_122 }.to },
	/*40*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_123 }.to },
	/*41*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_124 }.to },
	/*42*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*43*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*44*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*45*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_125 }.to },
	/*46*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_126 }.to },
	/*47*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_127 }.to },
	/*48*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*49*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*50*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*51*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*52*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*53*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*54*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*55*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*56*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*57*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*58*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_128 }.to },
	/*59*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_129 }.to },
	/*5A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_130 }.to },
	/*5B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*5C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*5D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*5E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*5F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*60*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*61*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*62*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*63*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*64*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*65*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*66*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*67*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*68*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*69*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*6A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*6B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*6C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*6D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*6E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*6F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*70*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*71*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*72*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*73*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*74*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*75*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*76*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*77*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*78*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_131 }.to },
	/*79*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_132 }.to },
	/*7A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*80*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*81*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*82*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*83*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*84*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*85*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*86*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*87*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*88*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*89*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_133 }.to },
	/*8D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_134 }.to },
	/*8F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*90*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_135 }.to },
	/*91*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_136 }.to },
	/*92*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_137 }.to },
	/*93*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_138 }.to },
	/*94*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*95*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*96*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_139 }.to },
	/*97*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_140 }.to },
	/*98*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_141 }.to },
	/*99*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_142 }.to },
	/*9A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_143 }.to },
	/*9B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_144 }.to },
	/*9C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_145 }.to },
	/*9D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_146 }.to },
	/*9E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_147 }.to },
	/*9F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_148 }.to },
	/*A0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A6*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_149 }.to },
	/*A7*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_150 }.to },
	/*A8*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_151 }.to },
	/*A9*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_152 }.to },
	/*AA*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_153 }.to },
	/*AB*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_154 }.to },
	/*AC*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_155 }.to },
	/*AD*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_156 }.to },
	/*AE*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_157 }.to },
	/*AF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_158 }.to },
	/*B0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B6*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_159 }.to },
	/*B7*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_160 }.to },
	/*B8*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_161 }.to },
	/*B9*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_162 }.to },
	/*BA*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_163 }.to },
	/*BB*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_164 }.to },
	/*BC*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_165 }.to },
	/*BD*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_166 }.to },
	/*BE*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_167 }.to },
	/*BF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_168 }.to },
	/*C0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_169 }.to },
	/*D0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DB*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_170 }.to },
	/*DC*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_171 }.to },
	/*DD*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_172 }.to },
	/*DE*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_173 }.to },
	/*DF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_174 }.to },
	/*E0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*ED*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F2*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_175 }.to },
	/*F3*/unsafe { HandlerTransmuter { from: &GEN_GROUP }.to },
	/*F4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F5*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_176 }.to },
	/*F6*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_177 }.to },
	/*F7*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_178 }.to },
	/*F8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
];

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
pub(crate) static HANDLERS_VEX_0F3AXX: [&OpCodeHandler; 0x100] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4 }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_1 }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_2 }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_3 }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_4 }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_5 }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*08*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_6 }.to },
	/*09*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_7 }.to },
	/*0A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_8 }.to },
	/*0B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_9 }.to },
	/*0C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_10 }.to },
	/*0D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_11 }.to },
	/*0E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_12 }.to },
	/*0F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_13 }.to },
	/*10*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*11*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*12*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*13*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*14*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_14 }.to },
	/*15*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_15 }.to },
	/*16*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_16 }.to },
	/*17*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_17 }.to },
	/*18*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_18 }.to },
	/*19*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_19 }.to },
	/*1A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_20 }.to },
	/*1E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*20*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_21 }.to },
	/*21*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_22 }.to },
	/*22*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_23 }.to },
	/*23*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*24*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*25*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*26*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*27*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*28*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*29*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*2A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*2B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*2C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*2D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*2E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*2F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*30*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_24 }.to },
	/*31*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_25 }.to },
	/*32*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_26 }.to },
	/*33*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_27 }.to },
	/*34*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*35*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*36*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*37*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*38*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_28 }.to },
	/*39*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_29 }.to },
	/*3A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*40*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_30 }.to },
	/*41*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_31 }.to },
	/*42*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_32 }.to },
	/*43*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*44*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_33 }.to },
	/*45*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*46*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_34 }.to },
	/*47*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*48*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_35 }.to },
	/*49*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_36 }.to },
	/*4A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_37 }.to },
	/*4B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_38 }.to },
	/*4C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_39 }.to },
	/*4D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*50*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*51*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*52*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*53*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*54*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*55*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*56*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*57*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*58*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*59*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*5A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*5B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*5C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_40 }.to },
	/*5D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_41 }.to },
	/*5E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_42 }.to },
	/*5F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_43 }.to },
	/*60*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_44 }.to },
	/*61*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_45 }.to },
	/*62*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_46 }.to },
	/*63*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_47 }.to },
	/*64*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*65*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*66*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*67*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*68*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_48 }.to },
	/*69*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_49 }.to },
	/*6A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_50 }.to },
	/*6B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_51 }.to },
	/*6C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_52 }.to },
	/*6D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_53 }.to },
	/*6E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_54 }.to },
	/*6F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_55 }.to },
	/*70*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*71*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*72*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*73*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*74*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*75*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*76*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*77*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*78*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_56 }.to },
	/*79*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_57 }.to },
	/*7A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_58 }.to },
	/*7B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_59 }.to },
	/*7C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_60 }.to },
	/*7D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_61 }.to },
	/*7E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_62 }.to },
	/*7F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_63 }.to },
	/*80*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*81*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*82*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*83*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*84*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*85*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*86*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*87*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*88*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*89*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*90*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*91*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*92*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*93*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*94*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*95*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*96*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*97*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*98*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*99*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CE*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_64 }.to },
	/*CF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_65 }.to },
	/*D0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*DF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_66 }.to },
	/*E0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*E9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*ED*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*EF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F0*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_67 }.to },
	/*F1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*F9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*FF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
];

#[cfg_attr(feature = "cargo-fmt", rustfmt::skip)]
pub(crate) static HANDLERS_VEX_0FXX: [&OpCodeHandler; 0x100] = [
	/*00*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*01*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*02*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*03*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*04*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*05*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*06*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*07*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*08*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*09*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*0A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*0B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*0C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*0D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*0E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*0F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*10*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_182 }.to },
	/*11*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_183 }.to },
	/*12*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_184 }.to },
	/*13*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_185 }.to },
	/*14*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_186 }.to },
	/*15*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_187 }.to },
	/*16*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_188 }.to },
	/*17*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_189 }.to },
	/*18*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*19*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*1F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*20*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*21*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*22*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*23*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*24*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*25*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*26*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*27*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*28*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_190 }.to },
	/*29*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_191 }.to },
	/*2A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_192 }.to },
	/*2B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_193 }.to },
	/*2C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_194 }.to },
	/*2D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_195 }.to },
	/*2E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_196 }.to },
	/*2F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_197 }.to },
	/*30*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*31*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*32*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*33*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*34*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*35*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*36*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*37*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*38*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*39*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*3F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*40*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*41*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_198 }.to },
	/*42*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_199 }.to },
	/*43*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*44*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_200 }.to },
	/*45*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_201 }.to },
	/*46*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_202 }.to },
	/*47*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_203 }.to },
	/*48*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*49*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_204 }.to },
	/*4B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_205 }.to },
	/*4C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*4F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*50*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_206 }.to },
	/*51*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_207 }.to },
	/*52*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_208 }.to },
	/*53*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_209 }.to },
	/*54*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_210 }.to },
	/*55*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_211 }.to },
	/*56*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_212 }.to },
	/*57*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_213 }.to },
	/*58*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_214 }.to },
	/*59*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_215 }.to },
	/*5A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_216 }.to },
	/*5B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_217 }.to },
	/*5C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_218 }.to },
	/*5D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_219 }.to },
	/*5E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_220 }.to },
	/*5F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_221 }.to },
	/*60*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_222 }.to },
	/*61*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_223 }.to },
	/*62*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_224 }.to },
	/*63*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_225 }.to },
	/*64*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_226 }.to },
	/*65*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_227 }.to },
	/*66*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_228 }.to },
	/*67*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_229 }.to },
	/*68*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_230 }.to },
	/*69*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_231 }.to },
	/*6A*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_232 }.to },
	/*6B*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_233 }.to },
	/*6C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_234 }.to },
	/*6D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_235 }.to },
	/*6E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_236 }.to },
	/*6F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_237 }.to },
	/*70*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_238 }.to },
	/*71*/unsafe { HandlerTransmuter { from: &GEN_GROUP_1 }.to },
	/*72*/unsafe { HandlerTransmuter { from: &GEN_GROUP_2 }.to },
	/*73*/unsafe { HandlerTransmuter { from: &GEN_GROUP_3 }.to },
	/*74*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_239 }.to },
	/*75*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_240 }.to },
	/*76*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_241 }.to },
	/*77*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_NO_MOD_RM }.to },
	/*78*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*79*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*7C*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_242 }.to },
	/*7D*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_243 }.to },
	/*7E*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_244 }.to },
	/*7F*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_245 }.to },
	/*80*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*81*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*82*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*83*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*84*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*85*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*86*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*87*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*88*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*89*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*8F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*90*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_246 }.to },
	/*91*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_247 }.to },
	/*92*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_248 }.to },
	/*93*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_249 }.to },
	/*94*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*95*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*96*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*97*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*98*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_250 }.to },
	/*99*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_251 }.to },
	/*9A*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9B*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9C*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9D*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9E*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*9F*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*A9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*AE*/unsafe { HandlerTransmuter { from: &GEN_GROUP_4 }.to },
	/*AF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B2*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B4*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B5*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B6*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*B9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*BF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C0*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C1*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C2*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_252 }.to },
	/*C3*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C4*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_253 }.to },
	/*C5*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_254 }.to },
	/*C6*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_255 }.to },
	/*C7*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C8*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*C9*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CA*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CB*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CC*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CD*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CE*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*CF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
	/*D0*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_256 }.to },
	/*D1*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_257 }.to },
	/*D2*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_258 }.to },
	/*D3*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_259 }.to },
	/*D4*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_260 }.to },
	/*D5*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_261 }.to },
	/*D6*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_262 }.to },
	/*D7*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_263 }.to },
	/*D8*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_264 }.to },
	/*D9*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_265 }.to },
	/*DA*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_266 }.to },
	/*DB*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_267 }.to },
	/*DC*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_268 }.to },
	/*DD*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_269 }.to },
	/*DE*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_270 }.to },
	/*DF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_271 }.to },
	/*E0*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_272 }.to },
	/*E1*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_273 }.to },
	/*E2*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_274 }.to },
	/*E3*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_275 }.to },
	/*E4*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_276 }.to },
	/*E5*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_277 }.to },
	/*E6*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_278 }.to },
	/*E7*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_279 }.to },
	/*E8*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_280 }.to },
	/*E9*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_281 }.to },
	/*EA*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_282 }.to },
	/*EB*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_283 }.to },
	/*EC*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_284 }.to },
	/*ED*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_285 }.to },
	/*EE*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_286 }.to },
	/*EF*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_287 }.to },
	/*F0*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_288 }.to },
	/*F1*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_289 }.to },
	/*F2*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_290 }.to },
	/*F3*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_291 }.to },
	/*F4*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_292 }.to },
	/*F5*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_293 }.to },
	/*F6*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_294 }.to },
	/*F7*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_295 }.to },
	/*F8*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_296 }.to },
	/*F9*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_297 }.to },
	/*FA*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_298 }.to },
	/*FB*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_299 }.to },
	/*FC*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_300 }.to },
	/*FD*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_301 }.to },
	/*FE*/unsafe { HandlerTransmuter { from: &GEN_MANDATORY_PREFIX2_4_302 }.to },
	/*FF*/unsafe { HandlerTransmuter { from: &GEN_INVALID }.to },
];
