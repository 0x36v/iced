#
# Copyright (C) 2018-2019 de4dot@gmail.com
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

# ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è

"""
Size of a memory reference
"""

# pylint: disable=invalid-name
# pylint: disable=line-too-long
# pylint: disable=redefined-builtin
# pylint: disable=too-many-lines

from typing import List

Unknown: int = 0
"""
Unknown size or the instruction doesn't reference any memory (eg. ``LEA``)
"""
UInt8: int = 1
"""
Memory location contains a ``u8``
"""
UInt16: int = 2
"""
Memory location contains a ``u16``
"""
UInt32: int = 3
"""
Memory location contains a ``u32``
"""
UInt52: int = 4
"""
Memory location contains a ``u52``
"""
UInt64: int = 5
"""
Memory location contains a ``u64``
"""
UInt128: int = 6
"""
Memory location contains a ``u128``
"""
UInt256: int = 7
"""
Memory location contains a ``u256``
"""
UInt512: int = 8
"""
Memory location contains a ``u512``
"""
Int8: int = 9
"""
Memory location contains a ``i8``
"""
Int16: int = 10
"""
Memory location contains a ``i16``
"""
Int32: int = 11
"""
Memory location contains a ``i32``
"""
Int64: int = 12
"""
Memory location contains a ``i64``
"""
Int128: int = 13
"""
Memory location contains a ``i128``
"""
Int256: int = 14
"""
Memory location contains a ``i256``
"""
Int512: int = 15
"""
Memory location contains a ``i512``
"""
SegPtr16: int = 16
"""
Memory location contains a seg:ptr pair, ``u16`` (offset) + ``u16`` (segment/selector)
"""
SegPtr32: int = 17
"""
Memory location contains a seg:ptr pair, ``u32`` (offset) + ``u16`` (segment/selector)
"""
SegPtr64: int = 18
"""
Memory location contains a seg:ptr pair, ``u64`` (offset) + ``u16`` (segment/selector)
"""
WordOffset: int = 19
"""
Memory location contains a 16-bit offset (``JMP/CALL WORD PTR [mem]``)
"""
DwordOffset: int = 20
"""
Memory location contains a 32-bit offset (``JMP/CALL DWORD PTR [mem]``)
"""
QwordOffset: int = 21
"""
Memory location contains a 64-bit offset (``JMP/CALL QWORD PTR [mem]``)
"""
Bound16_WordWord: int = 22
"""
Memory location contains two ``u16``s (16-bit ``BOUND``)
"""
Bound32_DwordDword: int = 23
"""
Memory location contains two ``u32``s (32-bit ``BOUND``)
"""
Bnd32: int = 24
"""
32-bit ``BNDMOV``, 2 x ``u32``
"""
Bnd64: int = 25
"""
64-bit ``BNDMOV``, 2 x ``u64``
"""
Fword6: int = 26
"""
Memory location contains a 16-bit limit and a 32-bit address (eg. ``LGDTW``, ``LGDTD``)
"""
Fword10: int = 27
"""
Memory location contains a 16-bit limit and a 64-bit address (eg. ``LGDTQ``)
"""
Float16: int = 28
"""
Memory location contains a ``f16``
"""
Float32: int = 29
"""
Memory location contains a ``f32``
"""
Float64: int = 30
"""
Memory location contains a ``f64``
"""
Float80: int = 31
"""
Memory location contains a ``f80``
"""
Float128: int = 32
"""
Memory location contains a ``f128``
"""
BFloat16: int = 33
"""
Memory location contains a ``bfloat16``
"""
FpuEnv14: int = 34
"""
Memory location contains a 14-byte FPU environment (16-bit ``FLDENV``/``FSTENV``)
"""
FpuEnv28: int = 35
"""
Memory location contains a 28-byte FPU environment (32/64-bit ``FLDENV``/``FSTENV``)
"""
FpuState94: int = 36
"""
Memory location contains a 94-byte FPU environment (16-bit ``FSAVE``/``FRSTOR``)
"""
FpuState108: int = 37
"""
Memory location contains a 108-byte FPU environment (32/64-bit ``FSAVE``/``FRSTOR``)
"""
Fxsave_512Byte: int = 38
"""
Memory location contains 512-bytes of ``FXSAVE``/``FXRSTOR`` data
"""
Fxsave64_512Byte: int = 39
"""
Memory location contains 512-bytes of ``FXSAVE64``/``FXRSTOR64`` data
"""
Xsave: int = 40
"""
32-bit ``XSAVE`` area
"""
Xsave64: int = 41
"""
64-bit ``XSAVE`` area
"""
Bcd: int = 42
"""
Memory location contains a 10-byte ``bcd`` value (``FBLD``/``FBSTP``)
"""
Tilecfg: int = 43
"""
64-bit location: TILECFG (``LDTILECFG``/``STTILECFG``)
"""
Tile: int = 44
"""
Tile data
"""
SegmentDescSelector: int = 45
"""
80-bit segment descriptor and selector: 0-7 = descriptor, 8-9 = selector
"""
KLHandleAes128: int = 46
"""
384-bit AES 128 handle (Key Locker)
"""
KLHandleAes256: int = 47
"""
512-bit AES 256 handle (Key Locker)
"""
Packed16_UInt8: int = 48
"""
16-bit location: 2 x ``u8``
"""
Packed16_Int8: int = 49
"""
16-bit location: 2 x ``i8``
"""
Packed32_UInt8: int = 50
"""
32-bit location: 4 x ``u8``
"""
Packed32_Int8: int = 51
"""
32-bit location: 4 x ``i8``
"""
Packed32_UInt16: int = 52
"""
32-bit location: 2 x ``u16``
"""
Packed32_Int16: int = 53
"""
32-bit location: 2 x ``i16``
"""
Packed32_BFloat16: int = 54
"""
32-bit location: 2 x ``bfloat16``
"""
Packed64_UInt8: int = 55
"""
64-bit location: 8 x ``u8``
"""
Packed64_Int8: int = 56
"""
64-bit location: 8 x ``i8``
"""
Packed64_UInt16: int = 57
"""
64-bit location: 4 x ``u16``
"""
Packed64_Int16: int = 58
"""
64-bit location: 4 x ``i16``
"""
Packed64_UInt32: int = 59
"""
64-bit location: 2 x ``u32``
"""
Packed64_Int32: int = 60
"""
64-bit location: 2 x ``i32``
"""
Packed64_Float16: int = 61
"""
64-bit location: 4 x ``f16``
"""
Packed64_Float32: int = 62
"""
64-bit location: 2 x ``f32``
"""
Packed128_UInt8: int = 63
"""
128-bit location: 16 x ``u8``
"""
Packed128_Int8: int = 64
"""
128-bit location: 16 x ``i8``
"""
Packed128_UInt16: int = 65
"""
128-bit location: 8 x ``u16``
"""
Packed128_Int16: int = 66
"""
128-bit location: 8 x ``i16``
"""
Packed128_UInt32: int = 67
"""
128-bit location: 4 x ``u32``
"""
Packed128_Int32: int = 68
"""
128-bit location: 4 x ``i32``
"""
Packed128_UInt52: int = 69
"""
128-bit location: 2 x ``u52``
"""
Packed128_UInt64: int = 70
"""
128-bit location: 2 x ``u64``
"""
Packed128_Int64: int = 71
"""
128-bit location: 2 x ``i64``
"""
Packed128_Float16: int = 72
"""
128-bit location: 8 x ``f16``
"""
Packed128_Float32: int = 73
"""
128-bit location: 4 x ``f32``
"""
Packed128_Float64: int = 74
"""
128-bit location: 2 x ``f64``
"""
Packed128_2xBFloat16: int = 75
"""
128-bit location: 4 x (2 x ``bfloat16``)
"""
Packed256_UInt8: int = 76
"""
256-bit location: 32 x ``u8``
"""
Packed256_Int8: int = 77
"""
256-bit location: 32 x ``i8``
"""
Packed256_UInt16: int = 78
"""
256-bit location: 16 x ``u16``
"""
Packed256_Int16: int = 79
"""
256-bit location: 16 x ``i16``
"""
Packed256_UInt32: int = 80
"""
256-bit location: 8 x ``u32``
"""
Packed256_Int32: int = 81
"""
256-bit location: 8 x ``i32``
"""
Packed256_UInt52: int = 82
"""
256-bit location: 4 x ``u52``
"""
Packed256_UInt64: int = 83
"""
256-bit location: 4 x ``u64``
"""
Packed256_Int64: int = 84
"""
256-bit location: 4 x ``i64``
"""
Packed256_UInt128: int = 85
"""
256-bit location: 2 x ``u128``
"""
Packed256_Int128: int = 86
"""
256-bit location: 2 x ``i128``
"""
Packed256_Float16: int = 87
"""
256-bit location: 16 x ``f16``
"""
Packed256_Float32: int = 88
"""
256-bit location: 8 x ``f32``
"""
Packed256_Float64: int = 89
"""
256-bit location: 4 x ``f64``
"""
Packed256_Float128: int = 90
"""
256-bit location: 2 x ``f128``
"""
Packed256_2xBFloat16: int = 91
"""
256-bit location: 8 x (2 x ``bfloat16``)
"""
Packed512_UInt8: int = 92
"""
512-bit location: 64 x ``u8``
"""
Packed512_Int8: int = 93
"""
512-bit location: 64 x ``i8``
"""
Packed512_UInt16: int = 94
"""
512-bit location: 32 x ``u16``
"""
Packed512_Int16: int = 95
"""
512-bit location: 32 x ``i16``
"""
Packed512_UInt32: int = 96
"""
512-bit location: 16 x ``u32``
"""
Packed512_Int32: int = 97
"""
512-bit location: 16 x ``i32``
"""
Packed512_UInt52: int = 98
"""
512-bit location: 8 x ``u52``
"""
Packed512_UInt64: int = 99
"""
512-bit location: 8 x ``u64``
"""
Packed512_Int64: int = 100
"""
512-bit location: 8 x ``i64``
"""
Packed512_UInt128: int = 101
"""
256-bit location: 4 x ``u128``
"""
Packed512_Float32: int = 102
"""
512-bit location: 16 x ``f32``
"""
Packed512_Float64: int = 103
"""
512-bit location: 8 x ``f64``
"""
Packed512_2xBFloat16: int = 104
"""
512-bit location: 16 x (2 x ``bfloat16``)
"""
Broadcast64_UInt32: int = 105
"""
Broadcast ``u32`` to 64-bits
"""
Broadcast64_Int32: int = 106
"""
Broadcast ``i32`` to 64-bits
"""
Broadcast64_Float32: int = 107
"""
Broadcast ``f32`` to 64-bits
"""
Broadcast128_UInt32: int = 108
"""
Broadcast ``u32`` to 128-bits
"""
Broadcast128_Int32: int = 109
"""
Broadcast ``i32`` to 128-bits
"""
Broadcast128_UInt52: int = 110
"""
Broadcast ``u52`` to 128-bits
"""
Broadcast128_UInt64: int = 111
"""
Broadcast ``u64`` to 128-bits
"""
Broadcast128_Int64: int = 112
"""
Broadcast ``i64`` to 128-bits
"""
Broadcast128_Float32: int = 113
"""
Broadcast ``f32`` to 128-bits
"""
Broadcast128_Float64: int = 114
"""
Broadcast ``f64`` to 128-bits
"""
Broadcast256_UInt32: int = 115
"""
Broadcast ``u32`` to 256-bits
"""
Broadcast256_Int32: int = 116
"""
Broadcast ``i32`` to 256-bits
"""
Broadcast256_UInt52: int = 117
"""
Broadcast ``u52`` to 256-bits
"""
Broadcast256_UInt64: int = 118
"""
Broadcast ``u64`` to 256-bits
"""
Broadcast256_Int64: int = 119
"""
Broadcast ``i64`` to 256-bits
"""
Broadcast256_Float32: int = 120
"""
Broadcast ``f32`` to 256-bits
"""
Broadcast256_Float64: int = 121
"""
Broadcast ``f64`` to 256-bits
"""
Broadcast512_UInt32: int = 122
"""
Broadcast ``u32`` to 512-bits
"""
Broadcast512_Int32: int = 123
"""
Broadcast ``i32`` to 512-bits
"""
Broadcast512_UInt52: int = 124
"""
Broadcast ``u52`` to 512-bits
"""
Broadcast512_UInt64: int = 125
"""
Broadcast ``u64`` to 512-bits
"""
Broadcast512_Int64: int = 126
"""
Broadcast ``i64`` to 512-bits
"""
Broadcast512_Float32: int = 127
"""
Broadcast ``f32`` to 512-bits
"""
Broadcast512_Float64: int = 128
"""
Broadcast ``f64`` to 512-bits
"""
Broadcast128_2xInt16: int = 129
"""
Broadcast 2 x ``i16`` to 128-bits
"""
Broadcast256_2xInt16: int = 130
"""
Broadcast 2 x ``i16`` to 256-bits
"""
Broadcast512_2xInt16: int = 131
"""
Broadcast 2 x ``i16`` to 512-bits
"""
Broadcast128_2xUInt32: int = 132
"""
Broadcast 2 x ``u32`` to 128-bits
"""
Broadcast256_2xUInt32: int = 133
"""
Broadcast 2 x ``u32`` to 256-bits
"""
Broadcast512_2xUInt32: int = 134
"""
Broadcast 2 x ``u32`` to 512-bits
"""
Broadcast128_2xInt32: int = 135
"""
Broadcast 2 x ``i32`` to 128-bits
"""
Broadcast256_2xInt32: int = 136
"""
Broadcast 2 x ``i32`` to 256-bits
"""
Broadcast512_2xInt32: int = 137
"""
Broadcast 2 x ``i32`` to 512-bits
"""
Broadcast128_2xBFloat16: int = 138
"""
Broadcast 2 x ``bfloat16`` to 128-bits
"""
Broadcast256_2xBFloat16: int = 139
"""
Broadcast 2 x ``bfloat16`` to 256-bits
"""
Broadcast512_2xBFloat16: int = 140
"""
Broadcast 2 x ``bfloat16`` to 512-bits
"""

__all__: List[str] = []
