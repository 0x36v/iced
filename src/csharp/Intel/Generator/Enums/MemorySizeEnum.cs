/*
Copyright (C) 2018-2019 de4dot@gmail.com

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

namespace Generator.Enums {
	static class MemorySizeEnum {
		const string documentation = "Size of a memory reference";

		static EnumValue[] GetValues() =>
			new EnumValue[] {
				new EnumValue("Unknown", "Unknown size or the instruction doesn't reference any memory (eg. #(c:lea)#)"),
				new EnumValue("UInt8", "Memory location contains a #(t:u8)#"),
				new EnumValue("UInt16", "Memory location contains a #(t:u16)#"),
				new EnumValue("UInt32", "Memory location contains a #(t:u32)#"),
				new EnumValue("UInt52", "Memory location contains a #(t:u52)#"),
				new EnumValue("UInt64", "Memory location contains a #(t:u64)#"),
				new EnumValue("UInt128", "Memory location contains a #(t:u128)#"),
				new EnumValue("UInt256", "Memory location contains a #(t:u256)#"),
				new EnumValue("UInt512", "Memory location contains a #(t:u512)#"),
				new EnumValue("Int8", "Memory location contains a #(t:i8)#"),
				new EnumValue("Int16", "Memory location contains a #(t:i16)#"),
				new EnumValue("Int32", "Memory location contains a #(t:i32)#"),
				new EnumValue("Int64", "Memory location contains a #(t:i64)#"),
				new EnumValue("Int128", "Memory location contains a #(t:i128)#"),
				new EnumValue("Int256", "Memory location contains a #(t:i256)#"),
				new EnumValue("Int512", "Memory location contains a #(t:i512)#"),
				new EnumValue("SegPtr16", "Memory location contains a seg:ptr pair, #(t:u16)# (offset) + #(t:u16)# (segment/selector)"),
				new EnumValue("SegPtr32", "Memory location contains a seg:ptr pair, #(t:u32)# (offset) + #(t:u16)# (segment/selector)"),
				new EnumValue("SegPtr64", "Memory location contains a seg:ptr pair, #(t:u64)# (offset) + #(t:u16)# (segment/selector)"),
				new EnumValue("WordOffset", "Memory location contains a 16-bit offset (#(c:jmp/call word ptr [mem])#)"),
				new EnumValue("DwordOffset", "Memory location contains a 32-bit offset (#(c:jmp/call dword ptr [mem])#)"),
				new EnumValue("QwordOffset", "Memory location contains a 64-bit offset (#(c:jmp/call qword ptr [mem])#)"),
				new EnumValue("Bound16_WordWord", "Memory location contains two #(t:u16)#s (16-bit #(c:bound)#)"),
				new EnumValue("Bound32_DwordDword", "Memory location contains two #(t:u32)#s (32-bit #(c:bound)#)"),
				new EnumValue("Bnd32", "32-bit #(c:bndmov)#, 2 x #(t:u32)#"),
				new EnumValue("Bnd64", "64-bit #(c:bndmov)#, 2 x #(t:u64)#"),
				new EnumValue("Fword6", "Memory location contains a 16-bit limit and a 32-bit address (eg. #(c:lgdtw)#, #(c:lgdtd)#)"),
				new EnumValue("Fword10", "Memory location contains a 16-bit limit and a 64-bit address (eg. #(c:lgdtq)#)"),
				new EnumValue("Float16", "Memory location contains a #(t:f16)#"),
				new EnumValue("Float32", "Memory location contains a #(t:f32)#"),
				new EnumValue("Float64", "Memory location contains a #(t:f64)#"),
				new EnumValue("Float80", "Memory location contains a #(t:f80)#"),
				new EnumValue("Float128", "Memory location contains a #(t:f128)#"),
				new EnumValue("BFloat16", "Memory location contains a #(t:bf16)#"),
				new EnumValue("FpuEnv14", "Memory location contains a 14-byte FPU environment (16-bit #(c:fldenv)#/#(c:fstenv)#)"),
				new EnumValue("FpuEnv28", "Memory location contains a 28-byte FPU environment (32/64-bit #(c:fldenv)#/#(c:fstenv)#)"),
				new EnumValue("FpuState94", "Memory location contains a 94-byte FPU environment (16-bit #(c:fsave)#/#(c:frstor)#)"),
				new EnumValue("FpuState108", "Memory location contains a 108-byte FPU environment (32/64-bit #(c:fsave)#/#(c:frstor)#)"),
				new EnumValue("Fxsave_512Byte", "Memory location contains 512-bytes of #(c:fxsave)#/#(c:fxrstor)# data"),
				new EnumValue("Fxsave64_512Byte", "Memory location contains 512-bytes of #(c:fxsave64)#/#(c:fxrstor64)# data"),
				new EnumValue("Xsave", "32-bit #(c:XSAVE)# area"),
				new EnumValue("Xsave64", "64-bit #(c:XSAVE)# area"),
				new EnumValue("Bcd", "Memory location contains a 10-byte #(t:bcd)# value (#(c:fbld)#/#(c:fbstp)#)"),
				new EnumValue("Packed16_UInt8", "16 bit location: 2 x #(t:u8)#"),
				new EnumValue("Packed16_Int8", "16 bit location: 2 x #(t:i8)#"),
				new EnumValue("Packed32_UInt8", "32 bit location: 4 x #(t:u8)#"),
				new EnumValue("Packed32_Int8", "32 bit location: 4 x #(t:i8)#"),
				new EnumValue("Packed32_UInt16", "32 bit location: 2 x #(t:u16)#"),
				new EnumValue("Packed32_Int16", "32 bit location: 2 x #(t:i16)#"),
				new EnumValue("Packed32_BFloat16", "32 bit location: 2 x #(t:bf16)#"),
				new EnumValue("Packed64_UInt8", "64-bit location: 8 x #(t:u8)#"),
				new EnumValue("Packed64_Int8", "64-bit location: 8 x #(t:i8)#"),
				new EnumValue("Packed64_UInt16", "64-bit location: 4 x #(t:u16)#"),
				new EnumValue("Packed64_Int16", "64-bit location: 4 x #(t:i16)#"),
				new EnumValue("Packed64_UInt32", "64-bit location: 2 x #(t:u32)#"),
				new EnumValue("Packed64_Int32", "64-bit location: 2 x #(t:i32)#"),
				new EnumValue("Packed64_Float16", "64-bit location: 4 x #(t:f16)#"),
				new EnumValue("Packed64_Float32", "64-bit location: 2 x #(t:f32)#"),
				new EnumValue("Packed128_UInt8", "128 bit location: 16 x #(t:u8)#"),
				new EnumValue("Packed128_Int8", "128 bit location: 16 x #(t:i8)#"),
				new EnumValue("Packed128_UInt16", "128 bit location: 8 x #(t:u16)#"),
				new EnumValue("Packed128_Int16", "128 bit location: 8 x #(t:i16)#"),
				new EnumValue("Packed128_UInt32", "128 bit location: 4 x #(t:u32)#"),
				new EnumValue("Packed128_Int32", "128 bit location: 4 x #(t:i32)#"),
				new EnumValue("Packed128_UInt52", "128 bit location: 2 x #(t:u52)#"),
				new EnumValue("Packed128_UInt64", "128 bit location: 2 x #(t:u64)#"),
				new EnumValue("Packed128_Int64", "128 bit location: 2 x #(t:i64)#"),
				new EnumValue("Packed128_Float16", "128 bit location: 8 x #(t:f16)#"),
				new EnumValue("Packed128_Float32", "128 bit location: 4 x #(t:f32)#"),
				new EnumValue("Packed128_Float64", "128 bit location: 2 x #(t:f64)#"),
				new EnumValue("Packed128_2xBFloat16", "128 bit location: 4 x (2 x #(t:bf16)#)"),
				new EnumValue("Packed256_UInt8", "256 bit location: 32 x #(t:u8)#"),
				new EnumValue("Packed256_Int8", "256 bit location: 32 x #(t:i8)#"),
				new EnumValue("Packed256_UInt16", "256 bit location: 16 x #(t:u16)#"),
				new EnumValue("Packed256_Int16", "256 bit location: 16 x #(t:i16)#"),
				new EnumValue("Packed256_UInt32", "256 bit location: 8 x #(t:u32)#"),
				new EnumValue("Packed256_Int32", "256 bit location: 8 x #(t:i32)#"),
				new EnumValue("Packed256_UInt52", "256 bit location: 4 x #(t:u52)#"),
				new EnumValue("Packed256_UInt64", "256 bit location: 4 x #(t:u64)#"),
				new EnumValue("Packed256_Int64", "256 bit location: 4 x #(t:i64)#"),
				new EnumValue("Packed256_UInt128", "256 bit location: 2 x #(t:u128)#"),
				new EnumValue("Packed256_Int128", "256 bit location: 2 x #(t:i128)#"),
				new EnumValue("Packed256_Float16", "256 bit location: 16 x #(t:f16)#"),
				new EnumValue("Packed256_Float32", "256 bit location: 8 x #(t:f32)#"),
				new EnumValue("Packed256_Float64", "256 bit location: 4 x #(t:f64)#"),
				new EnumValue("Packed256_Float128", "256 bit location: 2 x #(t:f128)#"),
				new EnumValue("Packed256_2xBFloat16", "256 bit location: 8 x (2 x #(t:bf16)#)"),
				new EnumValue("Packed512_UInt8", "512 bit location: 64 x #(t:u8)#"),
				new EnumValue("Packed512_Int8", "512 bit location: 64 x #(t:i8)#"),
				new EnumValue("Packed512_UInt16", "512 bit location: 32 x #(t:u16)#"),
				new EnumValue("Packed512_Int16", "512 bit location: 32 x #(t:i16)#"),
				new EnumValue("Packed512_UInt32", "512 bit location: 16 x #(t:u32)#"),
				new EnumValue("Packed512_Int32", "512 bit location: 16 x #(t:i32)#"),
				new EnumValue("Packed512_UInt52", "512 bit location: 8 x #(t:u52)#"),
				new EnumValue("Packed512_UInt64", "512 bit location: 8 x #(t:u64)#"),
				new EnumValue("Packed512_Int64", "512 bit location: 8 x #(t:i64)#"),
				new EnumValue("Packed512_UInt128", "256 bit location: 4 x #(t:u128)#"),
				new EnumValue("Packed512_Float32", "512 bit location: 16 x #(t:f32)#"),
				new EnumValue("Packed512_Float64", "512 bit location: 8 x #(t:f64)#"),
				new EnumValue("Packed512_2xBFloat16", "512 bit location: 16 x (2 x #(t:bf16)#)"),
				new EnumValue("Broadcast64_UInt32", "Broadcast #(t:u32)# to 64 bits"),
				new EnumValue("Broadcast64_Int32", "Broadcast #(t:i32)# to 64 bits"),
				new EnumValue("Broadcast64_Float32", "Broadcast #(t:f32)# to 64 bits"),
				new EnumValue("Broadcast128_UInt32", "Broadcast #(t:u32)# to 128 bits"),
				new EnumValue("Broadcast128_Int32", "Broadcast #(t:i32)# to 128 bits"),
				new EnumValue("Broadcast128_UInt52", "Broadcast #(t:u52)# to 128 bits"),
				new EnumValue("Broadcast128_UInt64", "Broadcast #(t:u64)# to 128 bits"),
				new EnumValue("Broadcast128_Int64", "Broadcast #(t:i64)# to 128 bits"),
				new EnumValue("Broadcast128_Float32", "Broadcast #(t:f32)# to 128 bits"),
				new EnumValue("Broadcast128_Float64", "Broadcast #(t:f64)# to 128 bits"),
				new EnumValue("Broadcast256_UInt32", "Broadcast #(t:u32)# to 256 bits"),
				new EnumValue("Broadcast256_Int32", "Broadcast #(t:i32)# to 256 bits"),
				new EnumValue("Broadcast256_UInt52", "Broadcast #(t:u52)# to 256 bits"),
				new EnumValue("Broadcast256_UInt64", "Broadcast #(t:u64)# to 256 bits"),
				new EnumValue("Broadcast256_Int64", "Broadcast #(t:i64)# to 256 bits"),
				new EnumValue("Broadcast256_Float32", "Broadcast #(t:f32)# to 256 bits"),
				new EnumValue("Broadcast256_Float64", "Broadcast #(t:f64)# to 256 bits"),
				new EnumValue("Broadcast512_UInt32", "Broadcast #(t:u32)# to 512 bits"),
				new EnumValue("Broadcast512_Int32", "Broadcast #(t:i32)# to 512 bits"),
				new EnumValue("Broadcast512_UInt52", "Broadcast #(t:u52)# to 512 bits"),
				new EnumValue("Broadcast512_UInt64", "Broadcast #(t:u64)# to 512 bits"),
				new EnumValue("Broadcast512_Int64", "Broadcast #(t:i64)# to 512 bits"),
				new EnumValue("Broadcast512_Float32", "Broadcast #(t:f32)# to 512 bits"),
				new EnumValue("Broadcast512_Float64", "Broadcast #(t:f64)# to 512 bits"),
				new EnumValue("Broadcast128_2xInt16", "Broadcast 2 x #(t:i16)# to 128 bits"),
				new EnumValue("Broadcast256_2xInt16", "Broadcast 2 x #(t:i16)# to 256 bits"),
				new EnumValue("Broadcast512_2xInt16", "Broadcast 2 x #(t:i16)# to 512 bits"),
				new EnumValue("Broadcast128_2xUInt32", "Broadcast 2 x #(t:u32)# to 128 bits"),
				new EnumValue("Broadcast256_2xUInt32", "Broadcast 2 x #(t:u32)# to 256 bits"),
				new EnumValue("Broadcast512_2xUInt32", "Broadcast 2 x #(t:u32)# to 512 bits"),
				new EnumValue("Broadcast128_2xInt32", "Broadcast 2 x #(t:i32)# to 128 bits"),
				new EnumValue("Broadcast256_2xInt32", "Broadcast 2 x #(t:i32)# to 256 bits"),
				new EnumValue("Broadcast512_2xInt32", "Broadcast 2 x #(t:i32)# to 512 bits"),
				new EnumValue("Broadcast128_2xBFloat16", "Broadcast 2 x #(t:bf16)# to 128 bits"),
				new EnumValue("Broadcast256_2xBFloat16", "Broadcast 2 x #(t:bf16)# to 256 bits"),
				new EnumValue("Broadcast512_2xBFloat16", "Broadcast 2 x #(t:bf16)# to 512 bits"),
			};

		public static readonly EnumType Instance = new EnumType(EnumKind.MemorySize, documentation, GetValues(), EnumTypeFlags.Public);
	}
}
